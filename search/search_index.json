{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"DocuSnap-Backend Architecture Analysis","text":"<p>Welcome to the DocuSnap-Backend System Architecture Analysis documentation. This document provides a detailed analysis of the DocuSnap-Backend system architecture, technology stack, core modules, data flow, and deployment architecture, aiming to provide a comprehensive understanding of the system design and implementation.</p>"},{"location":"#document-overview","title":"Document Overview","text":"<p>This documentation is based on an in-depth analysis of the DocuSnap-Backend codebase and includes the following main sections:</p> <ul> <li>Project Overview: Introduction to the project background, target users, and core features</li> <li>Technology Stack: Details of the technologies and frameworks used in the system, along with selection rationale</li> <li>Architecture Design: Analysis of the overall architectural style, layered structure, and component relationships</li> <li>Core Modules: In-depth analysis of the system's five core functional modules</li> <li>Typical Workflows: Illustration of key business process data flows and processing steps</li> <li>Code Quality: Assessment of code quality, design pattern application, and improvement suggestions</li> <li>Deployment Architecture: Description of production environment deployment plans and technology stack</li> <li>Conclusions &amp; Recommendations: Quick start guide and optimization directions</li> </ul>"},{"location":"#system-overview","title":"System Overview","text":"<p>DocuSnap-Backend is a Flask-based backend service for OCR recognition and AI analysis of documents and forms. The system employs a three-layer architecture: backend server, OCR server, and LLM provider. The main features include:</p> <ol> <li>Document Processing: Converting document images to structured text</li> <li>Form Processing: Extracting fields and values from form images</li> <li>Form Auto-filling: Automatically filling forms based on existing information</li> </ol> <p>The system protects data transmission security through end-to-end encryption, improves concurrency through asynchronous task processing, and optimizes response speed for repeated requests using a caching mechanism.</p> <p></p>"},{"location":"#core-features","title":"Core Features","text":"<ul> <li>Three-layer Architecture: Backend server, OCR server, and LLM provider</li> <li>Asynchronous Processing: Using task queues and worker threads to handle time-consuming operations</li> <li>End-to-end Encryption: Using RSA and AES hybrid encryption to protect data security</li> <li>Caching Mechanism: Using SQLite to store task status and results</li> <li>Design Patterns: Applying various design patterns such as producer-consumer, strategy, and proxy</li> </ul>"},{"location":"#quick-navigation","title":"Quick Navigation","text":"<ul> <li>Background</li> <li>Technology Selection</li> <li>Architecture Overview</li> <li>Core Modules</li> <li>Typical Workflows</li> <li>Deployment Architecture</li> <li>Quick Start Guide</li> </ul>"},{"location":"architecture/diagrams/","title":"Architecture Diagrams","text":"<p>This page presents various architecture diagrams of the DocuSnap-Backend system, helping readers understand the system design and component relationships from different perspectives.</p>"},{"location":"architecture/diagrams/#overall-architecture-diagram","title":"Overall Architecture Diagram","text":"<p>The following diagram shows the overall architecture of DocuSnap-Backend, including the three-layer architecture (Backend Server, OCR Server, LLM Provider) and the main data flows.</p> <p></p> <p>Diagram Explanation:</p> <ol> <li>Client Layer:</li> <li>Shows different types of clients interacting with the system</li> <li> <p>Communicates with the backend server via encrypted REST API</p> </li> <li> <p>Backend Server Layer:</p> </li> <li>The core component of the system, based on Flask framework</li> <li>Contains multiple functional modules such as task processing, security encryption, caching, etc.</li> <li> <p>Manages communication with OCR server and LLM provider</p> </li> <li> <p>OCR Server Layer:</p> </li> <li>Independent OCR processing service, based on CnOCR</li> <li> <p>Responsible for image text recognition</p> </li> <li> <p>LLM Provider Layer:</p> </li> <li>External LLM service (Zhipu AI)</li> <li> <p>Provides text analysis and information extraction capabilities</p> </li> <li> <p>Data Flow:</p> </li> <li>Arrows indicate the direction of data flow</li> <li>Shows the complete path of request processing</li> </ol> <p>This architecture diagram clearly shows the layered structure and component relationships of the system, helping to understand the overall design and working principles of the system.</p>"},{"location":"architecture/diagrams/#core-modules-relationship-diagram","title":"Core Modules Relationship Diagram","text":"<p>The following diagram shows the relationships and interactions between the five core modules of the DocuSnap-Backend system.</p> <p></p> <p>Diagram Explanation:</p> <ol> <li>Task Processing Module:</li> <li>Located at the center of the system, coordinating the work of other modules</li> <li>Manages task queues and worker threads</li> <li> <p>Interacts with all other modules</p> </li> <li> <p>OCR Processing Module:</p> </li> <li>Responsible for image processing and OCR service calls</li> <li> <p>Interacts with the Task Processing Module and LLM Processing Module</p> </li> <li> <p>LLM Processing Module:</p> </li> <li>Responsible for prompt construction and LLM API calls</li> <li> <p>Processes OCR results, generates structured output</p> </li> <li> <p>Security &amp; Encryption Module:</p> </li> <li>Provides end-to-end encryption and request validation</li> <li> <p>Protects communication security with clients</p> </li> <li> <p>Cache &amp; Persistence Module:</p> </li> <li>Manages storage of task status and results</li> <li>Provides cache query and cleanup functions</li> </ol> <p>The connections between modules represent their dependencies and data flows, with different colors distinguishing the functional scope of different modules.</p>"},{"location":"architecture/diagrams/#data-flow-diagram","title":"Data Flow Diagram","text":"<p>The following diagram shows the complete process of data processing in the DocuSnap-Backend system, from client request to response.</p> <p></p> <p>Diagram Explanation:</p> <ol> <li>Request Processing Phase:</li> <li>Client sends encrypted request</li> <li>System decrypts and validates</li> <li> <p>Checks task status, decides whether to create a new task</p> </li> <li> <p>Task Processing Phase:</p> </li> <li>Task enters the queue</li> <li>Worker thread retrieves task</li> <li> <p>Selects processing strategy based on task type</p> </li> <li> <p>OCR Processing Phase:</p> </li> <li>Sends images to OCR service</li> <li>Processes multiple images in parallel</li> <li> <p>Merges OCR results</p> </li> <li> <p>LLM Processing Phase:</p> </li> <li>Builds prompts suitable for task type</li> <li>Calls LLM API</li> <li> <p>Parses LLM response</p> </li> <li> <p>Result Processing Phase:</p> </li> <li>Stores processing results</li> <li>Encrypts response data</li> <li>Returns results to client</li> </ol> <p>The numbers in the data flow diagram indicate the sequence of processing steps, helping to understand the system's workflow and data transformation process.</p>"},{"location":"architecture/diagrams/#deployment-architecture-diagram","title":"Deployment Architecture Diagram","text":"<p>The following diagram shows the deployment architecture of the DocuSnap-Backend system in a production environment.</p> <p></p> <p>Diagram Explanation:</p> <ol> <li>Frontend Deployment:</li> <li>Web clients and mobile clients</li> <li> <p>Communicates with backend via HTTPS</p> </li> <li> <p>Load Balancing Layer:</p> </li> <li>Nginx reverse proxy</li> <li> <p>Distributes requests to multiple application instances</p> </li> <li> <p>Application Service Layer:</p> </li> <li>Multiple Flask application instances</li> <li> <p>Uses Gunicorn as WSGI server</p> </li> <li> <p>OCR Service Layer:</p> </li> <li>Independent OCR service instances</li> <li> <p>Can be horizontally scaled</p> </li> <li> <p>Data Storage Layer:</p> </li> <li>SQLite database for caching</li> <li> <p>File storage for temporary data</p> </li> <li> <p>External Service Layer:</p> </li> <li>Zhipu AI LLM service</li> <li>Other potential external services</li> </ol> <p>The deployment architecture diagram shows the distribution and connection of system components in physical or virtual environments, helping to understand the system's deployment structure and scaling strategy.</p>"},{"location":"architecture/diagrams/#architecture-diagram-design-notes","title":"Architecture Diagram Design Notes","text":"<p>All architecture diagrams were created using GraphViz tools, following these design principles:</p> <ol> <li>Clear Hierarchical Structure: Using layered layouts to clearly show system component relationships</li> <li>Consistent Visual Style: Using unified colors and shapes to identify different types of components</li> <li>Detailed Annotations: Adding appropriate labels and notes to explain diagram content</li> <li>Separation of Concerns: Different diagrams focus on different aspects of the system, providing a comprehensive perspective</li> </ol> <p>Together, these architecture diagrams provide a comprehensive view of the DocuSnap-Backend system design, helping readers understand the system architecture and working principles from different angles.</p>"},{"location":"architecture/layers/","title":"\u5206\u5c42\u8bf4\u660e","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u91c7\u7528\u4e86\u6e05\u6670\u7684\u5206\u5c42\u67b6\u6784\uff0c\u6bcf\u4e00\u5c42\u90fd\u6709\u660e\u786e\u7684\u804c\u8d23\u548c\u529f\u80fd\u3002\u672c\u9875\u9762\u8be6\u7ec6\u4ecb\u7ecd\u7cfb\u7edf\u7684\u5404\u4e2a\u5c42\u6b21\u53ca\u5176\u804c\u8d23\u3002</p>"},{"location":"architecture/layers/#_2","title":"\u67b6\u6784\u5206\u5c42\u6982\u8ff0","text":"<p>DocuSnap-Backend \u7684\u67b6\u6784\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u4e3b\u8981\u5c42\u6b21\uff1a</p> <ol> <li>API \u5c42\uff1a\u5904\u7406\u5ba2\u6237\u7aef\u8bf7\u6c42\u548c\u54cd\u5e94</li> <li>\u4e1a\u52a1\u903b\u8f91\u5c42\uff1a\u5b9e\u73b0\u6838\u5fc3\u4e1a\u52a1\u529f\u80fd</li> <li>\u670d\u52a1\u96c6\u6210\u5c42\uff1a\u4e0e\u5916\u90e8\u670d\u52a1\uff08OCR\u3001LLM\uff09\u4ea4\u4e92</li> <li>\u6570\u636e\u8bbf\u95ee\u5c42\uff1a\u7ba1\u7406\u6570\u636e\u5b58\u50a8\u548c\u68c0\u7d22</li> <li>\u5b89\u5168\u5c42\uff1a\u63d0\u4f9b\u5b89\u5168\u673a\u5236\u548c\u6570\u636e\u4fdd\u62a4</li> </ol> <p>\u8fd9\u79cd\u5206\u5c42\u8bbe\u8ba1\u6709\u52a9\u4e8e\u5b9e\u73b0\u5173\u6ce8\u70b9\u5206\u79bb\uff0c\u4f7f\u7cfb\u7edf\u66f4\u52a0\u6a21\u5757\u5316\u3001\u53ef\u7ef4\u62a4\u548c\u53ef\u6269\u5c55\u3002</p>"},{"location":"architecture/layers/#api","title":"API \u5c42","text":"<p>API \u5c42\u662f\u7cfb\u7edf\u4e0e\u5ba2\u6237\u7aef\u4ea4\u4e92\u7684\u63a5\u53e3\uff0c\u8d1f\u8d23\u5904\u7406 HTTP \u8bf7\u6c42\u548c\u54cd\u5e94\u3002</p>"},{"location":"architecture/layers/#_3","title":"\u4e3b\u8981\u804c\u8d23","text":"<ul> <li>\u63d0\u4f9b RESTful API \u63a5\u53e3</li> <li>\u89e3\u6790\u548c\u9a8c\u8bc1\u5ba2\u6237\u7aef\u8bf7\u6c42</li> <li>\u8def\u7531\u8bf7\u6c42\u5230\u9002\u5f53\u7684\u5904\u7406\u51fd\u6570</li> <li>\u683c\u5f0f\u5316\u548c\u8fd4\u56de\u54cd\u5e94\u6570\u636e</li> <li>\u5904\u7406\u9519\u8bef\u548c\u5f02\u5e38</li> </ul>"},{"location":"architecture/layers/#_4","title":"\u5173\u952e\u7ec4\u4ef6","text":"<ul> <li>Flask \u5e94\u7528\uff1a\u63d0\u4f9b Web \u670d\u52a1\u6846\u67b6</li> <li>\u8def\u7531\u5b9a\u4e49\uff1a\u6620\u5c04 URL \u5230\u5904\u7406\u51fd\u6570</li> <li>\u8bf7\u6c42\u89e3\u6790\uff1a\u89e3\u6790 HTTP \u8bf7\u6c42\u53c2\u6570\u548c\u5185\u5bb9</li> <li>\u54cd\u5e94\u751f\u6210\uff1a\u6784\u5efa HTTP \u54cd\u5e94</li> </ul>"},{"location":"architecture/layers/#_5","title":"\u4ee3\u7801\u793a\u4f8b","text":"<pre><code>@app.route('/api/process_document', methods=['POST'])\ndef process_document():\n    # \u89e3\u6790\u548c\u9a8c\u8bc1\u8bf7\u6c42\n    if not request.is_json:\n        return jsonify({\"error\": \"\u8bf7\u6c42\u5fc5\u987b\u662fJSON\u683c\u5f0f\"}), 400\n\n    data = request.get_json()\n\n    # \u53c2\u6570\u9a8c\u8bc1\n    if 'images' not in data or not isinstance(data['images'], list):\n        return jsonify({\"error\": \"\u7f3a\u5c11images\u53c2\u6570\u6216\u683c\u5f0f\u4e0d\u6b63\u786e\"}), 400\n\n    # \u5904\u7406\u8bf7\u6c42\u5e76\u8fd4\u56de\u54cd\u5e94\n    # ...\n\n    return jsonify(response_data), 200\n</code></pre>"},{"location":"architecture/layers/#_6","title":"\u4e1a\u52a1\u903b\u8f91\u5c42","text":"<p>\u4e1a\u52a1\u903b\u8f91\u5c42\u5b9e\u73b0\u7cfb\u7edf\u7684\u6838\u5fc3\u529f\u80fd\uff0c\u5305\u62ec\u4efb\u52a1\u5904\u7406\u3001\u6587\u6863\u5206\u6790\u548c\u8868\u5355\u5904\u7406\u7b49\u3002</p>"},{"location":"architecture/layers/#_7","title":"\u4e3b\u8981\u804c\u8d23","text":"<ul> <li>\u5b9e\u73b0\u6838\u5fc3\u4e1a\u52a1\u529f\u80fd\u548c\u5904\u7406\u903b\u8f91</li> <li>\u534f\u8c03\u4efb\u52a1\u5904\u7406\u548c\u5de5\u4f5c\u6d41\u7a0b</li> <li>\u7ba1\u7406\u4efb\u52a1\u961f\u5217\u548c\u5de5\u4f5c\u7ebf\u7a0b</li> <li>\u5b9e\u73b0\u4e0d\u540c\u7c7b\u578b\u4efb\u52a1\u7684\u5904\u7406\u7b56\u7565</li> </ul>"},{"location":"architecture/layers/#_8","title":"\u5173\u952e\u7ec4\u4ef6","text":"<ul> <li>\u4efb\u52a1\u961f\u5217\uff1a\u5b58\u50a8\u5f85\u5904\u7406\u7684\u4efb\u52a1</li> <li>\u5de5\u4f5c\u7ebf\u7a0b\uff1a\u6267\u884c\u4efb\u52a1\u5904\u7406</li> <li>\u5904\u7406\u7b56\u7565\uff1a\u9488\u5bf9\u4e0d\u540c\u4efb\u52a1\u7c7b\u578b\u7684\u5904\u7406\u903b\u8f91</li> <li>\u7ed3\u679c\u5904\u7406\uff1a\u5904\u7406\u548c\u683c\u5f0f\u5316\u4efb\u52a1\u7ed3\u679c</li> </ul>"},{"location":"architecture/layers/#_9","title":"\u4ee3\u7801\u793a\u4f8b","text":"<pre><code>def worker():\n    \"\"\"\u5de5\u4f5c\u7ebf\u7a0b\u51fd\u6570\uff0c\u4ece\u961f\u5217\u83b7\u53d6\u4efb\u52a1\u5e76\u5904\u7406\"\"\"\n    while True:\n        task = task_queue.get()\n        try:\n            # \u6839\u636e\u4efb\u52a1\u7c7b\u578b\u9009\u62e9\u5904\u7406\u7b56\u7565\n            if task['type'] == 'document':\n                process_document_task(task)\n            elif task['type'] == 'form':\n                process_form_task(task)\n            elif task['type'] == 'form_filling':\n                process_form_filling_task(task)\n        except Exception as e:\n            # \u9519\u8bef\u5904\u7406\n            update_task_status(task['id'], 'error', str(e))\n        finally:\n            task_queue.task_done()\n</code></pre>"},{"location":"architecture/layers/#_10","title":"\u670d\u52a1\u96c6\u6210\u5c42","text":"<p>\u670d\u52a1\u96c6\u6210\u5c42\u8d1f\u8d23\u4e0e\u5916\u90e8\u670d\u52a1\uff08\u5982 OCR \u670d\u52a1\u548c LLM \u670d\u52a1\uff09\u7684\u4ea4\u4e92\uff0c\u5c01\u88c5\u5916\u90e8\u670d\u52a1\u7684\u8c03\u7528\u7ec6\u8282\u3002</p>"},{"location":"architecture/layers/#_11","title":"\u4e3b\u8981\u804c\u8d23","text":"<ul> <li>\u4e0e OCR \u670d\u52a1\u901a\u4fe1\uff0c\u5904\u7406\u56fe\u50cf\u8bc6\u522b</li> <li>\u4e0e LLM \u670d\u52a1\u901a\u4fe1\uff0c\u5904\u7406\u6587\u672c\u5206\u6790</li> <li>\u7ba1\u7406\u5916\u90e8\u670d\u52a1\u7684\u8bf7\u6c42\u548c\u54cd\u5e94</li> <li>\u5904\u7406\u670d\u52a1\u8c03\u7528\u7684\u9519\u8bef\u548c\u5f02\u5e38</li> </ul>"},{"location":"architecture/layers/#_12","title":"\u5173\u952e\u7ec4\u4ef6","text":"<ul> <li>OCR \u5ba2\u6237\u7aef\uff1a\u4e0e OCR \u670d\u52a1\u4ea4\u4e92</li> <li>LLM \u5ba2\u6237\u7aef\uff1a\u4e0e LLM \u670d\u52a1\u4ea4\u4e92</li> <li>\u8bf7\u6c42\u6784\u5efa\uff1a\u6784\u5efa\u5916\u90e8\u670d\u52a1\u8bf7\u6c42</li> <li>\u54cd\u5e94\u89e3\u6790\uff1a\u89e3\u6790\u5916\u90e8\u670d\u52a1\u54cd\u5e94</li> </ul>"},{"location":"architecture/layers/#_13","title":"\u4ee3\u7801\u793a\u4f8b","text":"<pre><code>def call_llm_api(prompt, max_tokens=4096):\n    \"\"\"\u8c03\u7528 LLM API \u5904\u7406\u63d0\u793a\"\"\"\n    try:\n        response = zhipuai.model_api.invoke(\n            model=\"chatglm_pro\",\n            prompt=prompt,\n            temperature=0.7,\n            max_tokens=max_tokens\n        )\n\n        if response['code'] == 200:\n            return response['data']['choices'][0]['content']\n        else:\n            raise Exception(f\"LLM API \u8c03\u7528\u5931\u8d25: {response['msg']}\")\n    except Exception as e:\n        # \u9519\u8bef\u5904\u7406\n        raise Exception(f\"LLM API \u8c03\u7528\u5f02\u5e38: {str(e)}\")\n</code></pre>"},{"location":"architecture/layers/#_14","title":"\u6570\u636e\u8bbf\u95ee\u5c42","text":"<p>\u6570\u636e\u8bbf\u95ee\u5c42\u8d1f\u8d23\u7ba1\u7406\u7cfb\u7edf\u7684\u6570\u636e\u5b58\u50a8\u548c\u68c0\u7d22\uff0c\u5305\u62ec\u4efb\u52a1\u72b6\u6001\u3001\u5904\u7406\u7ed3\u679c\u548c\u7f13\u5b58\u6570\u636e\u3002</p>"},{"location":"architecture/layers/#_15","title":"\u4e3b\u8981\u804c\u8d23","text":"<ul> <li>\u7ba1\u7406 SQLite \u6570\u636e\u5e93\u8fde\u63a5</li> <li>\u5b58\u50a8\u548c\u68c0\u7d22\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c</li> <li>\u5b9e\u73b0\u7f13\u5b58\u673a\u5236\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97</li> <li>\u5b9a\u671f\u6e05\u7406\u8fc7\u671f\u6570\u636e</li> </ul>"},{"location":"architecture/layers/#_16","title":"\u5173\u952e\u7ec4\u4ef6","text":"<ul> <li>\u6570\u636e\u5e93\u8fde\u63a5\uff1a\u7ba1\u7406 SQLite \u8fde\u63a5</li> <li>\u6570\u636e\u6a21\u578b\uff1a\u5b9a\u4e49\u6570\u636e\u7ed3\u6784\u548c\u5173\u7cfb</li> <li>\u67e5\u8be2\u51fd\u6570\uff1a\u6267\u884c\u6570\u636e\u5e93\u67e5\u8be2</li> <li>\u7f13\u5b58\u7ba1\u7406\uff1a\u7ba1\u7406\u7f13\u5b58\u6570\u636e\u7684\u5b58\u50a8\u548c\u6e05\u7406</li> </ul>"},{"location":"architecture/layers/#_17","title":"\u4ee3\u7801\u793a\u4f8b","text":"<pre><code>def get_task_result(task_id):\n    \"\"\"\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u4efb\u52a1\u7ed3\u679c\"\"\"\n    conn = get_db_connection()\n    cursor = conn.cursor()\n\n    cursor.execute(\n        \"SELECT status, result, created_at FROM tasks WHERE id = ?\",\n        (task_id,)\n    )\n\n    task = cursor.fetchone()\n    conn.close()\n\n    if task:\n        return {\n            'status': task[0],\n            'result': task[1],\n            'created_at': task[2]\n        }\n    else:\n        return None\n</code></pre>"},{"location":"architecture/layers/#_18","title":"\u5b89\u5168\u5c42","text":"<p>\u5b89\u5168\u5c42\u63d0\u4f9b\u7cfb\u7edf\u7684\u5b89\u5168\u673a\u5236\uff0c\u5305\u62ec\u52a0\u5bc6\u3001\u8ba4\u8bc1\u3001\u6388\u6743\u548c\u6570\u636e\u4fdd\u62a4\u3002</p>"},{"location":"architecture/layers/#_19","title":"\u4e3b\u8981\u804c\u8d23","text":"<ul> <li>\u5b9e\u73b0\u7aef\u5230\u7aef\u52a0\u5bc6</li> <li>\u9a8c\u8bc1\u8bf7\u6c42\u7684\u5b8c\u6574\u6027\u548c\u771f\u5b9e\u6027</li> <li>\u4fdd\u62a4\u654f\u611f\u6570\u636e\u7684\u5b89\u5168</li> <li>\u9632\u6b62\u672a\u6388\u6743\u8bbf\u95ee\u548c\u6570\u636e\u6cc4\u9732</li> </ul>"},{"location":"architecture/layers/#_20","title":"\u5173\u952e\u7ec4\u4ef6","text":"<ul> <li>RSA \u52a0\u5bc6\uff1a\u7528\u4e8e\u5bc6\u94a5\u4ea4\u6362</li> <li>AES \u52a0\u5bc6\uff1a\u7528\u4e8e\u6570\u636e\u52a0\u5bc6</li> <li>\u54c8\u5e0c\u9a8c\u8bc1\uff1a\u9a8c\u8bc1\u6570\u636e\u5b8c\u6574\u6027</li> <li>\u53c2\u6570\u9a8c\u8bc1\uff1a\u9a8c\u8bc1\u8bf7\u6c42\u53c2\u6570</li> </ul>"},{"location":"architecture/layers/#_21","title":"\u4ee3\u7801\u793a\u4f8b","text":"<pre><code>def decrypt_request(encrypted_data, encrypted_key, signature):\n    \"\"\"\u89e3\u5bc6\u8bf7\u6c42\u6570\u636e\u5e76\u9a8c\u8bc1\u5b8c\u6574\u6027\"\"\"\n    try:\n        # \u4f7f\u7528\u79c1\u94a5\u89e3\u5bc6 AES \u5bc6\u94a5\n        private_key = load_private_key()\n        aes_key = rsa_decrypt(encrypted_key, private_key)\n\n        # \u4f7f\u7528 AES \u5bc6\u94a5\u89e3\u5bc6\u6570\u636e\n        data = aes_decrypt(encrypted_data, aes_key)\n\n        # \u9a8c\u8bc1\u7b7e\u540d\n        computed_hash = sha256_hash(data)\n        if computed_hash != signature:\n            raise Exception(\"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25\")\n\n        return json.loads(data)\n    except Exception as e:\n        # \u9519\u8bef\u5904\u7406\n        raise Exception(f\"\u8bf7\u6c42\u89e3\u5bc6\u5931\u8d25: {str(e)}\")\n</code></pre>"},{"location":"architecture/layers/#_22","title":"\u5c42\u95f4\u4ea4\u4e92","text":"<p>DocuSnap-Backend \u7684\u5404\u5c42\u4e4b\u95f4\u901a\u8fc7\u660e\u786e\u7684\u63a5\u53e3\u548c\u6570\u636e\u6d41\u8fdb\u884c\u4ea4\u4e92\uff0c\u5f62\u6210\u4e00\u4e2a\u534f\u8c03\u5de5\u4f5c\u7684\u6574\u4f53\u3002</p>"},{"location":"architecture/layers/#_23","title":"\u4e3b\u8981\u4ea4\u4e92\u6d41\u7a0b","text":"<ol> <li>API \u5c42 \u2192 \u4e1a\u52a1\u903b\u8f91\u5c42\uff1a</li> <li>API \u5c42\u63a5\u6536\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u89e3\u6790\u540e\u4f20\u9012\u7ed9\u4e1a\u52a1\u903b\u8f91\u5c42</li> <li> <p>\u4e1a\u52a1\u903b\u8f91\u5c42\u5904\u7406\u5b8c\u6210\u540e\uff0c\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9 API \u5c42</p> </li> <li> <p>\u4e1a\u52a1\u903b\u8f91\u5c42 \u2192 \u670d\u52a1\u96c6\u6210\u5c42\uff1a</p> </li> <li>\u4e1a\u52a1\u903b\u8f91\u5c42\u9700\u8981 OCR \u6216 LLM \u670d\u52a1\u65f6\uff0c\u8c03\u7528\u670d\u52a1\u96c6\u6210\u5c42</li> <li> <p>\u670d\u52a1\u96c6\u6210\u5c42\u8fd4\u56de\u5904\u7406\u7ed3\u679c\u7ed9\u4e1a\u52a1\u903b\u8f91\u5c42</p> </li> <li> <p>\u4e1a\u52a1\u903b\u8f91\u5c42 \u2192 \u6570\u636e\u8bbf\u95ee\u5c42\uff1a</p> </li> <li>\u4e1a\u52a1\u903b\u8f91\u5c42\u9700\u8981\u5b58\u50a8\u6216\u68c0\u7d22\u6570\u636e\u65f6\uff0c\u8c03\u7528\u6570\u636e\u8bbf\u95ee\u5c42</li> <li> <p>\u6570\u636e\u8bbf\u95ee\u5c42\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\u7ed9\u4e1a\u52a1\u903b\u8f91\u5c42</p> </li> <li> <p>\u5b89\u5168\u5c42\u4e0e\u5176\u4ed6\u5c42\uff1a</p> </li> <li>\u5b89\u5168\u5c42\u6a2a\u8de8\u5176\u4ed6\u6240\u6709\u5c42\uff0c\u63d0\u4f9b\u5b89\u5168\u670d\u52a1</li> <li>API \u5c42\u4f7f\u7528\u5b89\u5168\u5c42\u89e3\u5bc6\u548c\u9a8c\u8bc1\u8bf7\u6c42</li> <li>\u4e1a\u52a1\u903b\u8f91\u5c42\u4f7f\u7528\u5b89\u5168\u5c42\u4fdd\u62a4\u654f\u611f\u6570\u636e</li> <li>\u6570\u636e\u8bbf\u95ee\u5c42\u4f7f\u7528\u5b89\u5168\u5c42\u52a0\u5bc6\u5b58\u50a8\u6570\u636e</li> </ol>"},{"location":"architecture/layers/#_24","title":"\u6570\u636e\u6d41\u5411","text":"<p>\u7cfb\u7edf\u4e2d\u7684\u6570\u636e\u6d41\u5411\u53ef\u4ee5\u6982\u62ec\u4e3a\uff1a</p> <ol> <li>\u8f93\u5165\u6d41\uff1a\u5ba2\u6237\u7aef \u2192 API \u5c42 \u2192 \u4e1a\u52a1\u903b\u8f91\u5c42 \u2192 \u670d\u52a1\u96c6\u6210\u5c42 \u2192 \u5916\u90e8\u670d\u52a1</li> <li>\u8f93\u51fa\u6d41\uff1a\u5916\u90e8\u670d\u52a1 \u2192 \u670d\u52a1\u96c6\u6210\u5c42 \u2192 \u4e1a\u52a1\u903b\u8f91\u5c42 \u2192 API \u5c42 \u2192 \u5ba2\u6237\u7aef</li> <li>\u6570\u636e\u5b58\u50a8\u6d41\uff1a\u4e1a\u52a1\u903b\u8f91\u5c42 \u2192 \u6570\u636e\u8bbf\u95ee\u5c42 \u2192 \u6570\u636e\u5e93</li> <li>\u6570\u636e\u68c0\u7d22\u6d41\uff1a\u6570\u636e\u5e93 \u2192 \u6570\u636e\u8bbf\u95ee\u5c42 \u2192 \u4e1a\u52a1\u903b\u8f91\u5c42</li> </ol>"},{"location":"architecture/layers/#_25","title":"\u5206\u5c42\u67b6\u6784\u7684\u4f18\u52bf","text":"<p>DocuSnap-Backend \u7684\u5206\u5c42\u67b6\u6784\u5e26\u6765\u4e86\u4ee5\u4e0b\u4f18\u52bf\uff1a</p> <ol> <li>\u5173\u6ce8\u70b9\u5206\u79bb\uff1a\u6bcf\u4e00\u5c42\u4e13\u6ce8\u4e8e\u7279\u5b9a\u7684\u804c\u8d23\uff0c\u51cf\u5c11\u8026\u5408</li> <li>\u53ef\u7ef4\u62a4\u6027\uff1a\u6613\u4e8e\u7406\u89e3\u3001\u4fee\u6539\u548c\u6269\u5c55\u5404\u5c42\u529f\u80fd</li> <li>\u53ef\u6d4b\u8bd5\u6027\uff1a\u53ef\u4ee5\u72ec\u7acb\u6d4b\u8bd5\u6bcf\u4e00\u5c42\u7684\u529f\u80fd</li> <li>\u7075\u6d3b\u6027\uff1a\u53ef\u4ee5\u66ff\u6362\u6216\u5347\u7ea7\u7279\u5b9a\u5c42\u7684\u5b9e\u73b0\uff0c\u800c\u4e0d\u5f71\u54cd\u5176\u4ed6\u5c42</li> <li>\u53ef\u91cd\u7528\u6027\uff1a\u901a\u7528\u529f\u80fd\u53ef\u4ee5\u5728\u4e0d\u540c\u6a21\u5757\u4e2d\u91cd\u7528</li> </ol> <p>\u901a\u8fc7\u8fd9\u79cd\u5206\u5c42\u8bbe\u8ba1\uff0cDocuSnap-Backend \u5b9e\u73b0\u4e86\u4e00\u4e2a\u7ed3\u6784\u6e05\u6670\u3001\u529f\u80fd\u660e\u786e\u3001\u6613\u4e8e\u7ef4\u62a4\u548c\u6269\u5c55\u7684\u7cfb\u7edf\u67b6\u6784\u3002</p>"},{"location":"architecture/overview/","title":"Architecture Overview","text":"<p>DocuSnap-Backend employs a three-layer architecture that combines layered architecture with microservice concepts, effectively breaking down system functionality into collaborating components. This page provides a high-level overview of the system architecture.</p>"},{"location":"architecture/overview/#architectural-style","title":"Architectural Style","text":"<p>The architectural style of DocuSnap-Backend can be described as:</p> <p>A hybrid of layered architecture and microservices architecture</p> <ul> <li>Layered Architecture: The system internally adopts clear functional layering, including API layer, business logic layer, data access layer, etc.</li> <li>Microservice Concepts: The system treats OCR processing as an independent service, interacting via API, reflecting microservice design principles</li> <li>REST API Pattern: The system communicates with clients and external services through RESTful APIs</li> </ul> <p>This hybrid architecture combines the simplicity of layered architecture with the flexibility of microservices architecture, suitable for DocuSnap-Backend's functional requirements and scale.</p>"},{"location":"architecture/overview/#system-components","title":"System Components","text":"<p>DocuSnap-Backend consists of three main components:</p> <ol> <li>Backend Server:</li> <li>Core application server, based on Flask framework</li> <li>Handles client requests, coordinates task processing</li> <li>Manages task queues and worker threads</li> <li> <p>Implements security encryption and data caching</p> </li> <li> <p>OCR Server:</p> </li> <li>Independent OCR processing service</li> <li>Uses CnOCR for text recognition</li> <li>Processes image-to-text requests</li> <li> <p>Interacts with the backend server as a microservice</p> </li> <li> <p>LLM Provider:</p> </li> <li>External LLM service (Zhipu AI)</li> <li>Provides natural language processing capabilities</li> <li>Interacts with the backend server via API</li> <li>Processes text analysis and information extraction</li> </ol>"},{"location":"architecture/overview/#system-architecture-diagram","title":"System Architecture Diagram","text":"<p>The following diagram shows the overall architecture of DocuSnap-Backend:</p> <p></p>"},{"location":"architecture/overview/#architectural-characteristics","title":"Architectural Characteristics","text":"<p>DocuSnap-Backend's architecture has the following main characteristics:</p>"},{"location":"architecture/overview/#1-separation-of-concerns","title":"1. Separation of Concerns","text":"<ul> <li>Functional Modularity: System functionality is broken down into independent modules, such as task processing, OCR processing, LLM processing, etc.</li> <li>Service Separation: OCR processing is treated as an independent service, reducing the burden on the core application</li> <li>Clear Responsibilities: Each component and module has clear responsibilities and boundaries</li> </ul>"},{"location":"architecture/overview/#2-asynchronous-processing","title":"2. Asynchronous Processing","text":"<ul> <li>Task Queue: Uses queues to store pending tasks, decoupling request reception and processing</li> <li>Worker Threads: Uses thread pools to process tasks in parallel, improving system throughput</li> <li>Non-blocking Design: Clients can query task status asynchronously, avoiding long wait times</li> </ul>"},{"location":"architecture/overview/#3-security-mechanisms","title":"3. Security Mechanisms","text":"<ul> <li>End-to-end Encryption: Uses RSA and AES hybrid encryption to protect data transmission</li> <li>Request Validation: Uses SHA256 hash to verify the integrity of requests</li> <li>Multi-layer Security: Includes parameter validation, content validation, encryption protection, and other multi-layer security mechanisms</li> </ul>"},{"location":"architecture/overview/#4-caching-strategy","title":"4. Caching Strategy","text":"<ul> <li>Result Caching: Uses SQLite to store task results, avoiding repeated computation</li> <li>Status Management: Records task status, supports status queries and result retrieval</li> <li>Cache Cleanup: Regularly cleans up expired caches, optimizing storage space</li> </ul>"},{"location":"architecture/overview/#5-scalability","title":"5. Scalability","text":"<ul> <li>Modular Design: Facilitates adding new features and extending existing ones</li> <li>Service Independence: OCR service can be scaled independently without affecting the core application</li> <li>Externalized Configuration: Key parameters are managed through configuration files, facilitating adjustment and optimization</li> </ul>"},{"location":"architecture/overview/#architecture-decisions","title":"Architecture Decisions","text":"<p>The following key decisions were made when designing the DocuSnap-Backend architecture:</p> <ol> <li>Choosing a Lightweight Framework:</li> <li>Using Flask rather than full-featured frameworks like Django, reducing unnecessary complexity</li> <li> <p>Suitable for the system's API service positioning and scale</p> </li> <li> <p>Adopting a Three-layer Architecture:</p> </li> <li>Dividing the system into backend server, OCR server, and LLM provider layers</li> <li> <p>Clear separation of responsibilities, facilitating maintenance and extension</p> </li> <li> <p>Asynchronous Task Processing:</p> </li> <li>Using task queues and worker threads to handle time-consuming operations</li> <li> <p>Improving system responsiveness and concurrent processing capability</p> </li> <li> <p>End-to-end Encryption:</p> </li> <li>Implementing a complete end-to-end encryption solution to protect sensitive data</li> <li> <p>Using RSA and AES hybrid encryption, balancing security and performance</p> </li> <li> <p>Using SQLite as Cache:</p> </li> <li>Choosing lightweight SQLite as cache storage rather than complex database systems</li> <li>Suitable for the system's caching needs and scale</li> </ol> <p>These architecture decisions collectively shape the overall design of DocuSnap-Backend, enabling it to effectively meet document and form processing requirements while maintaining system simplicity, security, and scalability.</p>"},{"location":"code-quality/assessment/","title":"Quality Assessment","text":"<p>This page provides a quality assessment of the DocuSnap-Backend codebase, including aspects such as code structure, maintainability, extensibility, and security.</p>"},{"location":"code-quality/assessment/#overall-assessment","title":"Overall Assessment","text":"<p>The DocuSnap-Backend codebase has good overall quality, especially considering that it is a university graduation project. The system implements a complete functional workflow, from image processing to text analysis to structured data output, and adopts multiple design patterns and best practices. At the same time, there are some areas for improvement, mainly focused on code organization, modularity, and test coverage.</p>"},{"location":"code-quality/assessment/#code-structure","title":"Code Structure","text":""},{"location":"code-quality/assessment/#strengths","title":"Strengths","text":"<ol> <li>Clear Functional Division:</li> <li>Code is divided into different parts according to functionality, such as request processing, OCR processing, LLM processing, etc.</li> <li>Prompt templates are stored independently in the <code>prompts.py</code> file, facilitating management and modification</li> <li> <p>Configuration parameters are centrally managed, facilitating adjustment and optimization</p> </li> <li> <p>Reasonable File Organization:</p> </li> <li>Main logic is concentrated in the <code>app.py</code> file, facilitating quick understanding of system functionality</li> <li>Static files and templates are stored in the <code>static</code> and <code>templates</code> directories respectively</li> <li>Configuration example file <code>priv_sets.py.sample</code> provides configuration reference</li> </ol>"},{"location":"code-quality/assessment/#areas-for-improvement","title":"Areas for Improvement","text":"<ol> <li>Insufficient Modularity:</li> <li>Most code is concentrated in a single file (<code>app.py</code>), resulting in an overly long file</li> <li>Lacks file structure divided by functional modules</li> <li> <p>Recommend splitting code into multiple module files, such as <code>ocr.py</code>, <code>llm.py</code>, <code>security.py</code>, etc.</p> </li> <li> <p>Lack of Hierarchical Structure:</p> </li> <li>Code structure is relatively flat, lacking clear hierarchical division</li> <li>Different levels of functionality (such as API layer, business logic layer, data access layer) are mixed together</li> <li>Recommend introducing a clearer hierarchical structure to improve code organization</li> </ol>"},{"location":"code-quality/assessment/#code-quality","title":"Code Quality","text":""},{"location":"code-quality/assessment/#strengths_1","title":"Strengths","text":"<ol> <li>Error Handling:</li> <li>Comprehensive error catching and handling mechanisms</li> <li>Detailed error logs and messages</li> <li> <p>Elegant error recovery strategies</p> </li> <li> <p>Comments and Documentation:</p> </li> <li>Key functions and complex logic have detailed comments</li> <li>Prompt templates have clear explanations and format definitions</li> <li> <p>README file provides basic project description</p> </li> <li> <p>Naming Conventions:</p> </li> <li>Variable and function names are clear and reflect their purpose</li> <li>Follow Python naming conventions (such as using lowercase letters separated by underscores)</li> <li>Constants use all uppercase letters, easy to identify</li> </ol>"},{"location":"code-quality/assessment/#areas-for-improvement_1","title":"Areas for Improvement","text":"<ol> <li>Code Duplication:</li> <li>Some duplicate code segments exist, such as request decryption and validation logic</li> <li>Lack of common helper functions to extract shared logic</li> <li> <p>Recommend introducing more helper functions and utility classes to reduce code duplication</p> </li> <li> <p>Function Granularity:</p> </li> <li>Some functions are too long, containing multiple logical steps</li> <li>Function responsibilities are not singular enough, increasing difficulty in understanding and maintenance</li> <li> <p>Recommend splitting large functions into smaller, more focused functions</p> </li> <li> <p>Code Style Consistency:</p> </li> <li>Code style is not consistent enough, such as indentation, use of blank lines, etc.</li> <li>Lack of clear code style guidelines</li> <li>Recommend introducing code style checking tools, such as flake8 or pylint</li> </ol>"},{"location":"code-quality/assessment/#maintainability","title":"Maintainability","text":""},{"location":"code-quality/assessment/#strengths_2","title":"Strengths","text":"<ol> <li>Clear Logic:</li> <li>Processing flow is clear and easy to understand</li> <li>Function and variable naming is intuitive, reflecting their purpose</li> <li> <p>Key steps have explanatory comments</p> </li> <li> <p>Externalized Configuration:</p> </li> <li>Key parameters are managed through configuration files</li> <li>Configuration example files are provided</li> <li> <p>Easy to adjust and optimize system behavior</p> </li> <li> <p>Error Handling:</p> </li> <li>Comprehensive error catching and handling mechanisms</li> <li>Detailed error logs and messages</li> <li>Facilitates problem location and debugging</li> </ol>"},{"location":"code-quality/assessment/#areas-for-improvement_2","title":"Areas for Improvement","text":"<ol> <li>Lack of Documentation:</li> <li>Lack of detailed system design documentation</li> <li>API interface documentation is incomplete</li> <li> <p>Recommend adding more detailed documentation, including system architecture, API interfaces, data models, etc.</p> </li> <li> <p>Lack of Testing:</p> </li> <li>Lack of automated testing, such as unit tests and integration tests</li> <li>Difficult to verify the impact of code changes</li> <li> <p>Recommend adding test cases to improve code quality and maintainability</p> </li> <li> <p>Dependency Management:</p> </li> <li>Dependency version control is not strict enough</li> <li>Lack of virtual environment configuration</li> <li>Recommend using stricter dependency version control and virtual environment management</li> </ol>"},{"location":"code-quality/assessment/#extensibility","title":"Extensibility","text":""},{"location":"code-quality/assessment/#strengths_3","title":"Strengths","text":"<ol> <li>Modular Design:</li> <li>System functionality is divided by modules, such as task processing, OCR processing, LLM processing, etc.</li> <li>Modules interact through clear interfaces</li> <li> <p>Easy to add new functionality and extend existing functionality</p> </li> <li> <p>Design Pattern Application:</p> </li> <li>Uses producer-consumer pattern to handle asynchronous tasks</li> <li>Uses strategy pattern to handle different types of tasks</li> <li>Uses proxy pattern to implement caching mechanism</li> <li> <p>These design patterns improve code flexibility and extensibility</p> </li> <li> <p>Configuration Flexibility:</p> </li> <li>Key parameters are managed through configuration files</li> <li>Configuration example files are provided</li> <li>Easy to adjust system behavior to adapt to different requirements</li> </ol>"},{"location":"code-quality/assessment/#areas-for-improvement_3","title":"Areas for Improvement","text":"<ol> <li>Unclear Interface Definition:</li> <li>Interface definitions between modules are not clear enough</li> <li>Lack of interface documentation</li> <li> <p>Recommend defining clearer module interfaces and providing interface documentation</p> </li> <li> <p>Lack of Abstraction Layer:</p> </li> <li>Directly uses concrete implementations, lacking abstraction layer</li> <li>Difficult to replace underlying implementations, such as changing OCR or LLM services</li> <li> <p>Recommend introducing abstract interfaces to improve system flexibility and extensibility</p> </li> <li> <p>Lack of Plugin Mechanism:</p> </li> <li>Lack of plugin mechanism, difficult to dynamically extend functionality</li> <li>Adding new functionality requires modifying core code</li> <li>Recommend introducing plugin mechanism to support dynamic extension of functionality</li> </ol>"},{"location":"code-quality/assessment/#security","title":"Security","text":""},{"location":"code-quality/assessment/#strengths_4","title":"Strengths","text":"<ol> <li>End-to-End Encryption:</li> <li>Uses RSA and AES hybrid encryption to protect data transmission</li> <li>Uses SHA256 hash to verify data integrity</li> <li> <p>Prevents data leakage and tampering</p> </li> <li> <p>Input Validation:</p> </li> <li>Comprehensive request parameter validation</li> <li>Prevents malicious input and injection attacks</li> <li> <p>Improves system security</p> </li> <li> <p>Error Handling:</p> </li> <li>Secure error handling mechanism</li> <li>Error messages do not leak sensitive information</li> <li>Prevents information leakage and security vulnerabilities</li> </ol>"},{"location":"code-quality/assessment/#areas-for-improvement_4","title":"Areas for Improvement","text":"<ol> <li>Key Management:</li> <li>Key storage method is not secure enough</li> <li>Lack of key rotation mechanism</li> <li> <p>Recommend using more secure key management solutions, such as key storage services or hardware security modules</p> </li> <li> <p>Access Control:</p> </li> <li>Lack of fine-grained access control</li> <li>Lack of user authentication and authorization mechanisms</li> <li> <p>Recommend introducing more comprehensive access control mechanisms, such as OAuth or JWT</p> </li> <li> <p>Security Audit:</p> </li> <li>Lack of security audit logs</li> <li>Difficult to track security events</li> <li>Recommend adding security audit logs to record key operations and security events</li> </ol>"},{"location":"code-quality/assessment/#performance-optimization","title":"Performance Optimization","text":""},{"location":"code-quality/assessment/#strengths_5","title":"Strengths","text":"<ol> <li>Parallel Processing:</li> <li>Uses thread pools to process multiple images in parallel</li> <li>Improves processing efficiency, reduces total processing time</li> <li> <p>Controls concurrency to avoid excessive resource consumption</p> </li> <li> <p>Caching Mechanism:</p> </li> <li>Caches processing results to avoid duplicate computation</li> <li>Improves response speed for identical requests</li> <li> <p>Regularly cleans up expired caches, optimizing storage space</p> </li> <li> <p>Asynchronous Processing:</p> </li> <li>Uses task queues and worker threads for asynchronous processing</li> <li>Improves system responsiveness and concurrent processing capability</li> <li>Supports long-running tasks</li> </ol>"},{"location":"code-quality/assessment/#areas-for-improvement_5","title":"Areas for Improvement","text":"<ol> <li>Resource Control:</li> <li>Resource usage control is not fine-grained enough</li> <li>Lack of resource monitoring and limitation mechanisms</li> <li> <p>Recommend introducing more fine-grained resource control mechanisms, such as rate limiting, circuit breaking, etc.</p> </li> <li> <p>Database Optimization:</p> </li> <li>SQLite database operations may become performance bottlenecks</li> <li>Lack of database indexes and query optimization</li> <li> <p>Recommend optimizing database operations, adding necessary indexes, optimizing queries</p> </li> <li> <p>Caching Strategy:</p> </li> <li>Caching strategy is relatively simple</li> <li>Lack of cache warming and cache invalidation mechanisms</li> <li>Recommend implementing more complex caching strategies, such as frequency-based caching</li> </ol>"},{"location":"code-quality/assessment/#conclusion","title":"Conclusion","text":"<p>The DocuSnap-Backend codebase demonstrates a well-designed backend service architecture, combining OCR and LLM technologies to process and analyze documents, and protecting data security through end-to-end encryption. Although there is room for improvement in code organization, modularity, and test coverage, overall, this is a good quality codebase, especially considering that it is a university graduation project.</p> <p>By implementing the improvement suggestions proposed in this assessment, code quality and maintainability can be further enhanced, making the system more robust and extensible, laying a solid foundation for future feature expansion and performance optimization.</p>"},{"location":"code-quality/design-patterns/","title":"\u8bbe\u8ba1\u6a21\u5f0f","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u4e2d\u5e94\u7528\u4e86\u591a\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u8fd9\u4e9b\u6a21\u5f0f\u5e2e\u52a9\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u3001\u53ef\u6269\u5c55\u6027\u548c\u7075\u6d3b\u6027\u3002\u672c\u9875\u9762\u8be6\u7ec6\u4ecb\u7ecd\u7cfb\u7edf\u4e2d\u4f7f\u7528\u7684\u4e3b\u8981\u8bbe\u8ba1\u6a21\u5f0f\u53ca\u5176\u5b9e\u73b0\u65b9\u5f0f\u3002</p>"},{"location":"code-quality/design-patterns/#-","title":"\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u5f0f","text":"<p>\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u5f0f\u662f DocuSnap-Backend \u7cfb\u7edf\u4e2d\u6700\u6838\u5fc3\u7684\u8bbe\u8ba1\u6a21\u5f0f\u4e4b\u4e00\uff0c\u7528\u4e8e\u5b9e\u73b0\u5f02\u6b65\u4efb\u52a1\u5904\u7406\u3002</p>"},{"location":"code-quality/design-patterns/#_2","title":"\u5b9e\u73b0\u65b9\u5f0f","text":"<p>\u7cfb\u7edf\u4f7f\u7528 Python \u7684 <code>Queue</code> \u7c7b\u548c\u7ebf\u7a0b\u5b9e\u73b0\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u5f0f\uff1a</p> <ol> <li>\u751f\u4ea7\u8005\uff1a</li> <li>API \u7aef\u70b9\uff08\u5982 <code>process_document</code>\u3001<code>process_form</code> \u7b49\uff09\u4f5c\u4e3a\u751f\u4ea7\u8005</li> <li> <p>\u63a5\u6536\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u521b\u5efa\u4efb\u52a1\uff0c\u5e76\u5c06\u4efb\u52a1\u6dfb\u52a0\u5230\u961f\u5217</p> </li> <li> <p>\u6d88\u8d39\u8005\uff1a</p> </li> <li>\u5de5\u4f5c\u7ebf\u7a0b\u4f5c\u4e3a\u6d88\u8d39\u8005</li> <li>\u4ece\u961f\u5217\u83b7\u53d6\u4efb\u52a1\u5e76\u5904\u7406</li> <li> <p>\u591a\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u5e76\u884c\u5de5\u4f5c\uff0c\u63d0\u9ad8\u5904\u7406\u6548\u7387</p> </li> <li> <p>\u961f\u5217\uff1a</p> </li> <li>\u4f7f\u7528 Python \u7684 <code>Queue</code> \u7c7b\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u7684\u4efb\u52a1\u961f\u5217</li> <li>\u89e3\u8026\u4efb\u52a1\u751f\u6210\u548c\u6267\u884c</li> <li>\u652f\u6301\u5f02\u6b65\u5904\u7406\u548c\u5e76\u53d1\u63a7\u5236</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code># \u521d\u59cb\u5316\u4efb\u52a1\u961f\u5217\ntask_queue = Queue()\n\n# \u751f\u4ea7\u8005\uff1aAPI \u7aef\u70b9\n@app.route('/api/process_document', methods=['POST'])\ndef process_document():\n    # ... \u8bf7\u6c42\u9a8c\u8bc1\u548c\u89e3\u5bc6 ...\n\n    # \u521b\u5efa\u4efb\u52a1\n    task_id = str(uuid.uuid4())\n    task = {\n        'id': task_id,\n        'type': 'document',\n        'data': decrypted_data\n    }\n\n    # \u6dfb\u52a0\u4efb\u52a1\u5230\u961f\u5217\uff08\u751f\u4ea7\u8005\u884c\u4e3a\uff09\n    add_task_to_queue(task)\n\n    # \u8fd4\u56de\u4efb\u52a1 ID\n    return jsonify({'task_id': task_id}), 202\n\n# \u6d88\u8d39\u8005\uff1a\u5de5\u4f5c\u7ebf\u7a0b\ndef worker():\n    \"\"\"\u5de5\u4f5c\u7ebf\u7a0b\u51fd\u6570\uff0c\u4ece\u961f\u5217\u83b7\u53d6\u4efb\u52a1\u5e76\u5904\u7406\"\"\"\n    while True:\n        # \u4ece\u961f\u5217\u83b7\u53d6\u4efb\u52a1\uff08\u6d88\u8d39\u8005\u884c\u4e3a\uff09\n        task = task_queue.get()\n        try:\n            # \u6839\u636e\u4efb\u52a1\u7c7b\u578b\u9009\u62e9\u5904\u7406\u7b56\u7565\n            if task['type'] == 'document':\n                process_document_task(task)\n            elif task['type'] == 'form':\n                process_form_task(task)\n            elif task['type'] == 'form_filling':\n                process_form_filling_task(task)\n        except Exception as e:\n            # \u9519\u8bef\u5904\u7406\n            update_task_status(task['id'], 'error', str(e))\n        finally:\n            # \u6807\u8bb0\u4efb\u52a1\u5b8c\u6210\n            task_queue.task_done()\n</code></pre>"},{"location":"code-quality/design-patterns/#_3","title":"\u4f18\u52bf","text":"<ol> <li>\u89e3\u8026\uff1a\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u4e4b\u95f4\u901a\u8fc7\u961f\u5217\u89e3\u8026\uff0c\u51cf\u5c11\u76f8\u4e92\u4f9d\u8d56</li> <li>\u5e76\u53d1\u5904\u7406\uff1a\u591a\u4e2a\u6d88\u8d39\u8005\u53ef\u4ee5\u5e76\u884c\u5904\u7406\u4efb\u52a1\uff0c\u63d0\u9ad8\u7cfb\u7edf\u541e\u5410\u91cf</li> <li>\u8d1f\u8f7d\u5747\u8861\uff1a\u4efb\u52a1\u961f\u5217\u81ea\u52a8\u5728\u591a\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u4e4b\u95f4\u5206\u914d\u4efb\u52a1</li> <li>\u5f02\u6b65\u5904\u7406\uff1a\u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u7b49\u5f85\u4efb\u52a1\u5b8c\u6210\uff0c\u63d0\u9ad8\u54cd\u5e94\u901f\u5ea6</li> </ol>"},{"location":"code-quality/design-patterns/#_4","title":"\u7b56\u7565\u6a21\u5f0f","text":"<p>\u7b56\u7565\u6a21\u5f0f\u7528\u4e8e\u6839\u636e\u4efb\u52a1\u7c7b\u578b\u9009\u62e9\u4e0d\u540c\u7684\u5904\u7406\u7b56\u7565\uff0c\u4f7f\u7cfb\u7edf\u80fd\u591f\u7075\u6d3b\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u4efb\u52a1\u3002</p>"},{"location":"code-quality/design-patterns/#_5","title":"\u5b9e\u73b0\u65b9\u5f0f","text":"<p>\u7cfb\u7edf\u6839\u636e\u4efb\u52a1\u7c7b\u578b\uff08<code>document</code>\u3001<code>form</code>\u3001<code>form_filling</code>\uff09\u9009\u62e9\u4e0d\u540c\u7684\u5904\u7406\u51fd\u6570\uff1a</p> <ol> <li>\u7b56\u7565\u63a5\u53e3\uff1a</li> <li>\u4e0d\u540c\u7684\u5904\u7406\u51fd\u6570\u5177\u6709\u76f8\u4f3c\u7684\u63a5\u53e3\uff08\u63a5\u53d7\u4efb\u52a1\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff09</li> <li> <p>\u6bcf\u4e2a\u5904\u7406\u51fd\u6570\u8d1f\u8d23\u7279\u5b9a\u7c7b\u578b\u4efb\u52a1\u7684\u5904\u7406\u903b\u8f91</p> </li> <li> <p>\u7b56\u7565\u9009\u62e9\uff1a</p> </li> <li>\u5de5\u4f5c\u7ebf\u7a0b\u6839\u636e\u4efb\u52a1\u7c7b\u578b\u9009\u62e9\u9002\u5f53\u7684\u5904\u7406\u51fd\u6570</li> <li> <p>\u4f7f\u7528\u7b80\u5355\u7684\u6761\u4ef6\u8bed\u53e5\u8fdb\u884c\u9009\u62e9</p> </li> <li> <p>\u7b56\u7565\u5b9e\u73b0\uff1a</p> </li> <li>\u6bcf\u79cd\u4efb\u52a1\u7c7b\u578b\u5bf9\u5e94\u4e00\u4e2a\u5904\u7406\u51fd\u6570</li> <li>\u5904\u7406\u51fd\u6570\u5b9e\u73b0\u7279\u5b9a\u7c7b\u578b\u4efb\u52a1\u7684\u5904\u7406\u903b\u8f91</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code># \u7b56\u7565\u9009\u62e9\ndef worker():\n    while True:\n        task = task_queue.get()\n        try:\n            # \u6839\u636e\u4efb\u52a1\u7c7b\u578b\u9009\u62e9\u5904\u7406\u7b56\u7565\n            if task['type'] == 'document':\n                process_document_task(task)  # \u6587\u6863\u5904\u7406\u7b56\u7565\n            elif task['type'] == 'form':\n                process_form_task(task)      # \u8868\u5355\u5904\u7406\u7b56\u7565\n            elif task['type'] == 'form_filling':\n                process_form_filling_task(task)  # \u8868\u5355\u586b\u5145\u7b56\u7565\n        except Exception as e:\n            update_task_status(task['id'], 'error', str(e))\n        finally:\n            task_queue.task_done()\n\n# \u6587\u6863\u5904\u7406\u7b56\u7565\ndef process_document_task(task):\n    \"\"\"\u5904\u7406\u6587\u6863\u7c7b\u578b\u7684\u4efb\u52a1\"\"\"\n    update_task_status(task['id'], 'processing')\n\n    try:\n        # \u6587\u6863\u5904\u7406\u7279\u5b9a\u903b\u8f91\n        ocr_results = process_images(task['data']['images'])\n        prompt = build_document_prompt(ocr_results)\n        llm_result = call_llm_api(prompt)\n        parsed_result = parse_document_result(llm_result)\n\n        update_task_status(task['id'], 'completed', parsed_result)\n    except Exception as e:\n        update_task_status(task['id'], 'error', str(e))\n        raise\n\n# \u8868\u5355\u5904\u7406\u7b56\u7565\ndef process_form_task(task):\n    \"\"\"\u5904\u7406\u8868\u5355\u7c7b\u578b\u7684\u4efb\u52a1\"\"\"\n    # \u8868\u5355\u5904\u7406\u7279\u5b9a\u903b\u8f91\n    # ...\n\n# \u8868\u5355\u586b\u5145\u7b56\u7565\ndef process_form_filling_task(task):\n    \"\"\"\u5904\u7406\u8868\u5355\u586b\u5145\u7c7b\u578b\u7684\u4efb\u52a1\"\"\"\n    # \u8868\u5355\u586b\u5145\u7279\u5b9a\u903b\u8f91\n    # ...\n</code></pre>"},{"location":"code-quality/design-patterns/#_6","title":"\u4f18\u52bf","text":"<ol> <li>\u7075\u6d3b\u6027\uff1a\u53ef\u4ee5\u8f7b\u677e\u6dfb\u52a0\u65b0\u7684\u4efb\u52a1\u7c7b\u578b\u548c\u5904\u7406\u7b56\u7565</li> <li>\u53ef\u7ef4\u62a4\u6027\uff1a\u6bcf\u79cd\u7b56\u7565\u72ec\u7acb\u5b9e\u73b0\uff0c\u4fbf\u4e8e\u7ef4\u62a4\u548c\u4fee\u6539</li> <li>\u5f00\u95ed\u539f\u5219\uff1a\u6dfb\u52a0\u65b0\u7b56\u7565\u4e0d\u9700\u8981\u4fee\u6539\u73b0\u6709\u4ee3\u7801</li> <li>\u5355\u4e00\u804c\u8d23\uff1a\u6bcf\u4e2a\u7b56\u7565\u51fd\u6570\u4e13\u6ce8\u4e8e\u7279\u5b9a\u7c7b\u578b\u7684\u4efb\u52a1\u5904\u7406</li> </ol>"},{"location":"code-quality/design-patterns/#_7","title":"\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f","text":"<p>\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u7528\u4e8e\u521b\u5efa\u4e0d\u540c\u7c7b\u578b\u7684\u63d0\u793a\uff08Prompt\uff09\uff0c\u6839\u636e\u4efb\u52a1\u7c7b\u578b\u751f\u6210\u9002\u5f53\u7684\u63d0\u793a\u6a21\u677f\u3002</p>"},{"location":"code-quality/design-patterns/#_8","title":"\u5b9e\u73b0\u65b9\u5f0f","text":"<p>\u7cfb\u7edf\u4f7f\u7528\u4e0d\u540c\u7684\u51fd\u6570\u6784\u5efa\u4e0d\u540c\u7c7b\u578b\u7684\u63d0\u793a\uff1a</p> <ol> <li>\u5de5\u5382\u65b9\u6cd5\uff1a</li> <li>\u4e0d\u540c\u7684\u63d0\u793a\u6784\u5efa\u51fd\u6570\u4f5c\u4e3a\u5de5\u5382\u65b9\u6cd5</li> <li> <p>\u6bcf\u4e2a\u51fd\u6570\u8d1f\u8d23\u521b\u5efa\u7279\u5b9a\u7c7b\u578b\u7684\u63d0\u793a</p> </li> <li> <p>\u4ea7\u54c1\uff1a</p> </li> <li>\u63d0\u793a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u4ea7\u54c1</li> <li> <p>\u4e0d\u540c\u7c7b\u578b\u7684\u63d0\u793a\u6709\u4e0d\u540c\u7684\u7ed3\u6784\u548c\u5185\u5bb9</p> </li> <li> <p>\u5ba2\u6237\u7aef\uff1a</p> </li> <li>\u4efb\u52a1\u5904\u7406\u51fd\u6570\u4f5c\u4e3a\u5ba2\u6237\u7aef</li> <li>\u6839\u636e\u4efb\u52a1\u7c7b\u578b\u9009\u62e9\u9002\u5f53\u7684\u5de5\u5382\u65b9\u6cd5</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code># \u6587\u6863\u63d0\u793a\u5de5\u5382\u65b9\u6cd5\ndef build_document_prompt(ocr_text):\n    \"\"\"\u6784\u5efa\u6587\u6863\u5904\u7406\u7684\u63d0\u793a\"\"\"\n    # \u4ece prompts.py \u83b7\u53d6\u6587\u6863\u5904\u7406\u63d0\u793a\u6a21\u677f\n    prompt_template = DOCUMENT_PROMPT_TEMPLATE\n\n    # \u5c06 OCR \u6587\u672c\u63d2\u5165\u63d0\u793a\u6a21\u677f\n    prompt = prompt_template.format(document_text='\\n'.join(ocr_text))\n\n    return prompt\n\n# \u8868\u5355\u63d0\u793a\u5de5\u5382\u65b9\u6cd5\ndef build_form_prompt(ocr_text):\n    \"\"\"\u6784\u5efa\u8868\u5355\u5904\u7406\u7684\u63d0\u793a\"\"\"\n    # \u4ece prompts.py \u83b7\u53d6\u8868\u5355\u5904\u7406\u63d0\u793a\u6a21\u677f\n    prompt_template = FORM_PROMPT_TEMPLATE\n\n    # \u5c06 OCR \u6587\u672c\u63d2\u5165\u63d0\u793a\u6a21\u677f\n    prompt = prompt_template.format(form_text='\\n'.join(ocr_text))\n\n    return prompt\n\n# \u8868\u5355\u586b\u5145\u63d0\u793a\u5de5\u5382\u65b9\u6cd5\ndef build_form_filling_prompt(ocr_text, user_data):\n    \"\"\"\u6784\u5efa\u8868\u5355\u586b\u5145\u7684\u63d0\u793a\"\"\"\n    # \u4ece prompts.py \u83b7\u53d6\u8868\u5355\u586b\u5145\u63d0\u793a\u6a21\u677f\n    prompt_template = FORM_FILLING_PROMPT_TEMPLATE\n\n    # \u5c06 OCR \u6587\u672c\u548c\u7528\u6237\u6570\u636e\u63d2\u5165\u63d0\u793a\u6a21\u677f\n    prompt = prompt_template.format(\n        form_text='\\n'.join(ocr_text),\n        user_data=json.dumps(user_data, ensure_ascii=False)\n    )\n\n    return prompt\n\n# \u5ba2\u6237\u7aef\u4f7f\u7528\ndef process_document_task(task):\n    ocr_results = process_images(task['data']['images'])\n    # \u4f7f\u7528\u6587\u6863\u63d0\u793a\u5de5\u5382\u65b9\u6cd5\n    prompt = build_document_prompt(ocr_results)\n    llm_result = call_llm_api(prompt)\n    # ...\n\ndef process_form_task(task):\n    ocr_results = process_images(task['data']['images'])\n    # \u4f7f\u7528\u8868\u5355\u63d0\u793a\u5de5\u5382\u65b9\u6cd5\n    prompt = build_form_prompt(ocr_results)\n    llm_result = call_llm_api(prompt)\n    # ...\n</code></pre>"},{"location":"code-quality/design-patterns/#_9","title":"\u4f18\u52bf","text":"<ol> <li>\u5c01\u88c5\u521b\u5efa\u903b\u8f91\uff1a\u63d0\u793a\u521b\u5efa\u903b\u8f91\u5c01\u88c5\u5728\u5de5\u5382\u65b9\u6cd5\u4e2d\uff0c\u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u4e86\u89e3\u5177\u4f53\u7ec6\u8282</li> <li>\u7075\u6d3b\u6027\uff1a\u53ef\u4ee5\u8f7b\u677e\u6dfb\u52a0\u65b0\u7c7b\u578b\u7684\u63d0\u793a</li> <li>\u53ef\u7ef4\u62a4\u6027\uff1a\u63d0\u793a\u6a21\u677f\u96c6\u4e2d\u7ba1\u7406\uff0c\u4fbf\u4e8e\u4fee\u6539\u548c\u4f18\u5316</li> <li>\u4ee3\u7801\u590d\u7528\uff1a\u907f\u514d\u91cd\u590d\u7684\u63d0\u793a\u6784\u5efa\u4ee3\u7801</li> </ol>"},{"location":"code-quality/design-patterns/#_10","title":"\u4ee3\u7406\u6a21\u5f0f","text":"<p>\u4ee3\u7406\u6a21\u5f0f\u7528\u4e8e\u5b9e\u73b0\u7f13\u5b58\u673a\u5236\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff0c\u63d0\u9ad8\u7cfb\u7edf\u6027\u80fd\u3002</p>"},{"location":"code-quality/design-patterns/#_11","title":"\u5b9e\u73b0\u65b9\u5f0f","text":"<p>\u7cfb\u7edf\u4f7f\u7528\u7f13\u5b58\u4f5c\u4e3a\u5904\u7406\u7ed3\u679c\u7684\u4ee3\u7406\uff1a</p> <ol> <li>\u4e3b\u4f53\uff1a</li> <li> <p>\u5b9e\u9645\u7684\u5904\u7406\u903b\u8f91\uff08OCR \u5904\u7406\u548c LLM \u5904\u7406\uff09</p> </li> <li> <p>\u4ee3\u7406\uff1a</p> </li> <li>\u7f13\u5b58\u673a\u5236\u4f5c\u4e3a\u4ee3\u7406</li> <li>\u5728\u8bbf\u95ee\u4e3b\u4f53\u4e4b\u524d\u68c0\u67e5\u7f13\u5b58</li> <li> <p>\u5982\u679c\u7f13\u5b58\u547d\u4e2d\uff0c\u76f4\u63a5\u8fd4\u56de\u7f13\u5b58\u7ed3\u679c\uff0c\u907f\u514d\u8c03\u7528\u4e3b\u4f53</p> </li> <li> <p>\u5ba2\u6237\u7aef\uff1a</p> </li> <li>API \u7aef\u70b9\u4f5c\u4e3a\u5ba2\u6237\u7aef</li> <li>\u901a\u8fc7\u4ee3\u7406\u8bbf\u95ee\u4e3b\u4f53</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>@app.route('/api/process_document', methods=['POST'])\ndef process_document():\n    # ... \u8bf7\u6c42\u9a8c\u8bc1\u548c\u89e3\u5bc6 ...\n\n    # \u751f\u6210\u7f13\u5b58\u952e\n    cache_key = sha256_hash(json.dumps(decrypted_data, sort_keys=True))\n\n    # \u68c0\u67e5\u7f13\u5b58\uff08\u4ee3\u7406\u884c\u4e3a\uff09\n    cached_result = check_cache(cache_key)\n    if cached_result:\n        # \u7f13\u5b58\u547d\u4e2d\uff0c\u76f4\u63a5\u8fd4\u56de\u7f13\u5b58\u7ed3\u679c\n        response = encrypt_response(cached_result, aes_key)\n        return jsonify(response), 200\n\n    # \u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u521b\u5efa\u4efb\u52a1\u5e76\u6dfb\u52a0\u5230\u961f\u5217\n    task_id = str(uuid.uuid4())\n    task = {\n        'id': task_id,\n        'type': 'document',\n        'data': decrypted_data,\n        'cache_key': cache_key,\n        'aes_key': aes_key\n    }\n\n    add_task_to_queue(task)\n\n    # \u8fd4\u56de\u4efb\u52a1 ID\n    response = encrypt_response({'task_id': task_id}, aes_key)\n    return jsonify(response), 202\n\n# \u7f13\u5b58\u68c0\u67e5\u51fd\u6570\ndef check_cache(cache_key):\n    \"\"\"\u68c0\u67e5\u662f\u5426\u6709\u7f13\u5b58\u7684\u7ed3\u679c\"\"\"\n    conn = get_db_connection()\n    cursor = conn.cursor()\n\n    cursor.execute(\n        \"SELECT result FROM cache WHERE key = ? AND expires_at &gt; ?\",\n        (cache_key, int(time.time()))\n    )\n\n    result = cursor.fetchone()\n    conn.close()\n\n    if result:\n        return json.loads(result[0])\n    else:\n        return None\n\n# \u5b58\u50a8\u7f13\u5b58\ndef store_cache(cache_key, result, expires_in=86400):\n    \"\"\"\u5b58\u50a8\u7ed3\u679c\u5230\u7f13\u5b58\"\"\"\n    conn = get_db_connection()\n    cursor = conn.cursor()\n\n    expires_at = int(time.time()) + expires_in\n\n    cursor.execute(\n        \"INSERT OR REPLACE INTO cache (key, result, expires_at) VALUES (?, ?, ?)\",\n        (cache_key, json.dumps(result), expires_at)\n    )\n\n    conn.commit()\n    conn.close()\n</code></pre>"},{"location":"code-quality/design-patterns/#_12","title":"\u4f18\u52bf","text":"<ol> <li>\u6027\u80fd\u4f18\u5316\uff1a\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff0c\u63d0\u9ad8\u7cfb\u7edf\u54cd\u5e94\u901f\u5ea6</li> <li>\u900f\u660e\u6027\uff1a\u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u4e86\u89e3\u7f13\u5b58\u673a\u5236\u7684\u7ec6\u8282</li> <li>\u63a7\u5236\u8bbf\u95ee\uff1a\u4ee3\u7406\u53ef\u4ee5\u63a7\u5236\u5bf9\u4e3b\u4f53\u7684\u8bbf\u95ee\uff0c\u5b9e\u73b0\u989d\u5916\u7684\u529f\u80fd\uff08\u5982\u7f13\u5b58\u8fc7\u671f\uff09</li> <li>\u8d44\u6e90\u8282\u7ea6\uff1a\u51cf\u5c11\u5bf9 OCR \u548c LLM \u670d\u52a1\u7684\u8c03\u7528\uff0c\u8282\u7ea6\u8d44\u6e90</li> </ol>"},{"location":"code-quality/design-patterns/#_13","title":"\u547d\u4ee4\u6a21\u5f0f","text":"<p>\u547d\u4ee4\u6a21\u5f0f\u7528\u4e8e\u5c01\u88c5\u4efb\u52a1\u5904\u7406\u8bf7\u6c42\uff0c\u652f\u6301\u5f02\u6b65\u6267\u884c\u548c\u72b6\u6001\u8ddf\u8e2a\u3002</p>"},{"location":"code-quality/design-patterns/#_14","title":"\u5b9e\u73b0\u65b9\u5f0f","text":"<p>\u7cfb\u7edf\u5c06\u4efb\u52a1\u5c01\u88c5\u4e3a\u547d\u4ee4\u5bf9\u8c61\uff1a</p> <ol> <li>\u547d\u4ee4\uff1a</li> <li>\u4efb\u52a1\u5bf9\u8c61\u4f5c\u4e3a\u547d\u4ee4</li> <li> <p>\u5305\u542b\u6267\u884c\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\uff08\u4efb\u52a1\u7c7b\u578b\u3001\u6570\u636e\u3001ID \u7b49\uff09</p> </li> <li> <p>\u8c03\u7528\u8005\uff1a</p> </li> <li>\u5de5\u4f5c\u7ebf\u7a0b\u4f5c\u4e3a\u8c03\u7528\u8005</li> <li> <p>\u4ece\u961f\u5217\u83b7\u53d6\u547d\u4ee4\u5e76\u6267\u884c</p> </li> <li> <p>\u63a5\u6536\u8005\uff1a</p> </li> <li>\u5904\u7406\u51fd\u6570\u4f5c\u4e3a\u63a5\u6536\u8005</li> <li>\u6267\u884c\u5b9e\u9645\u7684\u5904\u7406\u903b\u8f91</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code># \u521b\u5efa\u547d\u4ee4\uff08\u4efb\u52a1\u5bf9\u8c61\uff09\ntask = {\n    'id': task_id,\n    'type': 'document',\n    'data': decrypted_data,\n    'cache_key': cache_key,\n    'aes_key': aes_key\n}\n\n# \u6dfb\u52a0\u547d\u4ee4\u5230\u961f\u5217\nadd_task_to_queue(task)\n\n# \u8c03\u7528\u8005\uff08\u5de5\u4f5c\u7ebf\u7a0b\uff09\u6267\u884c\u547d\u4ee4\ndef worker():\n    while True:\n        # \u83b7\u53d6\u547d\u4ee4\n        task = task_queue.get()\n        try:\n            # \u6839\u636e\u547d\u4ee4\u7c7b\u578b\u9009\u62e9\u63a5\u6536\u8005\n            if task['type'] == 'document':\n                # \u63a5\u6536\u8005\u6267\u884c\u547d\u4ee4\n                process_document_task(task)\n            elif task['type'] == 'form':\n                process_form_task(task)\n            elif task['type'] == 'form_filling':\n                process_form_filling_task(task)\n        except Exception as e:\n            update_task_status(task['id'], 'error', str(e))\n        finally:\n            task_queue.task_done()\n</code></pre>"},{"location":"code-quality/design-patterns/#_15","title":"\u4f18\u52bf","text":"<ol> <li>\u89e3\u8026\uff1a\u5c06\u8bf7\u6c42\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\u89e3\u8026</li> <li>\u53ef\u961f\u5217\u5316\uff1a\u547d\u4ee4\u53ef\u4ee5\u5b58\u50a8\u5728\u961f\u5217\u4e2d\uff0c\u652f\u6301\u5f02\u6b65\u6267\u884c</li> <li>\u53ef\u64a4\u9500\uff1a\u53ef\u4ee5\u5b9e\u73b0\u547d\u4ee4\u7684\u64a4\u9500\u548c\u91cd\u505a\uff08\u867d\u7136\u5f53\u524d\u7cfb\u7edf\u672a\u5b9e\u73b0\uff09</li> <li>\u72b6\u6001\u8ddf\u8e2a\uff1a\u53ef\u4ee5\u8ddf\u8e2a\u547d\u4ee4\u7684\u6267\u884c\u72b6\u6001</li> </ol>"},{"location":"code-quality/design-patterns/#_16","title":"\u88c5\u9970\u5668\u6a21\u5f0f","text":"<p>\u88c5\u9970\u5668\u6a21\u5f0f\u7528\u4e8e\u589e\u5f3a\u6838\u5fc3\u529f\u80fd\uff0c\u5982\u6dfb\u52a0\u5b89\u5168\u9a8c\u8bc1\u3001\u9519\u8bef\u5904\u7406\u7b49\u3002</p>"},{"location":"code-quality/design-patterns/#_17","title":"\u5b9e\u73b0\u65b9\u5f0f","text":"<p>\u7cfb\u7edf\u4f7f\u7528 Python \u7684\u88c5\u9970\u5668\u8bed\u6cd5\u5b9e\u73b0\u88c5\u9970\u5668\u6a21\u5f0f\uff1a</p> <ol> <li>\u6838\u5fc3\u7ec4\u4ef6\uff1a</li> <li> <p>\u6838\u5fc3\u529f\u80fd\u51fd\u6570\uff08\u5982 API \u7aef\u70b9\uff09</p> </li> <li> <p>\u88c5\u9970\u5668\uff1a</p> </li> <li>Flask \u7684\u8def\u7531\u88c5\u9970\u5668\uff08<code>@app.route</code>\uff09</li> <li> <p>\u81ea\u5b9a\u4e49\u7684\u9519\u8bef\u5904\u7406\u88c5\u9970\u5668</p> </li> <li> <p>\u589e\u5f3a\u529f\u80fd\uff1a</p> </li> <li>\u8def\u7531\u6620\u5c04</li> <li>\u8bf7\u6c42\u89e3\u6790</li> <li>\u9519\u8bef\u6355\u83b7\u548c\u5904\u7406</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code># Flask \u8def\u7531\u88c5\u9970\u5668\n@app.route('/api/process_document', methods=['POST'])\ndef process_document():\n    # \u6838\u5fc3\u529f\u80fd\n    # ...\n\n# \u81ea\u5b9a\u4e49\u9519\u8bef\u5904\u7406\u88c5\u9970\u5668\uff08\u5047\u8bbe\u5b9e\u73b0\uff09\ndef error_handler(func):\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        try:\n            return func(*args, **kwargs)\n        except Exception as e:\n            # \u9519\u8bef\u5904\u7406\u903b\u8f91\n            return jsonify({\"error\": str(e)}), 500\n    return wrapper\n\n# \u4f7f\u7528\u81ea\u5b9a\u4e49\u88c5\u9970\u5668\n@app.route('/api/task_status', methods=['POST'])\n@error_handler\ndef get_task_status():\n    # \u6838\u5fc3\u529f\u80fd\n    # ...\n</code></pre>"},{"location":"code-quality/design-patterns/#_18","title":"\u4f18\u52bf","text":"<ol> <li>\u529f\u80fd\u589e\u5f3a\uff1a\u5728\u4e0d\u4fee\u6539\u6838\u5fc3\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u589e\u5f3a\u529f\u80fd</li> <li>\u5173\u6ce8\u70b9\u5206\u79bb\uff1a\u6838\u5fc3\u903b\u8f91\u548c\u589e\u5f3a\u529f\u80fd\u5206\u79bb</li> <li>\u53ef\u7ec4\u5408\u6027\uff1a\u591a\u4e2a\u88c5\u9970\u5668\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528</li> <li>\u53ef\u590d\u7528\u6027\uff1a\u88c5\u9970\u5668\u53ef\u4ee5\u5e94\u7528\u4e8e\u591a\u4e2a\u6838\u5fc3\u7ec4\u4ef6</li> </ol>"},{"location":"code-quality/design-patterns/#_19","title":"\u9002\u914d\u5668\u6a21\u5f0f","text":"<p>\u9002\u914d\u5668\u6a21\u5f0f\u7528\u4e8e\u8f6c\u6362\u6570\u636e\u683c\u5f0f\uff0c\u4f7f\u4e0d\u540c\u7ec4\u4ef6\u80fd\u591f\u534f\u540c\u5de5\u4f5c\u3002</p>"},{"location":"code-quality/design-patterns/#_20","title":"\u5b9e\u73b0\u65b9\u5f0f","text":"<p>\u7cfb\u7edf\u5728\u591a\u4e2a\u5730\u65b9\u4f7f\u7528\u9002\u914d\u5668\u6a21\u5f0f\u8f6c\u6362\u6570\u636e\u683c\u5f0f\uff1a</p> <ol> <li>OCR \u7ed3\u679c\u9002\u914d\uff1a</li> <li> <p>\u5c06 OCR \u670d\u52a1\u8fd4\u56de\u7684\u7ed3\u679c\u8f6c\u6362\u4e3a LLM \u5904\u7406\u6240\u9700\u7684\u683c\u5f0f</p> </li> <li> <p>LLM \u7ed3\u679c\u9002\u914d\uff1a</p> </li> <li> <p>\u5c06 LLM \u8fd4\u56de\u7684\u6587\u672c\u89e3\u6790\u4e3a\u7ed3\u6784\u5316\u7684 JSON \u6570\u636e</p> </li> <li> <p>\u54cd\u5e94\u683c\u5f0f\u9002\u914d\uff1a</p> </li> <li>\u5c06\u5185\u90e8\u6570\u636e\u7ed3\u6784\u8f6c\u6362\u4e3a API \u54cd\u5e94\u683c\u5f0f</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code># OCR \u7ed3\u679c\u9002\u914d\ndef extract_text_from_ocr_result(ocr_result):\n    \"\"\"\u4ece OCR \u7ed3\u679c\u4e2d\u63d0\u53d6\u6587\u672c\uff08\u9002\u914d\u5668\uff09\"\"\"\n    try:\n        # \u68c0\u67e5 OCR \u7ed3\u679c\u683c\u5f0f\n        if 'text' not in ocr_result:\n            raise Exception(\"OCR \u7ed3\u679c\u683c\u5f0f\u9519\u8bef\")\n\n        # \u63d0\u53d6\u6587\u672c\n        text = ocr_result['text']\n\n        # \u57fa\u672c\u6587\u672c\u6e05\u7406\n        text = text.strip()\n\n        return text\n    except Exception as e:\n        raise Exception(f\"OCR \u7ed3\u679c\u5904\u7406\u5931\u8d25: {str(e)}\")\n\n# LLM \u7ed3\u679c\u9002\u914d\ndef parse_document_result(llm_response):\n    \"\"\"\u89e3\u6790\u6587\u6863\u5904\u7406\u7684 LLM \u54cd\u5e94\uff08\u9002\u914d\u5668\uff09\"\"\"\n    try:\n        # \u5c1d\u8bd5\u89e3\u6790 JSON \u683c\u5f0f\u7684\u54cd\u5e94\n        if llm_response.strip().startswith('{') and llm_response.strip().endswith('}'):\n            return json.loads(llm_response)\n\n        # \u5c1d\u8bd5\u63d0\u53d6 JSON \u90e8\u5206\n        json_match = re.search(r'```json\\s*([\\s\\S]*?)\\s*```', llm_response)\n        if json_match:\n            json_str = json_match.group(1)\n            return json.loads(json_str)\n\n        # \u5982\u679c\u65e0\u6cd5\u89e3\u6790\u4e3a JSON\uff0c\u8fd4\u56de\u539f\u59cb\u6587\u672c\n        return {\"text\": llm_response, \"parsed\": False}\n    except Exception as e:\n        # \u89e3\u6790\u5931\u8d25\uff0c\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u548c\u539f\u59cb\u54cd\u5e94\n        return {\n            \"error\": f\"\u89e3\u6790\u5931\u8d25: {str(e)}\",\n            \"raw_response\": llm_response,\n            \"parsed\": False\n        }\n</code></pre>"},{"location":"code-quality/design-patterns/#_21","title":"\u4f18\u52bf","text":"<ol> <li>\u517c\u5bb9\u6027\uff1a\u4f7f\u4e0d\u540c\u63a5\u53e3\u7684\u7ec4\u4ef6\u80fd\u591f\u534f\u540c\u5de5\u4f5c</li> <li>\u91cd\u7528\u6027\uff1a\u53ef\u4ee5\u91cd\u7528\u73b0\u6709\u7ec4\u4ef6\uff0c\u800c\u4e0d\u9700\u8981\u4fee\u6539\u5176\u63a5\u53e3</li> <li>\u7075\u6d3b\u6027\uff1a\u53ef\u4ee5\u9002\u5e94\u4e0d\u540c\u7684\u6570\u636e\u683c\u5f0f\u548c\u63a5\u53e3\u8981\u6c42</li> <li>\u5c01\u88c5\u53d8\u5316\uff1a\u5c06\u63a5\u53e3\u8f6c\u6362\u7684\u590d\u6742\u6027\u5c01\u88c5\u5728\u9002\u914d\u5668\u4e2d</li> </ol>"},{"location":"code-quality/design-patterns/#_22","title":"\u603b\u7ed3","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u5e94\u7528\u4e86\u591a\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u8fd9\u4e9b\u6a21\u5f0f\u5171\u540c\u6784\u6210\u4e86\u4e00\u4e2a\u7075\u6d3b\u3001\u53ef\u6269\u5c55\u7684\u67b6\u6784\uff1a</p> <ol> <li>\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u5f0f\uff1a\u5b9e\u73b0\u5f02\u6b65\u4efb\u52a1\u5904\u7406</li> <li>\u7b56\u7565\u6a21\u5f0f\uff1a\u6839\u636e\u4efb\u52a1\u7c7b\u578b\u9009\u62e9\u5904\u7406\u7b56\u7565</li> <li>\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\uff1a\u521b\u5efa\u4e0d\u540c\u7c7b\u578b\u7684\u63d0\u793a</li> <li>\u4ee3\u7406\u6a21\u5f0f\uff1a\u5b9e\u73b0\u7f13\u5b58\u673a\u5236</li> <li>\u547d\u4ee4\u6a21\u5f0f\uff1a\u5c01\u88c5\u4efb\u52a1\u5904\u7406\u8bf7\u6c42</li> <li>\u88c5\u9970\u5668\u6a21\u5f0f\uff1a\u589e\u5f3a\u6838\u5fc3\u529f\u80fd</li> <li>\u9002\u914d\u5668\u6a21\u5f0f\uff1a\u8f6c\u6362\u6570\u636e\u683c\u5f0f</li> </ol> <p>\u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u7684\u5e94\u7528\u4f53\u73b0\u4e86\u826f\u597d\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u539f\u5219\uff0c\u5982\u5355\u4e00\u804c\u8d23\u3001\u5f00\u95ed\u539f\u5219\u3001\u4f9d\u8d56\u5012\u7f6e\u7b49\uff0c\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u3001\u53ef\u6269\u5c55\u6027\u548c\u7075\u6d3b\u6027\u3002\u867d\u7136\u7cfb\u7edf\u4e2d\u7684\u8bbe\u8ba1\u6a21\u5f0f\u5b9e\u73b0\u76f8\u5bf9\u7b80\u5355\uff0c\u4f46\u5df2\u7ecf\u80fd\u591f\u6709\u6548\u652f\u6301\u7cfb\u7edf\u7684\u6838\u5fc3\u529f\u80fd\u548c\u6027\u80fd\u9700\u6c42\u3002</p> <p>\u901a\u8fc7\u66f4\u6df1\u5165\u5730\u5e94\u7528\u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u4ee5\u53ca\u5f15\u5165\u66f4\u591a\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff08\u5982\u89c2\u5bdf\u8005\u6a21\u5f0f\u3001\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u7b49\uff09\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u7cfb\u7edf\u7684\u8d28\u91cf\u548c\u53ef\u6269\u5c55\u6027\u3002</p>"},{"location":"code-quality/improvement-suggestions/","title":"\u6539\u8fdb\u5efa\u8bae","text":"<p>\u57fa\u4e8e\u5bf9 DocuSnap-Backend \u4ee3\u7801\u5e93\u7684\u8d28\u91cf\u8bc4\u4f30\uff0c\u672c\u9875\u9762\u63d0\u4f9b\u5177\u4f53\u7684\u6539\u8fdb\u5efa\u8bae\uff0c\u5e2e\u52a9\u63d0\u5347\u4ee3\u7801\u8d28\u91cf\u3001\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002</p>"},{"location":"code-quality/improvement-suggestions/#_2","title":"\u4ee3\u7801\u7ed3\u6784\u6539\u8fdb","text":""},{"location":"code-quality/improvement-suggestions/#1","title":"1. \u6a21\u5757\u5316\u91cd\u6784","text":"<p>\u5f53\u524d\u4ee3\u7801\u4e3b\u8981\u96c6\u4e2d\u5728 <code>app.py</code> \u6587\u4ef6\u4e2d\uff0c\u5efa\u8bae\u5c06\u4ee3\u7801\u62c6\u5206\u4e3a\u591a\u4e2a\u6a21\u5757\u6587\u4ef6\uff1a</p> <pre><code>DocuSnap-Backend/\n\u251c\u2500\u2500 app.py                  # \u4e3b\u5e94\u7528\u5165\u53e3\uff0c\u53ea\u5305\u542b Flask \u5e94\u7528\u914d\u7f6e\u548c\u8def\u7531\u5b9a\u4e49\n\u251c\u2500\u2500 modules/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 ocr.py              # OCR \u5904\u7406\u76f8\u5173\u529f\u80fd\n\u2502   \u251c\u2500\u2500 llm.py              # LLM \u5904\u7406\u76f8\u5173\u529f\u80fd\n\u2502   \u251c\u2500\u2500 security.py         # \u5b89\u5168\u52a0\u5bc6\u76f8\u5173\u529f\u80fd\n\u2502   \u251c\u2500\u2500 cache.py            # \u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u76f8\u5173\u529f\u80fd\n\u2502   \u2514\u2500\u2500 tasks.py            # \u4efb\u52a1\u5904\u7406\u76f8\u5173\u529f\u80fd\n\u251c\u2500\u2500 utils/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 db.py               # \u6570\u636e\u5e93\u64cd\u4f5c\u5de5\u5177\n\u2502   \u251c\u2500\u2500 image.py            # \u56fe\u50cf\u5904\u7406\u5de5\u5177\n\u2502   \u2514\u2500\u2500 validation.py       # \u8bf7\u6c42\u9a8c\u8bc1\u5de5\u5177\n\u251c\u2500\u2500 config/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 settings.py         # \u914d\u7f6e\u53c2\u6570\n\u251c\u2500\u2500 prompts/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 document.py         # \u6587\u6863\u5904\u7406\u63d0\u793a\n\u2502   \u251c\u2500\u2500 form.py             # \u8868\u5355\u5904\u7406\u63d0\u793a\n\u2502   \u2514\u2500\u2500 form_filling.py     # \u8868\u5355\u586b\u5145\u63d0\u793a\n\u2514\u2500\u2500 api/\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 document.py         # \u6587\u6863\u5904\u7406 API\n    \u251c\u2500\u2500 form.py             # \u8868\u5355\u5904\u7406 API\n    \u2514\u2500\u2500 task.py             # \u4efb\u52a1\u72b6\u6001 API\n</code></pre> <p>\u8fd9\u79cd\u7ed3\u6784\u5c06\u4ee3\u7801\u6309\u529f\u80fd\u6a21\u5757\u5212\u5206\uff0c\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u7ec4\u7ec7\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002</p>"},{"location":"code-quality/improvement-suggestions/#2","title":"2. \u5f15\u5165\u5c42\u6b21\u7ed3\u6784","text":"<p>\u5efa\u8bae\u5f15\u5165\u66f4\u6e05\u6670\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u5c06\u4ee3\u7801\u5206\u4e3a\u4ee5\u4e0b\u51e0\u5c42\uff1a</p> <ol> <li>API \u5c42\uff1a\u5904\u7406 HTTP \u8bf7\u6c42\u548c\u54cd\u5e94</li> <li>\u670d\u52a1\u5c42\uff1a\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91</li> <li>\u6570\u636e\u8bbf\u95ee\u5c42\uff1a\u5904\u7406\u6570\u636e\u5b58\u50a8\u548c\u68c0\u7d22</li> <li>\u5916\u90e8\u670d\u52a1\u5c42\uff1a\u4e0e\u5916\u90e8\u670d\u52a1\uff08OCR\u3001LLM\uff09\u4ea4\u4e92</li> </ol> <p>\u793a\u4f8b\u5b9e\u73b0\uff1a</p> <pre><code># API \u5c42 (api/document.py)\n@app.route('/api/process_document', methods=['POST'])\ndef process_document():\n    # \u8bf7\u6c42\u89e3\u6790\u548c\u9a8c\u8bc1\n    data = request.get_json()\n    decrypted_data, aes_key = security_service.decrypt_request(data)\n\n    # \u8c03\u7528\u670d\u52a1\u5c42\n    task_id = document_service.process_document(decrypted_data)\n\n    # \u54cd\u5e94\u751f\u6210\n    response = security_service.encrypt_response({'task_id': task_id}, aes_key)\n    return jsonify(response), 202\n\n# \u670d\u52a1\u5c42 (modules/document_service.py)\ndef process_document(data):\n    # \u4e1a\u52a1\u903b\u8f91\n    cache_key = generate_cache_key(data)\n    cached_result = cache_repository.get_cache(cache_key)\n\n    if cached_result:\n        return cached_result\n\n    task_id = str(uuid.uuid4())\n    task = create_task(task_id, 'document', data, cache_key)\n    task_queue.put(task)\n\n    return task_id\n\n# \u6570\u636e\u8bbf\u95ee\u5c42 (modules/cache_repository.py)\ndef get_cache(cache_key):\n    conn = get_db_connection()\n    cursor = conn.cursor()\n\n    cursor.execute(\n        \"SELECT result FROM cache WHERE key = ? AND expires_at &gt; ?\",\n        (cache_key, int(time.time()))\n    )\n\n    result = cursor.fetchone()\n    conn.close()\n\n    if result:\n        return json.loads(result[0])\n    else:\n        return None\n\n# \u5916\u90e8\u670d\u52a1\u5c42 (modules/ocr_service.py)\ndef call_ocr_service(image_data):\n    try:\n        files = {'image': ('image.png', image_data, 'image/png')}\n        response = requests.post(OCR_SERVICE_URL, files=files, timeout=OCR_TIMEOUT)\n\n        if response.status_code == 200:\n            return response.json()\n        else:\n            raise Exception(f\"OCR \u670d\u52a1\u8fd4\u56de\u9519\u8bef: {response.status_code}\")\n    except requests.RequestException as e:\n        raise Exception(f\"OCR \u670d\u52a1\u8c03\u7528\u5931\u8d25: {str(e)}\")\n</code></pre> <p>\u8fd9\u79cd\u5c42\u6b21\u7ed3\u6784\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u7ec4\u7ec7\u6027\u548c\u53ef\u7ef4\u62a4\u6027\uff0c\u540c\u65f6\u4e5f\u4fbf\u4e8e\u5355\u5143\u6d4b\u8bd5\u548c\u529f\u80fd\u6269\u5c55\u3002</p>"},{"location":"code-quality/improvement-suggestions/#_3","title":"\u4ee3\u7801\u8d28\u91cf\u6539\u8fdb","text":""},{"location":"code-quality/improvement-suggestions/#1_1","title":"1. \u5f15\u5165\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b","text":"<p>\u5f53\u524d\u4ee3\u7801\u4e3b\u8981\u4f7f\u7528\u51fd\u6570\u5f0f\u7f16\u7a0b\u98ce\u683c\uff0c\u5efa\u8bae\u5f15\u5165\u66f4\u591a\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff0c\u4f7f\u7528\u7c7b\u548c\u5bf9\u8c61\u7ec4\u7ec7\u4ee3\u7801\uff1a</p> <pre><code># \u4efb\u52a1\u5904\u7406\u5668\u7c7b\nclass TaskProcessor:\n    def __init__(self, db_connection, ocr_service, llm_service):\n        self.db_connection = db_connection\n        self.ocr_service = ocr_service\n        self.llm_service = llm_service\n        self.task_queue = Queue()\n        self.workers = []\n\n    def start_workers(self, num_workers=4):\n        for _ in range(num_workers):\n            worker = threading.Thread(target=self._worker_loop, daemon=True)\n            worker.start()\n            self.workers.append(worker)\n\n    def add_task(self, task):\n        self.task_queue.put(task)\n        return task['id']\n\n    def _worker_loop(self):\n        while True:\n            task = self.task_queue.get()\n            try:\n                self._process_task(task)\n            except Exception as e:\n                self._update_task_status(task['id'], 'error', str(e))\n            finally:\n                self.task_queue.task_done()\n\n    def _process_task(self, task):\n        # \u6839\u636e\u4efb\u52a1\u7c7b\u578b\u9009\u62e9\u5904\u7406\u7b56\u7565\n        if task['type'] == 'document':\n            self._process_document_task(task)\n        elif task['type'] == 'form':\n            self._process_form_task(task)\n        elif task['type'] == 'form_filling':\n            self._process_form_filling_task(task)\n\n    def _process_document_task(self, task):\n        # \u6587\u6863\u5904\u7406\u903b\u8f91\n        pass\n\n    def _update_task_status(self, task_id, status, result=None):\n        # \u66f4\u65b0\u4efb\u52a1\u72b6\u6001\n        pass\n</code></pre> <p>\u8fd9\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u7ec4\u7ec7\u6027\u548c\u53ef\u7ef4\u62a4\u6027\uff0c\u540c\u65f6\u4e5f\u4fbf\u4e8e\u4f9d\u8d56\u6ce8\u5165\u548c\u5355\u5143\u6d4b\u8bd5\u3002</p>"},{"location":"code-quality/improvement-suggestions/#2_1","title":"2. \u5f15\u5165\u4f9d\u8d56\u6ce8\u5165","text":"<p>\u5f53\u524d\u4ee3\u7801\u4e2d\u7684\u4f9d\u8d56\u5173\u7cfb\u662f\u786c\u7f16\u7801\u7684\uff0c\u5efa\u8bae\u5f15\u5165\u4f9d\u8d56\u6ce8\u5165\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6d4b\u8bd5\u6027\uff1a</p> <pre><code># \u4f9d\u8d56\u6ce8\u5165\u5bb9\u5668\nclass Container:\n    def __init__(self):\n        self.services = {}\n\n    def register(self, name, instance):\n        self.services[name] = instance\n\n    def get(self, name):\n        if name not in self.services:\n            raise Exception(f\"Service '{name}' not registered\")\n        return self.services[name]\n\n# \u5e94\u7528\u521d\u59cb\u5316\ndef init_app():\n    container = Container()\n\n    # \u6ce8\u518c\u670d\u52a1\n    db_connection = get_db_connection()\n    container.register('db_connection', db_connection)\n\n    ocr_service = OCRService(OCR_SERVICE_URL, OCR_TIMEOUT)\n    container.register('ocr_service', ocr_service)\n\n    llm_service = LLMService(LLM_API_KEY, LLM_MODEL)\n    container.register('llm_service', llm_service)\n\n    task_processor = TaskProcessor(\n        db_connection=container.get('db_connection'),\n        ocr_service=container.get('ocr_service'),\n        llm_service=container.get('llm_service')\n    )\n    container.register('task_processor', task_processor)\n\n    return container\n\n# \u4f7f\u7528\u5bb9\u5668\ncontainer = init_app()\ntask_processor = container.get('task_processor')\ntask_processor.start_workers()\n</code></pre> <p>\u8fd9\u79cd\u4f9d\u8d56\u6ce8\u5165\u7684\u8bbe\u8ba1\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6d4b\u8bd5\u6027\uff0c\u540c\u65f6\u4e5f\u4fbf\u4e8e\u66ff\u6362\u5e95\u5c42\u5b9e\u73b0\u3002</p>"},{"location":"code-quality/improvement-suggestions/#3","title":"3. \u6dfb\u52a0\u5355\u5143\u6d4b\u8bd5","text":"<p>\u5f53\u524d\u4ee3\u7801\u7f3a\u4e4f\u5355\u5143\u6d4b\u8bd5\uff0c\u5efa\u8bae\u6dfb\u52a0\u5355\u5143\u6d4b\u8bd5\uff0c\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u548c\u53ef\u9760\u6027\uff1a</p> <pre><code># tests/test_ocr_service.py\nimport unittest\nfrom unittest.mock import patch, Mock\nfrom modules.ocr_service import OCRService\n\nclass TestOCRService(unittest.TestCase):\n    def setUp(self):\n        self.ocr_service = OCRService('http://example.com/ocr', 10)\n\n    @patch('modules.ocr_service.requests.post')\n    def test_call_ocr_service_success(self, mock_post):\n        # \u6a21\u62df\u6210\u529f\u54cd\u5e94\n        mock_response = Mock()\n        mock_response.status_code = 200\n        mock_response.json.return_value = {'text': 'Hello World'}\n        mock_post.return_value = mock_response\n\n        # \u8c03\u7528\u670d\u52a1\n        result = self.ocr_service.call_ocr_service(b'image_data')\n\n        # \u9a8c\u8bc1\u7ed3\u679c\n        self.assertEqual(result, {'text': 'Hello World'})\n        mock_post.assert_called_once()\n\n    @patch('modules.ocr_service.requests.post')\n    def test_call_ocr_service_error(self, mock_post):\n        # \u6a21\u62df\u9519\u8bef\u54cd\u5e94\n        mock_response = Mock()\n        mock_response.status_code = 500\n        mock_post.return_value = mock_response\n\n        # \u9a8c\u8bc1\u5f02\u5e38\n        with self.assertRaises(Exception) as context:\n            self.ocr_service.call_ocr_service(b'image_data')\n\n        self.assertIn('OCR \u670d\u52a1\u8fd4\u56de\u9519\u8bef: 500', str(context.exception))\n        mock_post.assert_called_once()\n\n# \u8fd0\u884c\u6d4b\u8bd5\nif __name__ == '__main__':\n    unittest.main()\n</code></pre> <p>\u5355\u5143\u6d4b\u8bd5\u53ef\u4ee5\u9a8c\u8bc1\u4ee3\u7801\u7684\u6b63\u786e\u6027\uff0c\u53d1\u73b0\u6f5c\u5728\u7684\u95ee\u9898\uff0c\u5e76\u652f\u6301\u91cd\u6784\u548c\u4f18\u5316\u3002</p>"},{"location":"code-quality/improvement-suggestions/#_4","title":"\u53ef\u6269\u5c55\u6027\u6539\u8fdb","text":""},{"location":"code-quality/improvement-suggestions/#1_2","title":"1. \u5f15\u5165\u62bd\u8c61\u63a5\u53e3","text":"<p>\u5f53\u524d\u4ee3\u7801\u76f4\u63a5\u4f7f\u7528\u5177\u4f53\u5b9e\u73b0\uff0c\u5efa\u8bae\u5f15\u5165\u62bd\u8c61\u63a5\u53e3\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\uff1a</p> <pre><code># \u62bd\u8c61\u63a5\u53e3\nclass OCRService:\n    def process_image(self, image_data):\n        \"\"\"\u5904\u7406\u56fe\u50cf\u5e76\u8fd4\u56de\u6587\u672c\u7ed3\u679c\"\"\"\n        raise NotImplementedError(\"\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u6b64\u65b9\u6cd5\")\n\n# \u5177\u4f53\u5b9e\u73b0\nclass CnOCRService(OCRService):\n    def __init__(self, service_url, timeout):\n        self.service_url = service_url\n        self.timeout = timeout\n\n    def process_image(self, image_data):\n        \"\"\"\u4f7f\u7528 CnOCR \u670d\u52a1\u5904\u7406\u56fe\u50cf\"\"\"\n        try:\n            files = {'image': ('image.png', image_data, 'image/png')}\n            response = requests.post(self.service_url, files=files, timeout=self.timeout)\n\n            if response.status_code == 200:\n                ocr_result = response.json()\n                return self._extract_text(ocr_result)\n            else:\n                raise Exception(f\"OCR \u670d\u52a1\u8fd4\u56de\u9519\u8bef: {response.status_code}\")\n        except requests.RequestException as e:\n            raise Exception(f\"OCR \u670d\u52a1\u8c03\u7528\u5931\u8d25: {str(e)}\")\n\n    def _extract_text(self, ocr_result):\n        \"\"\"\u4ece OCR \u7ed3\u679c\u4e2d\u63d0\u53d6\u6587\u672c\"\"\"\n        if 'text' not in ocr_result:\n            raise Exception(\"OCR \u7ed3\u679c\u683c\u5f0f\u9519\u8bef\")\n\n        return ocr_result['text'].strip()\n\n# \u4f7f\u7528\u793a\u4f8b\nocr_service = CnOCRService(OCR_SERVICE_URL, OCR_TIMEOUT)\ntext = ocr_service.process_image(image_data)\n</code></pre> <p>\u8fd9\u79cd\u62bd\u8c61\u63a5\u53e3\u7684\u8bbe\u8ba1\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\uff0c\u53ef\u4ee5\u8f7b\u677e\u66ff\u6362\u5e95\u5c42\u5b9e\u73b0\uff0c\u5982\u66f4\u6362 OCR \u670d\u52a1\u63d0\u4f9b\u5546\u3002</p>"},{"location":"code-quality/improvement-suggestions/#2_2","title":"2. \u5f15\u5165\u63d2\u4ef6\u673a\u5236","text":"<p>\u5f53\u524d\u7cfb\u7edf\u7f3a\u4e4f\u63d2\u4ef6\u673a\u5236\uff0c\u5efa\u8bae\u5f15\u5165\u63d2\u4ef6\u673a\u5236\uff0c\u652f\u6301\u52a8\u6001\u6269\u5c55\u529f\u80fd\uff1a</p> <pre><code># \u63d2\u4ef6\u7ba1\u7406\u5668\nclass PluginManager:\n    def __init__(self):\n        self.plugins = {}\n\n    def register_plugin(self, name, plugin):\n        \"\"\"\u6ce8\u518c\u63d2\u4ef6\"\"\"\n        self.plugins[name] = plugin\n\n    def get_plugin(self, name):\n        \"\"\"\u83b7\u53d6\u63d2\u4ef6\"\"\"\n        if name not in self.plugins:\n            raise Exception(f\"Plugin '{name}' not registered\")\n        return self.plugins[name]\n\n    def list_plugins(self):\n        \"\"\"\u5217\u51fa\u6240\u6709\u63d2\u4ef6\"\"\"\n        return list(self.plugins.keys())\n\n# \u63d2\u4ef6\u63a5\u53e3\nclass ProcessorPlugin:\n    def process(self, task):\n        \"\"\"\u5904\u7406\u4efb\u52a1\"\"\"\n        raise NotImplementedError(\"\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u6b64\u65b9\u6cd5\")\n\n# \u5177\u4f53\u63d2\u4ef6\u5b9e\u73b0\nclass DocumentProcessor(ProcessorPlugin):\n    def __init__(self, ocr_service, llm_service):\n        self.ocr_service = ocr_service\n        self.llm_service = llm_service\n\n    def process(self, task):\n        \"\"\"\u5904\u7406\u6587\u6863\u4efb\u52a1\"\"\"\n        # \u6587\u6863\u5904\u7406\u903b\u8f91\n        pass\n\n# \u4f7f\u7528\u793a\u4f8b\nplugin_manager = PluginManager()\nplugin_manager.register_plugin('document', DocumentProcessor(ocr_service, llm_service))\nplugin_manager.register_plugin('form', FormProcessor(ocr_service, llm_service))\n\n# \u5904\u7406\u4efb\u52a1\nprocessor = plugin_manager.get_plugin(task['type'])\nresult = processor.process(task)\n</code></pre> <p>\u8fd9\u79cd\u63d2\u4ef6\u673a\u5236\u7684\u8bbe\u8ba1\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u53ef\u6269\u5c55\u6027\uff0c\u53ef\u4ee5\u8f7b\u677e\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\u6a21\u5757\uff0c\u5982\u65b0\u7684\u4efb\u52a1\u7c7b\u578b\u3002</p>"},{"location":"code-quality/improvement-suggestions/#_5","title":"\u5b89\u5168\u6027\u6539\u8fdb","text":""},{"location":"code-quality/improvement-suggestions/#1_3","title":"1. \u6539\u8fdb\u5bc6\u94a5\u7ba1\u7406","text":"<p>\u5f53\u524d\u7cfb\u7edf\u7684\u5bc6\u94a5\u7ba1\u7406\u76f8\u5bf9\u7b80\u5355\uff0c\u5efa\u8bae\u6539\u8fdb\u5bc6\u94a5\u7ba1\u7406\u673a\u5236\uff1a</p> <pre><code># \u5bc6\u94a5\u7ba1\u7406\u5668\nclass KeyManager:\n    def __init__(self, key_store_path):\n        self.key_store_path = key_store_path\n        self.keys = {}\n        self.load_keys()\n\n    def load_keys(self):\n        \"\"\"\u52a0\u8f7d\u5bc6\u94a5\"\"\"\n        try:\n            with open(self.key_store_path, 'rb') as f:\n                encrypted_keys = f.read()\n\n            # \u4f7f\u7528\u4e3b\u5bc6\u94a5\u89e3\u5bc6\u5bc6\u94a5\u5b58\u50a8\n            master_key = os.environ.get('MASTER_KEY')\n            if not master_key:\n                raise Exception(\"Missing MASTER_KEY environment variable\")\n\n            decrypted_keys = self._decrypt_with_master_key(encrypted_keys, master_key)\n            self.keys = json.loads(decrypted_keys)\n        except Exception as e:\n            raise Exception(f\"Failed to load keys: {str(e)}\")\n\n    def get_private_key(self):\n        \"\"\"\u83b7\u53d6 RSA \u79c1\u94a5\"\"\"\n        if 'private_key' not in self.keys:\n            raise Exception(\"Private key not found\")\n\n        private_key_data = self.keys['private_key']\n        return RSA.import_key(private_key_data)\n\n    def rotate_keys(self):\n        \"\"\"\u8f6e\u6362\u5bc6\u94a5\"\"\"\n        # \u751f\u6210\u65b0\u7684\u5bc6\u94a5\u5bf9\n        key = RSA.generate(2048)\n        private_key = key.export_key()\n        public_key = key.publickey().export_key()\n\n        # \u66f4\u65b0\u5bc6\u94a5\u5b58\u50a8\n        self.keys['private_key'] = private_key.decode('utf-8')\n        self.keys['public_key'] = public_key.decode('utf-8')\n\n        # \u4fdd\u5b58\u5bc6\u94a5\n        self._save_keys()\n\n        return {\n            'private_key': private_key,\n            'public_key': public_key\n        }\n\n    def _save_keys(self):\n        \"\"\"\u4fdd\u5b58\u5bc6\u94a5\"\"\"\n        # \u4f7f\u7528\u4e3b\u5bc6\u94a5\u52a0\u5bc6\u5bc6\u94a5\u5b58\u50a8\n        master_key = os.environ.get('MASTER_KEY')\n        if not master_key:\n            raise Exception(\"Missing MASTER_KEY environment variable\")\n\n        keys_json = json.dumps(self.keys)\n        encrypted_keys = self._encrypt_with_master_key(keys_json, master_key)\n\n        with open(self.key_store_path, 'wb') as f:\n            f.write(encrypted_keys)\n\n    def _encrypt_with_master_key(self, data, master_key):\n        \"\"\"\u4f7f\u7528\u4e3b\u5bc6\u94a5\u52a0\u5bc6\u6570\u636e\"\"\"\n        # \u52a0\u5bc6\u5b9e\u73b0\n        pass\n\n    def _decrypt_with_master_key(self, encrypted_data, master_key):\n        \"\"\"\u4f7f\u7528\u4e3b\u5bc6\u94a5\u89e3\u5bc6\u6570\u636e\"\"\"\n        # \u89e3\u5bc6\u5b9e\u73b0\n        pass\n</code></pre> <p>\u8fd9\u79cd\u5bc6\u94a5\u7ba1\u7406\u7684\u8bbe\u8ba1\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u5b89\u5168\u6027\uff0c\u652f\u6301\u5bc6\u94a5\u8f6e\u6362\u548c\u5b89\u5168\u5b58\u50a8\u3002</p>"},{"location":"code-quality/improvement-suggestions/#2_3","title":"2. \u6dfb\u52a0\u8bbf\u95ee\u63a7\u5236","text":"<p>\u5f53\u524d\u7cfb\u7edf\u7f3a\u4e4f\u7ec6\u7c92\u5ea6\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u5efa\u8bae\u6dfb\u52a0\u8bbf\u95ee\u63a7\u5236\u673a\u5236\uff1a</p> <pre><code># \u8bbf\u95ee\u63a7\u5236\u88c5\u9970\u5668\ndef require_auth(func):\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        # \u83b7\u53d6\u8ba4\u8bc1\u4fe1\u606f\n        auth_header = request.headers.get('Authorization')\n        if not auth_header:\n            return jsonify({\"error\": \"Missing Authorization header\"}), 401\n\n        try:\n            # \u9a8c\u8bc1\u8ba4\u8bc1\u4fe1\u606f\n            token = auth_header.split(' ')[1]\n            payload = jwt.decode(token, JWT_SECRET_KEY, algorithms=['HS256'])\n\n            # \u68c0\u67e5\u6743\u9650\n            if 'permissions' not in payload:\n                return jsonify({\"error\": \"Invalid token\"}), 401\n\n            # \u83b7\u53d6\u6240\u9700\u6743\u9650\n            required_permission = getattr(func, '_required_permission', None)\n            if required_permission and required_permission not in payload['permissions']:\n                return jsonify({\"error\": \"Insufficient permissions\"}), 403\n\n            # \u5c06\u7528\u6237\u4fe1\u606f\u6dfb\u52a0\u5230\u8bf7\u6c42\u4e0a\u4e0b\u6587\n            g.user = payload\n\n            return func(*args, **kwargs)\n        except jwt.InvalidTokenError:\n            return jsonify({\"error\": \"Invalid token\"}), 401\n\n    return wrapper\n\n# \u6743\u9650\u88c5\u9970\u5668\ndef require_permission(permission):\n    def decorator(func):\n        func._required_permission = permission\n        return func\n    return decorator\n\n# \u4f7f\u7528\u793a\u4f8b\n@app.route('/api/process_document', methods=['POST'])\n@require_auth\n@require_permission('document:write')\ndef process_document():\n    # \u5904\u7406\u8bf7\u6c42\n    pass\n</code></pre> <p>\u8fd9\u79cd\u8bbf\u95ee\u63a7\u5236\u7684\u8bbe\u8ba1\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u5b89\u5168\u6027\uff0c\u652f\u6301\u7528\u6237\u8ba4\u8bc1\u548c\u6388\u6743\u3002</p>"},{"location":"code-quality/improvement-suggestions/#_6","title":"\u6027\u80fd\u4f18\u5316","text":""},{"location":"code-quality/improvement-suggestions/#1_4","title":"1. \u4f18\u5316\u6570\u636e\u5e93\u64cd\u4f5c","text":"<p>\u5f53\u524d\u7cfb\u7edf\u7684\u6570\u636e\u5e93\u64cd\u4f5c\u76f8\u5bf9\u7b80\u5355\uff0c\u5efa\u8bae\u4f18\u5316\u6570\u636e\u5e93\u64cd\u4f5c\uff1a</p> <pre><code># \u6570\u636e\u5e93\u8fde\u63a5\u6c60\nclass DBConnectionPool:\n    def __init__(self, db_path, max_connections=10):\n        self.db_path = db_path\n        self.max_connections = max_connections\n        self.connections = Queue(maxsize=max_connections)\n        self.active_connections = 0\n\n        # \u521d\u59cb\u5316\u8fde\u63a5\u6c60\n        for _ in range(max_connections):\n            self.connections.put(self._create_connection())\n\n    def _create_connection(self):\n        \"\"\"\u521b\u5efa\u6570\u636e\u5e93\u8fde\u63a5\"\"\"\n        conn = sqlite3.connect(self.db_path)\n        conn.row_factory = sqlite3.Row\n        return conn\n\n    def get_connection(self):\n        \"\"\"\u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5\"\"\"\n        if not self.connections.empty():\n            return self.connections.get()\n\n        if self.active_connections &lt; self.max_connections:\n            self.active_connections += 1\n            return self._create_connection()\n\n        # \u7b49\u5f85\u53ef\u7528\u8fde\u63a5\n        return self.connections.get(block=True)\n\n    def release_connection(self, conn):\n        \"\"\"\u91ca\u653e\u6570\u636e\u5e93\u8fde\u63a5\"\"\"\n        self.connections.put(conn)\n\n    def close_all(self):\n        \"\"\"\u5173\u95ed\u6240\u6709\u8fde\u63a5\"\"\"\n        while not self.connections.empty():\n            conn = self.connections.get()\n            conn.close()\n\n# \u6570\u636e\u5e93\u64cd\u4f5c\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\nclass DBConnection:\n    def __init__(self, pool):\n        self.pool = pool\n        self.conn = None\n\n    def __enter__(self):\n        self.conn = self.pool.get_connection()\n        return self.conn\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        self.pool.release_connection(self.conn)\n\n# \u4f7f\u7528\u793a\u4f8b\ndb_pool = DBConnectionPool(DATABASE_PATH)\n\ndef get_task_result(task_id):\n    with DBConnection(db_pool) as conn:\n        cursor = conn.cursor()\n        cursor.execute(\n            \"SELECT status, result FROM tasks WHERE id = ?\",\n            (task_id,)\n        )\n        return cursor.fetchone()\n</code></pre> <p>\u8fd9\u79cd\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u7684\u8bbe\u8ba1\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u6027\u80fd\uff0c\u51cf\u5c11\u4e86\u6570\u636e\u5e93\u8fde\u63a5\u7684\u5f00\u9500\u3002</p>"},{"location":"code-quality/improvement-suggestions/#2_4","title":"2. \u4f18\u5316\u7f13\u5b58\u7b56\u7565","text":"<p>\u5f53\u524d\u7cfb\u7edf\u7684\u7f13\u5b58\u7b56\u7565\u76f8\u5bf9\u7b80\u5355\uff0c\u5efa\u8bae\u4f18\u5316\u7f13\u5b58\u7b56\u7565\uff1a</p> <pre><code># \u7f13\u5b58\u7ba1\u7406\u5668\nclass CacheManager:\n    def __init__(self, db_connection, max_size=1000, default_ttl=86400):\n        self.db_connection = db_connection\n        self.max_size = max_size\n        self.default_ttl = default_ttl\n        self.init_cache_table()\n\n    def init_cache_table(self):\n        \"\"\"\u521d\u59cb\u5316\u7f13\u5b58\u8868\"\"\"\n        cursor = self.db_connection.cursor()\n        cursor.execute('''\n        CREATE TABLE IF NOT EXISTS cache (\n            key TEXT PRIMARY KEY,\n            result TEXT,\n            access_count INTEGER DEFAULT 0,\n            last_access INTEGER,\n            expires_at INTEGER\n        )\n        ''')\n        self.db_connection.commit()\n\n    def get(self, key):\n        \"\"\"\u83b7\u53d6\u7f13\u5b58\"\"\"\n        cursor = self.db_connection.cursor()\n        cursor.execute(\n            \"SELECT result, expires_at FROM cache WHERE key = ?\",\n            (key,)\n        )\n\n        result = cursor.fetchone()\n        if not result:\n            return None\n\n        # \u68c0\u67e5\u662f\u5426\u8fc7\u671f\n        if result['expires_at'] &lt; int(time.time()):\n            self.delete(key)\n            return None\n\n        # \u66f4\u65b0\u8bbf\u95ee\u7edf\u8ba1\n        cursor.execute(\n            \"UPDATE cache SET access_count = access_count + 1, last_access = ? WHERE key = ?\",\n            (int(time.time()), key)\n        )\n        self.db_connection.commit()\n\n        return json.loads(result['result'])\n\n    def set(self, key, value, ttl=None):\n        \"\"\"\u8bbe\u7f6e\u7f13\u5b58\"\"\"\n        if ttl is None:\n            ttl = self.default_ttl\n\n        # \u68c0\u67e5\u7f13\u5b58\u5927\u5c0f\n        self._check_cache_size()\n\n        cursor = self.db_connection.cursor()\n        expires_at = int(time.time()) + ttl\n\n        cursor.execute(\n            \"INSERT OR REPLACE INTO cache (key, result, access_count, last_access, expires_at) VALUES (?, ?, ?, ?, ?)\",\n            (key, json.dumps(value), 0, int(time.time()), expires_at)\n        )\n\n        self.db_connection.commit()\n\n    def delete(self, key):\n        \"\"\"\u5220\u9664\u7f13\u5b58\"\"\"\n        cursor = self.db_connection.cursor()\n        cursor.execute(\"DELETE FROM cache WHERE key = ?\", (key,))\n        self.db_connection.commit()\n\n    def clear_expired(self):\n        \"\"\"\u6e05\u7406\u8fc7\u671f\u7f13\u5b58\"\"\"\n        cursor = self.db_connection.cursor()\n        cursor.execute(\n            \"DELETE FROM cache WHERE expires_at &lt; ?\",\n            (int(time.time()),)\n        )\n        self.db_connection.commit()\n\n    def _check_cache_size(self):\n        \"\"\"\u68c0\u67e5\u7f13\u5b58\u5927\u5c0f\uff0c\u5982\u679c\u8d85\u8fc7\u6700\u5927\u5927\u5c0f\uff0c\u5220\u9664\u6700\u5c11\u8bbf\u95ee\u7684\u7f13\u5b58\"\"\"\n        cursor = self.db_connection.cursor()\n        cursor.execute(\"SELECT COUNT(*) as count FROM cache\")\n        result = cursor.fetchone()\n\n        if result['count'] &gt;= self.max_size:\n            # \u5220\u9664\u6700\u5c11\u8bbf\u95ee\u7684\u7f13\u5b58\n            cursor.execute(\n                \"DELETE FROM cache WHERE key IN (SELECT key FROM cache ORDER BY access_count, last_access LIMIT ?)\",\n                (result['count'] - self.max_size + 10,)  # \u591a\u5220\u9664\u4e00\u4e9b\uff0c\u907f\u514d\u9891\u7e41\u68c0\u67e5\n            )\n            self.db_connection.commit()\n\n# \u4f7f\u7528\u793a\u4f8b\ncache_manager = CacheManager(db_connection)\nresult = cache_manager.get(cache_key)\n\nif not result:\n    # \u5904\u7406\u8bf7\u6c42\n    result = process_request()\n    cache_manager.set(cache_key, result)\n\nreturn result\n</code></pre> <p>\u8fd9\u79cd\u7f13\u5b58\u7ba1\u7406\u7684\u8bbe\u8ba1\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u6027\u80fd\uff0c\u652f\u6301\u57fa\u4e8e\u8bbf\u95ee\u9891\u7387\u7684\u7f13\u5b58\u7b56\u7565\u548c\u81ea\u52a8\u6e05\u7406\u8fc7\u671f\u7f13\u5b58\u3002</p>"},{"location":"code-quality/improvement-suggestions/#_7","title":"\u603b\u7ed3","text":"<p>\u901a\u8fc7\u5b9e\u65bd\u4ee5\u4e0a\u6539\u8fdb\u5efa\u8bae\uff0c\u53ef\u4ee5\u663e\u8457\u63d0\u9ad8 DocuSnap-Backend \u4ee3\u7801\u5e93\u7684\u8d28\u91cf\u3001\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002\u8fd9\u4e9b\u6539\u8fdb\u5305\u62ec\uff1a</p> <ol> <li>\u4ee3\u7801\u7ed3\u6784\u6539\u8fdb\uff1a</li> <li>\u6a21\u5757\u5316\u91cd\u6784</li> <li> <p>\u5f15\u5165\u5c42\u6b21\u7ed3\u6784</p> </li> <li> <p>\u4ee3\u7801\u8d28\u91cf\u6539\u8fdb\uff1a</p> </li> <li>\u5f15\u5165\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b</li> <li>\u5f15\u5165\u4f9d\u8d56\u6ce8\u5165</li> <li> <p>\u6dfb\u52a0\u5355\u5143\u6d4b\u8bd5</p> </li> <li> <p>\u53ef\u6269\u5c55\u6027\u6539\u8fdb\uff1a</p> </li> <li>\u5f15\u5165\u62bd\u8c61\u63a5\u53e3</li> <li> <p>\u5f15\u5165\u63d2\u4ef6\u673a\u5236</p> </li> <li> <p>\u5b89\u5168\u6027\u6539\u8fdb\uff1a</p> </li> <li>\u6539\u8fdb\u5bc6\u94a5\u7ba1\u7406</li> <li> <p>\u6dfb\u52a0\u8bbf\u95ee\u63a7\u5236</p> </li> <li> <p>\u6027\u80fd\u4f18\u5316\uff1a</p> </li> <li>\u4f18\u5316\u6570\u636e\u5e93\u64cd\u4f5c</li> <li>\u4f18\u5316\u7f13\u5b58\u7b56\u7565</li> </ol> <p>\u8fd9\u4e9b\u6539\u8fdb\u53ef\u4ee5\u5206\u9636\u6bb5\u5b9e\u65bd\uff0c\u5148\u89e3\u51b3\u6700\u7d27\u6025\u7684\u95ee\u9898\uff0c\u7136\u540e\u9010\u6b65\u5b9e\u65bd\u5176\u4ed6\u6539\u8fdb\u3002\u6bcf\u6b21\u6539\u8fdb\u540e\uff0c\u90fd\u5e94\u8be5\u8fdb\u884c\u5145\u5206\u7684\u6d4b\u8bd5\uff0c\u786e\u4fdd\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u548c\u53ef\u9760\u6027\u3002</p>"},{"location":"conclusions/optimization/","title":"\u4f18\u5316\u65b9\u5411","text":"<p>\u672c\u9875\u9762\u63d0\u4f9b DocuSnap-Backend \u7cfb\u7edf\u7684\u672a\u6765\u4f18\u5316\u65b9\u5411\uff0c\u5305\u62ec\u67b6\u6784\u4f18\u5316\u3001\u6027\u80fd\u63d0\u5347\u3001\u529f\u80fd\u6269\u5c55\u548c\u5b89\u5168\u589e\u5f3a\u7b49\u65b9\u9762\u7684\u5efa\u8bae\u3002</p>"},{"location":"conclusions/optimization/#_2","title":"\u67b6\u6784\u4f18\u5316","text":""},{"location":"conclusions/optimization/#1","title":"1. \u6a21\u5757\u5316\u91cd\u6784","text":"<p>\u5f53\u524d DocuSnap-Backend \u7cfb\u7edf\u7684\u4ee3\u7801\u4e3b\u8981\u96c6\u4e2d\u5728\u5355\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5efa\u8bae\u8fdb\u884c\u6a21\u5757\u5316\u91cd\u6784\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u5c06\u4ee3\u7801\u62c6\u5206\u4e3a\u591a\u4e2a\u6a21\u5757\u6587\u4ef6\uff0c\u5982 <code>ocr.py</code>\u3001<code>llm.py</code>\u3001<code>security.py</code> \u7b49 - \u5f15\u5165\u5305\u7ed3\u6784\uff0c\u7ec4\u7ec7\u76f8\u5173\u529f\u80fd - \u5b9e\u73b0\u6e05\u6670\u7684\u6a21\u5757\u63a5\u53e3\u548c\u4f9d\u8d56\u5173\u7cfb</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u63d0\u9ad8\u4ee3\u7801\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027 - \u4fbf\u4e8e\u56e2\u961f\u534f\u4f5c\u548c\u529f\u80fd\u6269\u5c55 - \u652f\u6301\u5355\u5143\u6d4b\u8bd5\u548c\u6a21\u5757\u7ea7\u4f18\u5316</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u4f18\u5148\u7ea7\uff1a\u9ad8</p>"},{"location":"conclusions/optimization/#2","title":"2. \u5f15\u5165\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1","text":"<p>\u5f53\u524d\u7cfb\u7edf\u4e3b\u8981\u4f7f\u7528\u51fd\u6570\u5f0f\u7f16\u7a0b\u98ce\u683c\uff0c\u5efa\u8bae\u5f15\u5165\u66f4\u591a\u7684\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u5b9a\u4e49\u6838\u5fc3\u7ec4\u4ef6\u7684\u7c7b\u7ed3\u6784\uff0c\u5982 <code>TaskProcessor</code>\u3001<code>OCRService</code>\u3001<code>LLMService</code> \u7b49 - \u4f7f\u7528\u7ee7\u627f\u548c\u591a\u6001\u5b9e\u73b0\u7075\u6d3b\u7684\u529f\u80fd\u6269\u5c55 - \u5b9e\u73b0\u4f9d\u8d56\u6ce8\u5165\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u6d4b\u8bd5\u6027</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u63d0\u9ad8\u4ee3\u7801\u7684\u7ec4\u7ec7\u6027\u548c\u53ef\u7ef4\u62a4\u6027 - \u652f\u6301\u66f4\u7075\u6d3b\u7684\u529f\u80fd\u6269\u5c55\u548c\u66ff\u6362 - \u4fbf\u4e8e\u5b9e\u73b0\u8bbe\u8ba1\u6a21\u5f0f\u548c\u6700\u4f73\u5b9e\u8df5</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u4f18\u5148\u7ea7\uff1a\u4e2d</p>"},{"location":"conclusions/optimization/#3","title":"3. \u6570\u636e\u5e93\u5347\u7ea7","text":"<p>\u5f53\u524d\u7cfb\u7edf\u4f7f\u7528 SQLite \u4f5c\u4e3a\u6570\u636e\u5e93\uff0c\u5bf9\u4e8e\u5927\u89c4\u6a21\u90e8\u7f72\u53ef\u80fd\u5b58\u5728\u9650\u5236\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u652f\u6301\u4f7f\u7528 PostgreSQL \u7b49\u4f01\u4e1a\u7ea7\u6570\u636e\u5e93 - \u5b9e\u73b0\u6570\u636e\u5e93\u62bd\u8c61\u5c42\uff0c\u652f\u6301\u591a\u79cd\u6570\u636e\u5e93\u540e\u7aef - \u4f18\u5316\u6570\u636e\u5e93\u6a21\u5f0f\u548c\u67e5\u8be2\u6027\u80fd</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u63d0\u9ad8\u7cfb\u7edf\u7684\u53ef\u6269\u5c55\u6027\u548c\u5e76\u53d1\u5904\u7406\u80fd\u529b - \u652f\u6301\u66f4\u590d\u6742\u7684\u6570\u636e\u67e5\u8be2\u548c\u7ba1\u7406 - \u63d0\u9ad8\u6570\u636e\u7684\u53ef\u9760\u6027\u548c\u5b89\u5168\u6027</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u9ad8</p> <p>\u4f18\u5148\u7ea7\uff1a\u4e2d\uff08\u53d6\u51b3\u4e8e\u7cfb\u7edf\u89c4\u6a21\u548c\u8d1f\u8f7d\uff09</p>"},{"location":"conclusions/optimization/#4","title":"4. \u5fae\u670d\u52a1\u67b6\u6784\u6f14\u8fdb","text":"<p>\u5bf9\u4e8e\u5927\u89c4\u6a21\u90e8\u7f72\u548c\u56e2\u961f\u534f\u4f5c\uff0c\u53ef\u4ee5\u8003\u8651\u5411\u5fae\u670d\u52a1\u67b6\u6784\u6f14\u8fdb\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u5c06\u6838\u5fc3\u529f\u80fd\u62c6\u5206\u4e3a\u72ec\u7acb\u7684\u5fae\u670d\u52a1\uff0c\u5982 OCR \u670d\u52a1\u3001LLM \u670d\u52a1\u3001\u4efb\u52a1\u7ba1\u7406\u670d\u52a1\u7b49 - \u5b9e\u73b0\u670d\u52a1\u6ce8\u518c\u548c\u53d1\u73b0\u673a\u5236 - \u4f7f\u7528\u6d88\u606f\u961f\u5217\uff08\u5982 RabbitMQ\u3001Kafka\uff09\u5b9e\u73b0\u670d\u52a1\u95f4\u901a\u4fe1</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u63d0\u9ad8\u7cfb\u7edf\u7684\u53ef\u6269\u5c55\u6027\u548c\u5f39\u6027 - \u652f\u6301\u72ec\u7acb\u5f00\u53d1\u548c\u90e8\u7f72 - \u63d0\u9ad8\u7cfb\u7edf\u7684\u5bb9\u9519\u6027\u548c\u53ef\u7528\u6027</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u9ad8</p> <p>\u4f18\u5148\u7ea7\uff1a\u4f4e\uff08\u4ec5\u5728\u7cfb\u7edf\u89c4\u6a21\u589e\u957f\u5230\u4e00\u5b9a\u7a0b\u5ea6\u65f6\u8003\u8651\uff09</p>"},{"location":"conclusions/optimization/#_3","title":"\u6027\u80fd\u4f18\u5316","text":""},{"location":"conclusions/optimization/#1_1","title":"1. \u5e76\u53d1\u5904\u7406\u4f18\u5316","text":"<p>\u5f53\u524d\u7cfb\u7edf\u4f7f\u7528\u7ebf\u7a0b\u6c60\u8fdb\u884c\u5e76\u53d1\u5904\u7406\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u4f18\u5316\u7ebf\u7a0b\u6c60\u914d\u7f6e\uff0c\u6839\u636e\u786c\u4ef6\u8d44\u6e90\u548c\u8d1f\u8f7d\u7279\u6027\u8c03\u6574 - \u5b9e\u73b0\u66f4\u7cbe\u7ec6\u7684\u4efb\u52a1\u5206\u5272\u548c\u5e76\u884c\u5904\u7406 - \u8003\u8651\u4f7f\u7528\u5f02\u6b65 IO\uff08\u5982 asyncio\uff09\u66ff\u4ee3\u6216\u8865\u5145\u7ebf\u7a0b\u6c60</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u63d0\u9ad8\u7cfb\u7edf\u7684\u5e76\u53d1\u5904\u7406\u80fd\u529b - \u51cf\u5c11\u8d44\u6e90\u6d88\u8017\u548c\u7ade\u4e89 - \u63d0\u9ad8\u54cd\u5e94\u901f\u5ea6\u548c\u541e\u5410\u91cf</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u4f18\u5148\u7ea7\uff1a\u4e2d</p>"},{"location":"conclusions/optimization/#2_1","title":"2. \u7f13\u5b58\u7b56\u7565\u4f18\u5316","text":"<p>\u5f53\u524d\u7cfb\u7edf\u5b9e\u73b0\u4e86\u57fa\u672c\u7684\u7f13\u5b58\u673a\u5236\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u5b9e\u73b0\u591a\u7ea7\u7f13\u5b58\uff0c\u5982\u5185\u5b58\u7f13\u5b58\uff08Redis\uff09+ \u6570\u636e\u5e93\u7f13\u5b58 - \u5b9e\u73b0\u66f4\u667a\u80fd\u7684\u7f13\u5b58\u7b56\u7565\uff0c\u5982 LRU\u3001LFU \u7b49 - \u6dfb\u52a0\u7f13\u5b58\u9884\u70ed\u548c\u7f13\u5b58\u5931\u6548\u673a\u5236</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u63d0\u9ad8\u7cfb\u7edf\u54cd\u5e94\u901f\u5ea6 - \u51cf\u5c11\u91cd\u590d\u8ba1\u7b97\u548c\u5916\u90e8\u670d\u52a1\u8c03\u7528 - \u63d0\u9ad8\u7cfb\u7edf\u7684\u53ef\u6269\u5c55\u6027</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u4f18\u5148\u7ea7\uff1a\u4e2d</p>"},{"location":"conclusions/optimization/#3-ocr-llm","title":"3. OCR \u548c LLM \u670d\u52a1\u4f18\u5316","text":"<p>\u5f53\u524d\u7cfb\u7edf\u4f7f\u7528\u5916\u90e8 OCR \u548c LLM \u670d\u52a1\uff0c\u53ef\u4ee5\u4f18\u5316\u8c03\u7528\u65b9\u5f0f\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u5b9e\u73b0\u6279\u91cf\u5904\u7406\u548c\u8bf7\u6c42\u5408\u5e76 - \u4f18\u5316\u6a21\u578b\u53c2\u6570\u548c\u8c03\u7528\u7b56\u7565 - \u8003\u8651\u672c\u5730\u90e8\u7f72\u8f7b\u91cf\u7ea7\u6a21\u578b\uff0c\u51cf\u5c11\u5916\u90e8\u4f9d\u8d56</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u51cf\u5c11 API \u8c03\u7528\u6b21\u6570\u548c\u6210\u672c - \u63d0\u9ad8\u5904\u7406\u901f\u5ea6\u548c\u6548\u7387 - \u964d\u4f4e\u5916\u90e8\u670d\u52a1\u4f9d\u8d56\u98ce\u9669</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u4f18\u5148\u7ea7\uff1a\u4e2d</p>"},{"location":"conclusions/optimization/#4-api","title":"4. \u5f02\u6b65 API \u8bbe\u8ba1","text":"<p>\u5f53\u524d\u7cfb\u7edf\u5df2\u5b9e\u73b0\u57fa\u672c\u7684\u5f02\u6b65\u5904\u7406\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316 API \u8bbe\u8ba1\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u5b9e\u73b0 WebSocket \u6216 Server-Sent Events\uff0c\u652f\u6301\u5b9e\u65f6\u72b6\u6001\u66f4\u65b0 - \u4f18\u5316\u5f02\u6b65\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u548c\u8c03\u5ea6\u7b56\u7565 - \u5b9e\u73b0\u66f4\u53cb\u597d\u7684\u8fdb\u5ea6\u62a5\u544a\u548c\u72b6\u6001\u901a\u77e5</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u63d0\u9ad8\u7528\u6237\u4f53\u9a8c\u548c\u4ea4\u4e92\u6027 - \u51cf\u5c11\u8f6e\u8be2\u8bf7\u6c42\u548c\u8d44\u6e90\u6d88\u8017 - \u652f\u6301\u66f4\u590d\u6742\u7684\u4efb\u52a1\u5904\u7406\u6d41\u7a0b</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u4f18\u5148\u7ea7\uff1a\u4f4e</p>"},{"location":"conclusions/optimization/#_4","title":"\u529f\u80fd\u6269\u5c55","text":""},{"location":"conclusions/optimization/#1_2","title":"1. \u6587\u6863\u7c7b\u578b\u6269\u5c55","text":"<p>\u5f53\u524d\u7cfb\u7edf\u652f\u6301\u57fa\u672c\u7684\u6587\u6863\u548c\u8868\u5355\u5904\u7406\uff0c\u53ef\u4ee5\u6269\u5c55\u652f\u6301\u66f4\u591a\u6587\u6863\u7c7b\u578b\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u6dfb\u52a0\u5bf9\u7279\u5b9a\u9886\u57df\u6587\u6863\u7684\u652f\u6301\uff0c\u5982\u53d1\u7968\u3001\u5408\u540c\u3001\u7b80\u5386\u7b49 - \u5b9e\u73b0\u6587\u6863\u7c7b\u578b\u81ea\u52a8\u8bc6\u522b - \u4e3a\u4e0d\u540c\u6587\u6863\u7c7b\u578b\u63d0\u4f9b\u4e13\u95e8\u7684\u5904\u7406\u6d41\u7a0b\u548c\u63d0\u793a\u6a21\u677f</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u6269\u5927\u7cfb\u7edf\u7684\u5e94\u7528\u8303\u56f4 - \u63d0\u9ad8\u7279\u5b9a\u573a\u666f\u4e0b\u7684\u5904\u7406\u51c6\u786e\u6027 - \u589e\u5f3a\u7cfb\u7edf\u7684\u5e02\u573a\u7ade\u4e89\u529b</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u4f18\u5148\u7ea7\uff1a\u9ad8</p>"},{"location":"conclusions/optimization/#2_2","title":"2. \u591a\u8bed\u8a00\u652f\u6301","text":"<p>\u5f53\u524d\u7cfb\u7edf\u4e3b\u8981\u9488\u5bf9\u4e2d\u6587\u6587\u6863\u4f18\u5316\uff0c\u53ef\u4ee5\u6269\u5c55\u591a\u8bed\u8a00\u652f\u6301\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u6dfb\u52a0\u5bf9\u82f1\u8bed\u3001\u65e5\u8bed\u3001\u97e9\u8bed\u7b49\u5176\u4ed6\u8bed\u8a00\u7684\u652f\u6301 - \u5b9e\u73b0\u8bed\u8a00\u81ea\u52a8\u68c0\u6d4b\u548c\u5904\u7406\u6d41\u7a0b\u5207\u6362 - \u4f18\u5316\u4e0d\u540c\u8bed\u8a00\u7684 OCR \u548c LLM \u63d0\u793a</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u6269\u5927\u7528\u6237\u7fa4\u4f53\u548c\u5e02\u573a\u8303\u56f4 - \u63d0\u9ad8\u7cfb\u7edf\u7684\u56fd\u9645\u5316\u6c34\u5e73 - \u589e\u5f3a\u7cfb\u7edf\u7684\u9002\u5e94\u6027\u548c\u7ade\u4e89\u529b</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u4f18\u5148\u7ea7\uff1a\u4e2d</p>"},{"location":"conclusions/optimization/#3_1","title":"3. \u9ad8\u7ea7\u5206\u6790\u529f\u80fd","text":"<p>\u53ef\u4ee5\u6dfb\u52a0\u66f4\u9ad8\u7ea7\u7684\u6587\u6863\u5206\u6790\u548c\u5904\u7406\u529f\u80fd\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u5b9e\u73b0\u6587\u6863\u6bd4\u8f83\u548c\u7248\u672c\u63a7\u5236 - \u6dfb\u52a0\u6587\u6863\u6458\u8981\u548c\u5173\u952e\u4fe1\u606f\u63d0\u53d6 - \u5b9e\u73b0\u6587\u6863\u5206\u7c7b\u548c\u667a\u80fd\u6807\u7b7e</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u63d0\u9ad8\u7cfb\u7edf\u7684\u667a\u80fd\u5316\u6c34\u5e73 - \u589e\u52a0\u4ea7\u54c1\u7684\u5dee\u5f02\u5316\u4f18\u52bf - \u6ee1\u8db3\u9ad8\u7ea7\u7528\u6237\u7684\u9700\u6c42</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u9ad8</p> <p>\u4f18\u5148\u7ea7\uff1a\u4e2d</p>"},{"location":"conclusions/optimization/#4-api_1","title":"4. API \u751f\u6001\u7cfb\u7edf","text":"<p>\u5efa\u7acb\u5b8c\u6574\u7684 API \u751f\u6001\u7cfb\u7edf\uff0c\u4fbf\u4e8e\u96c6\u6210\u548c\u6269\u5c55\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u5b9e\u73b0\u5b8c\u6574\u7684 RESTful API \u8bbe\u8ba1 - \u63d0\u4f9b SDK \u548c\u5ba2\u6237\u7aef\u5e93\uff08\u5982 Python\u3001JavaScript\u3001Java \u7b49\uff09 - \u5efa\u7acb\u5f00\u53d1\u8005\u95e8\u6237\u548c\u6587\u6863\u4e2d\u5fc3</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u63d0\u9ad8\u7cfb\u7edf\u7684\u53ef\u96c6\u6210\u6027\u548c\u6613\u7528\u6027 - \u5438\u5f15\u7b2c\u4e09\u65b9\u5f00\u53d1\u8005\u548c\u5408\u4f5c\u4f19\u4f34 - \u6269\u5927\u7cfb\u7edf\u7684\u5e94\u7528\u573a\u666f\u548c\u5e02\u573a</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u9ad8</p> <p>\u4f18\u5148\u7ea7\uff1a\u4f4e</p>"},{"location":"conclusions/optimization/#_5","title":"\u5b89\u5168\u589e\u5f3a","text":""},{"location":"conclusions/optimization/#1_3","title":"1. \u8bbf\u95ee\u63a7\u5236\u4e0e\u8ba4\u8bc1","text":"<p>\u5f53\u524d\u7cfb\u7edf\u7f3a\u4e4f\u5b8c\u5584\u7684\u8bbf\u95ee\u63a7\u5236\u673a\u5236\uff0c\u5efa\u8bae\u589e\u5f3a\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u5b9e\u73b0\u7528\u6237\u8ba4\u8bc1\u548c\u6388\u6743\u7cfb\u7edf - \u652f\u6301 OAuth\u3001JWT \u7b49\u6807\u51c6\u8ba4\u8bc1\u534f\u8bae - \u5b9e\u73b0\u7ec6\u7c92\u5ea6\u7684\u6743\u9650\u63a7\u5236\u548c\u8bbf\u95ee\u7b56\u7565</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u63d0\u9ad8\u7cfb\u7edf\u7684\u5b89\u5168\u6027\u548c\u53ef\u63a7\u6027 - \u652f\u6301\u591a\u7528\u6237\u548c\u591a\u79df\u6237\u573a\u666f - \u6ee1\u8db3\u4f01\u4e1a\u7ea7\u5b89\u5168\u8981\u6c42</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u4f18\u5148\u7ea7\uff1a\u9ad8</p>"},{"location":"conclusions/optimization/#2_3","title":"2. \u6570\u636e\u5b89\u5168\u589e\u5f3a","text":"<p>\u53ef\u4ee5\u8fdb\u4e00\u6b65\u589e\u5f3a\u6570\u636e\u5b89\u5168\u4fdd\u62a4\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u5b9e\u73b0\u6570\u636e\u52a0\u5bc6\u5b58\u50a8 - \u6dfb\u52a0\u654f\u611f\u4fe1\u606f\u68c0\u6d4b\u548c\u8131\u654f\u5904\u7406 - \u5b9e\u73b0\u6570\u636e\u8bbf\u95ee\u5ba1\u8ba1\u548c\u65e5\u5fd7\u8bb0\u5f55</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u63d0\u9ad8\u6570\u636e\u4fdd\u62a4\u6c34\u5e73 - \u6ee1\u8db3\u5408\u89c4\u548c\u9690\u79c1\u4fdd\u62a4\u8981\u6c42 - \u589e\u5f3a\u7528\u6237\u4fe1\u4efb\u548c\u7cfb\u7edf\u53ef\u9760\u6027</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u4f18\u5148\u7ea7\uff1a\u4e2d</p>"},{"location":"conclusions/optimization/#3_2","title":"3. \u5b89\u5168\u76d1\u63a7\u4e0e\u9632\u62a4","text":"<p>\u589e\u52a0\u4e3b\u52a8\u5b89\u5168\u76d1\u63a7\u548c\u9632\u62a4\u673a\u5236\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u5b9e\u73b0\u5f02\u5e38\u8bbf\u95ee\u68c0\u6d4b\u548c\u544a\u8b66 - \u6dfb\u52a0 API \u9650\u6d41\u548c\u9632\u6ee5\u7528\u673a\u5236 - \u5b9e\u73b0\u5b89\u5168\u6f0f\u6d1e\u626b\u63cf\u548c\u4fee\u590d\u6d41\u7a0b</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u63d0\u9ad8\u7cfb\u7edf\u7684\u5b89\u5168\u6001\u52bf\u611f\u77e5 - \u9632\u6b62\u6076\u610f\u653b\u51fb\u548c\u6ee5\u7528 - \u4fdd\u969c\u7cfb\u7edf\u7684\u7a33\u5b9a\u8fd0\u884c</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u4f18\u5148\u7ea7\uff1a\u4e2d</p>"},{"location":"conclusions/optimization/#4_1","title":"4. \u5408\u89c4\u6027\u652f\u6301","text":"<p>\u589e\u52a0\u5bf9\u5404\u79cd\u5b89\u5168\u5408\u89c4\u6807\u51c6\u7684\u652f\u6301\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u5b9e\u73b0 GDPR\u3001CCPA \u7b49\u9690\u79c1\u6cd5\u89c4\u7684\u5408\u89c4\u529f\u80fd - \u6dfb\u52a0\u6570\u636e\u4fdd\u7559\u548c\u5220\u9664\u7b56\u7565 - \u63d0\u4f9b\u5408\u89c4\u6027\u62a5\u544a\u548c\u8bc1\u660e\u6750\u6599</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u6ee1\u8db3\u4e0d\u540c\u5730\u533a\u548c\u884c\u4e1a\u7684\u5408\u89c4\u8981\u6c42 - \u964d\u4f4e\u5408\u89c4\u98ce\u9669\u548c\u6210\u672c - \u589e\u5f3a\u7cfb\u7edf\u5728\u4f01\u4e1a\u5e02\u573a\u7684\u7ade\u4e89\u529b</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u9ad8</p> <p>\u4f18\u5148\u7ea7\uff1a\u4f4e</p>"},{"location":"conclusions/optimization/#_6","title":"\u53ef\u7528\u6027\u4e0e\u53ef\u7ef4\u62a4\u6027","text":""},{"location":"conclusions/optimization/#1_4","title":"1. \u76d1\u63a7\u4e0e\u53ef\u89c2\u6d4b\u6027","text":"<p>\u589e\u5f3a\u7cfb\u7edf\u7684\u76d1\u63a7\u548c\u53ef\u89c2\u6d4b\u6027\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u5b9e\u73b0\u5168\u9762\u7684\u65e5\u5fd7\u8bb0\u5f55\u548c\u5206\u6790 - \u6dfb\u52a0\u5173\u952e\u6307\u6807\u76d1\u63a7\u548c\u4eea\u8868\u677f - \u5b9e\u73b0\u5206\u5e03\u5f0f\u8ffd\u8e2a\u548c\u6027\u80fd\u5206\u6790</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u63d0\u9ad8\u7cfb\u7edf\u95ee\u9898\u7684\u53ef\u89c1\u6027\u548c\u53ef\u8bca\u65ad\u6027 - \u52a0\u901f\u6545\u969c\u6392\u9664\u548c\u6027\u80fd\u4f18\u5316 - \u63d0\u9ad8\u7cfb\u7edf\u7684\u53ef\u9760\u6027\u548c\u53ef\u7ef4\u62a4\u6027</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u4f18\u5148\u7ea7\uff1a\u9ad8</p>"},{"location":"conclusions/optimization/#2_4","title":"2. \u81ea\u52a8\u5316\u6d4b\u8bd5","text":"<p>\u589e\u52a0\u81ea\u52a8\u5316\u6d4b\u8bd5\u8986\u76d6\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u5b9e\u73b0\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u548c\u7aef\u5230\u7aef\u6d4b\u8bd5 - \u5efa\u7acb\u6301\u7eed\u96c6\u6210\u548c\u6d4b\u8bd5\u6d41\u7a0b - \u5b9e\u73b0\u6d4b\u8bd5\u8986\u76d6\u7387\u76d1\u63a7\u548c\u62a5\u544a</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u548c\u53ef\u9760\u6027 - \u51cf\u5c11\u56de\u5f52\u95ee\u9898\u548c\u751f\u4ea7\u4e8b\u6545 - \u52a0\u901f\u5f00\u53d1\u548c\u53d1\u5e03\u5468\u671f</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u4f18\u5148\u7ea7\uff1a\u9ad8</p>"},{"location":"conclusions/optimization/#3_3","title":"3. \u6587\u6863\u5b8c\u5584","text":"<p>\u5b8c\u5584\u7cfb\u7edf\u6587\u6863\u548c\u5f00\u53d1\u6307\u5357\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u66f4\u65b0\u548c\u6269\u5c55 API \u6587\u6863 - \u6dfb\u52a0\u67b6\u6784\u8bbe\u8ba1\u548c\u5f00\u53d1\u6307\u5357 - \u63d0\u4f9b\u793a\u4f8b\u4ee3\u7801\u548c\u6700\u4f73\u5b9e\u8df5</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u964d\u4f4e\u65b0\u5f00\u53d1\u8005\u7684\u5b66\u4e60\u66f2\u7ebf - \u63d0\u9ad8\u4ee3\u7801\u548c\u8bbe\u8ba1\u7684\u4e00\u81f4\u6027 - \u4fc3\u8fdb\u77e5\u8bc6\u5171\u4eab\u548c\u56e2\u961f\u534f\u4f5c</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u4f4e</p> <p>\u4f18\u5148\u7ea7\uff1a\u4e2d</p>"},{"location":"conclusions/optimization/#4_2","title":"4. \u5f00\u53d1\u5de5\u5177\u94fe","text":"<p>\u4f18\u5316\u5f00\u53d1\u548c\u90e8\u7f72\u5de5\u5177\u94fe\uff1a</p> <p>\u4f18\u5316\u5efa\u8bae\uff1a - \u5b9e\u73b0\u81ea\u52a8\u5316\u6784\u5efa\u548c\u90e8\u7f72\u6d41\u7a0b - \u6dfb\u52a0\u4ee3\u7801\u8d28\u91cf\u548c\u98ce\u683c\u68c0\u67e5 - \u4f18\u5316\u5f00\u53d1\u73af\u5883\u548c\u8c03\u8bd5\u5de5\u5177</p> <p>\u9884\u671f\u6536\u76ca\uff1a - \u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u548c\u4f53\u9a8c - \u51cf\u5c11\u4eba\u4e3a\u9519\u8bef\u548c\u73af\u5883\u95ee\u9898 - \u52a0\u901f\u529f\u80fd\u4ea4\u4ed8\u548c\u95ee\u9898\u4fee\u590d</p> <p>\u5b9e\u65bd\u590d\u6742\u5ea6\uff1a\u4e2d\u7b49</p> <p>\u4f18\u5148\u7ea7\uff1a\u4e2d</p>"},{"location":"conclusions/optimization/#_7","title":"\u4f18\u5316\u8def\u7ebf\u56fe","text":"<p>\u57fa\u4e8e\u4e0a\u8ff0\u4f18\u5316\u5efa\u8bae\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5206\u9636\u6bb5\u7684\u4f18\u5316\u8def\u7ebf\u56fe\uff1a</p>"},{"location":"conclusions/optimization/#0-3","title":"\u7b2c\u4e00\u9636\u6bb5\uff080-3 \u4e2a\u6708\uff09","text":"<p>\u91cd\u70b9\uff1a\u57fa\u7840\u67b6\u6784\u4f18\u5316\u548c\u5173\u952e\u529f\u80fd\u589e\u5f3a</p> <ol> <li>\u6a21\u5757\u5316\u91cd\u6784\uff1a\u5c06\u4ee3\u7801\u62c6\u5206\u4e3a\u591a\u4e2a\u6a21\u5757\u6587\u4ef6</li> <li>\u81ea\u52a8\u5316\u6d4b\u8bd5\uff1a\u5b9e\u73b0\u57fa\u672c\u7684\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5</li> <li>\u6587\u6863\u7c7b\u578b\u6269\u5c55\uff1a\u6dfb\u52a0\u5bf9\u7279\u5b9a\u9886\u57df\u6587\u6863\u7684\u652f\u6301</li> <li>\u8bbf\u95ee\u63a7\u5236\u4e0e\u8ba4\u8bc1\uff1a\u5b9e\u73b0\u57fa\u672c\u7684\u7528\u6237\u8ba4\u8bc1\u548c\u6388\u6743\u7cfb\u7edf</li> <li>\u76d1\u63a7\u4e0e\u53ef\u89c2\u6d4b\u6027\uff1a\u5b9e\u73b0\u5173\u952e\u6307\u6807\u76d1\u63a7\u548c\u65e5\u5fd7\u8bb0\u5f55</li> </ol>"},{"location":"conclusions/optimization/#3-6","title":"\u7b2c\u4e8c\u9636\u6bb5\uff083-6 \u4e2a\u6708\uff09","text":"<p>\u91cd\u70b9\uff1a\u6027\u80fd\u4f18\u5316\u548c\u5b89\u5168\u589e\u5f3a</p> <ol> <li>\u5e76\u53d1\u5904\u7406\u4f18\u5316\uff1a\u4f18\u5316\u7ebf\u7a0b\u6c60\u914d\u7f6e\u548c\u4efb\u52a1\u5206\u5272</li> <li>\u7f13\u5b58\u7b56\u7565\u4f18\u5316\uff1a\u5b9e\u73b0\u591a\u7ea7\u7f13\u5b58\u548c\u667a\u80fd\u7f13\u5b58\u7b56\u7565</li> <li>OCR \u548c LLM \u670d\u52a1\u4f18\u5316\uff1a\u5b9e\u73b0\u6279\u91cf\u5904\u7406\u548c\u8bf7\u6c42\u5408\u5e76</li> <li>\u6570\u636e\u5b89\u5168\u589e\u5f3a\uff1a\u5b9e\u73b0\u6570\u636e\u52a0\u5bc6\u5b58\u50a8\u548c\u654f\u611f\u4fe1\u606f\u4fdd\u62a4</li> <li>\u5b89\u5168\u76d1\u63a7\u4e0e\u9632\u62a4\uff1a\u5b9e\u73b0\u5f02\u5e38\u8bbf\u95ee\u68c0\u6d4b\u548c API \u9650\u6d41</li> </ol>"},{"location":"conclusions/optimization/#6-12","title":"\u7b2c\u4e09\u9636\u6bb5\uff086-12 \u4e2a\u6708\uff09","text":"<p>\u91cd\u70b9\uff1a\u529f\u80fd\u6269\u5c55\u548c\u67b6\u6784\u6f14\u8fdb</p> <ol> <li>\u5f15\u5165\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\uff1a\u91cd\u6784\u4e3a\u9762\u5411\u5bf9\u8c61\u7684\u67b6\u6784</li> <li>\u591a\u8bed\u8a00\u652f\u6301\uff1a\u6dfb\u52a0\u5bf9\u5176\u4ed6\u8bed\u8a00\u7684\u652f\u6301</li> <li>\u9ad8\u7ea7\u5206\u6790\u529f\u80fd\uff1a\u5b9e\u73b0\u6587\u6863\u6bd4\u8f83\u548c\u667a\u80fd\u5206\u6790</li> <li>\u5f02\u6b65 API \u8bbe\u8ba1\uff1a\u5b9e\u73b0 WebSocket \u548c\u5b9e\u65f6\u72b6\u6001\u66f4\u65b0</li> <li>\u5f00\u53d1\u5de5\u5177\u94fe\uff1a\u4f18\u5316\u5f00\u53d1\u548c\u90e8\u7f72\u6d41\u7a0b</li> </ol>"},{"location":"conclusions/optimization/#12","title":"\u7b2c\u56db\u9636\u6bb5\uff0812+ \u4e2a\u6708\uff09","text":"<p>\u91cd\u70b9\uff1a\u5927\u89c4\u6a21\u6269\u5c55\u548c\u4f01\u4e1a\u7ea7\u529f\u80fd</p> <ol> <li>\u6570\u636e\u5e93\u5347\u7ea7\uff1a\u652f\u6301\u4f01\u4e1a\u7ea7\u6570\u636e\u5e93\u548c\u6570\u636e\u7ba1\u7406</li> <li>\u5fae\u670d\u52a1\u67b6\u6784\u6f14\u8fdb\uff1a\u62c6\u5206\u4e3a\u72ec\u7acb\u7684\u5fae\u670d\u52a1</li> <li>API \u751f\u6001\u7cfb\u7edf\uff1a\u5efa\u7acb\u5b8c\u6574\u7684 API \u751f\u6001\u548c\u5f00\u53d1\u8005\u793e\u533a</li> <li>\u5408\u89c4\u6027\u652f\u6301\uff1a\u5b9e\u73b0\u5404\u79cd\u5b89\u5168\u5408\u89c4\u6807\u51c6\u7684\u652f\u6301</li> <li>\u9ad8\u53ef\u7528\u90e8\u7f72\uff1a\u5b9e\u73b0\u8de8\u533a\u57df\u3001\u9ad8\u53ef\u7528\u7684\u90e8\u7f72\u67b6\u6784</li> </ol>"},{"location":"conclusions/optimization/#_8","title":"\u7ed3\u8bba","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u5177\u6709\u826f\u597d\u7684\u57fa\u7840\u67b6\u6784\u548c\u529f\u80fd\u8bbe\u8ba1\uff0c\u901a\u8fc7\u4e0a\u8ff0\u4f18\u5316\u65b9\u5411\u548c\u8def\u7ebf\u56fe\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63d0\u5347\u7cfb\u7edf\u7684\u6027\u80fd\u3001\u53ef\u6269\u5c55\u6027\u3001\u5b89\u5168\u6027\u548c\u529f\u80fd\u4e30\u5bcc\u5ea6\uff0c\u6ee1\u8db3\u4e0d\u540c\u89c4\u6a21\u548c\u573a\u666f\u7684\u9700\u6c42\u3002</p> <p>\u4f18\u5316\u8fc7\u7a0b\u5e94\u5f53\u9075\u5faa\u6e10\u8fdb\u5f0f\u548c\u8fed\u4ee3\u5f0f\u7684\u539f\u5219\uff0c\u6839\u636e\u5b9e\u9645\u9700\u6c42\u548c\u8d44\u6e90\u60c5\u51b5\u8c03\u6574\u4f18\u5148\u7ea7\u548c\u5b9e\u65bd\u8ba1\u5212\u3002\u540c\u65f6\uff0c\u5e94\u5f53\u4fdd\u6301\u5bf9\u7528\u6237\u53cd\u9988\u548c\u5e02\u573a\u53d8\u5316\u7684\u654f\u611f\u6027\uff0c\u53ca\u65f6\u8c03\u6574\u4f18\u5316\u65b9\u5411\u548c\u7b56\u7565\u3002</p>"},{"location":"conclusions/quick-start/","title":"Quick Start Guide","text":"<p>This page provides a quick start guide for the DocuSnap-Backend system, helping developers and operations personnel quickly deploy, configure, and use the system.</p>"},{"location":"conclusions/quick-start/#system-requirements","title":"System Requirements","text":"<p>Before you begin, please ensure your environment meets the following requirements:</p>"},{"location":"conclusions/quick-start/#minimum-requirements","title":"Minimum Requirements","text":"<ul> <li>Operating System: Linux (Ubuntu 18.04+/CentOS 7+) or macOS 10.15+</li> <li>Python: Python 3.8 or higher</li> <li>Storage: At least 1GB of available space</li> <li>Memory: At least 4GB RAM</li> <li>Network: Internet connection (for installing dependencies and calling LLM API)</li> </ul>"},{"location":"conclusions/quick-start/#recommended-configuration","title":"Recommended Configuration","text":"<ul> <li>Operating System: Ubuntu 20.04 LTS or higher</li> <li>Python: Python 3.9 or higher</li> <li>Storage: 10GB+ SSD storage</li> <li>Memory: 8GB+ RAM</li> <li>CPU: 4+ cores</li> <li>Network: High-speed internet connection</li> </ul>"},{"location":"conclusions/quick-start/#quick-installation","title":"Quick Installation","text":""},{"location":"conclusions/quick-start/#1-clone-the-repository","title":"1. Clone the Repository","text":"<p>First, clone the DocuSnap-Backend repository to your local machine:</p> <pre><code>git clone https://github.com/JI-DeepSleep/DocuSnap-Backend.git\ncd DocuSnap-Backend\n</code></pre>"},{"location":"conclusions/quick-start/#2-create-a-virtual-environment","title":"2. Create a Virtual Environment","text":"<p>Create and activate a Python virtual environment:</p> <pre><code># Create virtual environment\npython -m venv venv\n\n# Activate virtual environment\n# Linux/macOS\nsource venv/bin/activate\n# Windows\nvenv\\Scripts\\activate\n</code></pre>"},{"location":"conclusions/quick-start/#3-install-dependencies","title":"3. Install Dependencies","text":"<p>Install the required Python dependencies:</p> <pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"conclusions/quick-start/#4-generate-key-pairs","title":"4. Generate Key Pairs","text":"<p>Use the provided script to generate RSA key pairs:</p> <pre><code># Add execution permission to the script\nchmod +x genKeyPairs.sh\n\n# Run the script to generate key pairs\n./genKeyPairs.sh\n</code></pre> <p>This will generate <code>private_key.pem</code> and <code>public_key.pem</code> files in the current directory.</p>"},{"location":"conclusions/quick-start/#5-configure-the-system","title":"5. Configure the System","text":"<p>Create a configuration file:</p> <pre><code># Copy the sample configuration file\ncp priv_sets.py.sample priv_sets.py\n\n# Edit the configuration file\nnano priv_sets.py  # or use your preferred editor\n</code></pre> <p>In the configuration file, you need to set at least the following parameters:</p> <ul> <li>Zhipu AI API Key: For calling the LLM service</li> <li>OCR Service URL: Address pointing to the OCR service</li> <li>Key File Paths: Paths to the RSA private and public keys</li> </ul>"},{"location":"conclusions/quick-start/#6-start-the-ocr-service","title":"6. Start the OCR Service","text":"<p>DocuSnap-Backend requires an external OCR service. You can use CnOCR or another compatible OCR service.</p> <p>If you're using CnOCR, you can start the service with the following steps:</p> <pre><code># Install CnOCR\npip install cnocr\n\n# Create a simple OCR service (example)\ncat &gt; ocr_service.py &lt;&lt; 'EOF'\nfrom flask import Flask, request, jsonify\nfrom cnocr import CnOcr\nimport io\nfrom PIL import Image\n\napp = Flask(__name__)\nocr = CnOcr()\n\n@app.route('/process', methods=['POST'])\ndef process():\n    if 'image' not in request.files:\n        return jsonify({\"error\": \"No image provided\"}), 400\n\n    image_file = request.files['image']\n    img = Image.open(io.BytesIO(image_file.read()))\n    result = ocr.ocr(img)\n\n    text = ''.join([''.join(line) for line in result])\n    return jsonify({\"text\": text})\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5001)\nEOF\n\n# Start the OCR service\npython ocr_service.py &amp;\n</code></pre>"},{"location":"conclusions/quick-start/#7-start-the-application","title":"7. Start the Application","text":"<p>Start the DocuSnap-Backend application:</p> <pre><code># Development environment\nflask run --host=0.0.0.0 --port=5000\n\n# Production environment\ngunicorn --workers=4 --bind=0.0.0.0:8000 app:app\n</code></pre> <p>Now, DocuSnap-Backend should be running and listening on the specified port.</p>"},{"location":"conclusions/quick-start/#basic-usage","title":"Basic Usage","text":""},{"location":"conclusions/quick-start/#1-api-endpoints","title":"1. API Endpoints","text":"<p>DocuSnap-Backend provides the following main API endpoints:</p> <ul> <li><code>/api/process_document</code>: Process document images</li> <li><code>/api/process_form</code>: Process form images</li> <li><code>/api/process_form_filling</code>: Process form auto-filling</li> <li><code>/api/task_status</code>: Query task status and results</li> </ul> <p>All API requests and responses need to use end-to-end encryption.</p>"},{"location":"conclusions/quick-start/#2-client-example","title":"2. Client Example","text":"<p>Below is an example of using Python to call the API:</p> <pre><code>import requests\nimport json\nimport base64\nimport hashlib\nfrom Crypto.PublicKey import RSA\nfrom Crypto.Cipher import PKCS1_OAEP, AES\nfrom Crypto.Random import get_random_bytes\nfrom Crypto.Util.Padding import pad, unpad\n\n# Load public key\nwith open('public_key.pem', 'rb') as f:\n    public_key = RSA.import_key(f.read())\n\n# Generate AES key\naes_key = get_random_bytes(16)\n\n# Encrypt AES key with RSA public key\ncipher_rsa = PKCS1_OAEP.new(public_key)\nencrypted_aes_key = base64.b64encode(cipher_rsa.encrypt(aes_key)).decode('utf-8')\n\n# Prepare request data\ndata = {\n    \"images\": [\n        # Base64 encoded image data\n        \"base64_image_data_here\"\n    ]\n}\n\n# Convert data to JSON string\ndata_json = json.dumps(data)\n\n# Calculate SHA256 hash of data as signature\nsignature = hashlib.sha256(data_json.encode('utf-8')).hexdigest()\n\n# Encrypt data using AES\niv = get_random_bytes(16)\ncipher_aes = AES.new(aes_key, AES.MODE_CBC, iv)\npadded_data = pad(data_json.encode('utf-8'), AES.block_size)\nencrypted_data = base64.b64encode(iv + cipher_aes.encrypt(padded_data)).decode('utf-8')\n\n# Build request\nrequest_data = {\n    \"encrypted_data\": encrypted_data,\n    \"encrypted_key\": encrypted_aes_key,\n    \"signature\": signature\n}\n\n# Send request\nresponse = requests.post(\n    \"http://localhost:8000/api/process_document\",\n    json=request_data\n)\n\n# Parse response\nif response.status_code == 202:\n    # Asynchronous task created successfully\n    response_data = response.json()\n\n    # Decrypt response\n    encrypted_response = response_data[\"encrypted_data\"]\n    encrypted_response_bytes = base64.b64decode(encrypted_response)\n    iv = encrypted_response_bytes[:16]\n    ciphertext = encrypted_response_bytes[16:]\n\n    cipher_aes = AES.new(aes_key, AES.MODE_CBC, iv)\n    decrypted_data = unpad(cipher_aes.decrypt(ciphertext), AES.block_size)\n    result = json.loads(decrypted_data)\n\n    # Get task ID\n    task_id = result[\"task_id\"]\n    print(f\"Task created with ID: {task_id}\")\n\n    # Query task status\n    while True:\n        # Build status query request\n        status_data = {\n            \"task_id\": task_id\n        }\n        status_data_json = json.dumps(status_data)\n        status_signature = hashlib.sha256(status_data_json.encode('utf-8')).hexdigest()\n\n        iv = get_random_bytes(16)\n        cipher_aes = AES.new(aes_key, AES.MODE_CBC, iv)\n        padded_status_data = pad(status_data_json.encode('utf-8'), AES.block_size)\n        encrypted_status_data = base64.b64encode(iv + cipher_aes.encrypt(padded_status_data)).decode('utf-8')\n\n        status_request = {\n            \"encrypted_data\": encrypted_status_data,\n            \"encrypted_key\": encrypted_aes_key,\n            \"signature\": status_signature\n        }\n\n        status_response = requests.post(\n            \"http://localhost:8000/api/task_status\",\n            json=status_request\n        )\n\n        if status_response.status_code == 200:\n            # Decrypt status response\n            status_response_data = status_response.json()\n            encrypted_status = status_response_data[\"encrypted_data\"]\n            encrypted_status_bytes = base64.b64decode(encrypted_status)\n            iv = encrypted_status_bytes[:16]\n            ciphertext = encrypted_status_bytes[16:]\n\n            cipher_aes = AES.new(aes_key, AES.MODE_CBC, iv)\n            decrypted_status = unpad(cipher_aes.decrypt(ciphertext), AES.block_size)\n            status_result = json.loads(decrypted_status)\n\n            if status_result[\"status\"] == \"completed\":\n                print(\"Task completed!\")\n                print(f\"Result: {status_result['result']}\")\n                break\n            elif status_result[\"status\"] == \"error\":\n                print(f\"Task failed: {status_result.get('error', 'Unknown error')}\")\n                break\n            else:\n                print(f\"Task status: {status_result['status']}\")\n                import time\n                time.sleep(2)  # Wait 2 seconds before querying again\n        else:\n            print(f\"Failed to get task status: {status_response.status_code}\")\n            break\nelse:\n    print(f\"Request failed: {response.status_code}\")\n    print(response.text)\n</code></pre>"},{"location":"conclusions/quick-start/#3-web-interface","title":"3. Web Interface","text":"<p>DocuSnap-Backend also provides a simple Web interface for testing and demonstration:</p> <ol> <li>Access <code>http://localhost:8000/ocr</code> in your browser</li> <li>Upload image files</li> <li>Select processing type (document, form, or form filling)</li> <li>Click the submit button</li> <li>View processing results</li> </ol>"},{"location":"conclusions/quick-start/#common-issues","title":"Common Issues","text":""},{"location":"conclusions/quick-start/#1-ocr-service-connection-failure","title":"1. OCR Service Connection Failure","text":"<p>Issue: The application cannot connect to the OCR service.</p> <p>Solution: - Confirm the OCR service is running - Check if the OCR service URL configuration is correct - Verify network connections and firewall settings</p>"},{"location":"conclusions/quick-start/#2-llm-api-call-failure","title":"2. LLM API Call Failure","text":"<p>Issue: Calling the Zhipu AI API fails.</p> <p>Solution: - Check if the API key is correct - Verify network connection - Confirm API usage quota has not been exceeded</p>"},{"location":"conclusions/quick-start/#3-end-to-end-encryption-issues","title":"3. End-to-End Encryption Issues","text":"<p>Issue: Encryption or decryption operations fail.</p> <p>Solution: - Confirm key file paths are configured correctly - Verify key file permission settings - Check encryption and decryption code implementation</p>"},{"location":"conclusions/quick-start/#4-performance-issues","title":"4. Performance Issues","text":"<p>Issue: System responds slowly or processing times out.</p> <p>Solution: - Increase the number of worker threads - Optimize OCR and LLM service concurrency settings - Consider upgrading hardware resources or using higher-performance servers</p>"},{"location":"conclusions/quick-start/#next-steps","title":"Next Steps","text":"<p>After completing the basic deployment and configuration, you can consider the following next steps:</p> <ol> <li>Configure Nginx Reverse Proxy: Improve security and performance</li> <li>Set up HTTPS: Obtain SSL certificates using Let's Encrypt</li> <li>Implement Monitoring: Monitor system status using Prometheus and Grafana</li> <li>Configure Log Management: Centralize log management using the ELK stack</li> <li>Implement High Availability Deployment: Configure multi-instance deployment and load balancing</li> </ol> <p>For more detailed information, please refer to the Deployment Architecture and Scalability and Fault Tolerance documentation.</p>"},{"location":"conclusions/quick-start/#resource-links","title":"Resource Links","text":"<ul> <li>GitHub Repository</li> <li>Flask Documentation</li> <li>CnOCR Documentation</li> <li>Zhipu AI Documentation</li> </ul>"},{"location":"conclusions/references/","title":"\u53c2\u8003\u8d44\u6599","text":"<p>\u672c\u9875\u9762\u63d0\u4f9b\u4e0e DocuSnap-Backend \u7cfb\u7edf\u76f8\u5173\u7684\u53c2\u8003\u8d44\u6599\u3001\u6587\u6863\u548c\u5de5\u5177\u94fe\u63a5\u3002</p>"},{"location":"conclusions/references/#_2","title":"\u6280\u672f\u6587\u6863","text":""},{"location":"conclusions/references/#flask","title":"Flask \u6846\u67b6","text":"<ul> <li>Flask \u5b98\u65b9\u6587\u6863</li> <li>Flask \u6700\u4f73\u5b9e\u8df5</li> <li>Flask \u5927\u578b\u5e94\u7528\u7ed3\u6784</li> </ul>"},{"location":"conclusions/references/#_3","title":"\u6570\u636e\u5e93","text":"<ul> <li>SQLite \u5b98\u65b9\u6587\u6863</li> <li>SQLite Python \u6559\u7a0b</li> <li>SQLAlchemy ORM \u6846\u67b6</li> </ul>"},{"location":"conclusions/references/#ai-llm","title":"AI \u4e0e LLM","text":"<ul> <li>\u667a\u8c31 AI \u5b98\u65b9\u6587\u6863</li> <li>zhipuai Python SDK</li> <li>LLM \u63d0\u793a\u5de5\u7a0b\u6307\u5357</li> </ul>"},{"location":"conclusions/references/#ocr","title":"OCR \u6280\u672f","text":"<ul> <li>CnOCR \u5b98\u65b9\u6587\u6863</li> <li>OCR \u6280\u672f\u539f\u7406\u4e0e\u5b9e\u8df5</li> <li>\u56fe\u50cf\u9884\u5904\u7406\u6280\u672f</li> </ul>"},{"location":"conclusions/references/#_4","title":"\u5b89\u5168\u52a0\u5bc6","text":"<ul> <li>RSA \u52a0\u5bc6\u539f\u7406</li> <li>AES \u52a0\u5bc6\u6307\u5357</li> <li>Python cryptography \u5e93</li> <li>Web \u5e94\u7528\u5b89\u5168\u6700\u4f73\u5b9e\u8df5</li> </ul>"},{"location":"conclusions/references/#_5","title":"\u5e76\u53d1\u4e0e\u5f02\u6b65","text":"<ul> <li>Python \u7ebf\u7a0b\u6c60\u6587\u6863</li> <li>Python Queue \u6587\u6863</li> <li>Python asyncio \u6587\u6863</li> <li>\u5e76\u53d1\u7f16\u7a0b\u6a21\u5f0f</li> </ul>"},{"location":"conclusions/references/#_6","title":"\u8bbe\u8ba1\u6a21\u5f0f\u4e0e\u67b6\u6784","text":"<ul> <li>\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u5f0f</li> <li>\u7b56\u7565\u6a21\u5f0f</li> <li>\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f</li> <li>\u4ee3\u7406\u6a21\u5f0f</li> <li>\u9002\u914d\u5668\u6a21\u5f0f</li> <li>\u5206\u5c42\u67b6\u6784</li> <li>\u5fae\u670d\u52a1\u67b6\u6784</li> </ul>"},{"location":"conclusions/references/#_7","title":"\u90e8\u7f72\u4e0e\u8fd0\u7ef4","text":"<ul> <li>Gunicorn WSGI \u670d\u52a1\u5668</li> <li>Nginx Web \u670d\u52a1\u5668</li> <li>Docker \u5bb9\u5668\u5316</li> <li>Kubernetes \u5bb9\u5668\u7f16\u6392</li> <li>Prometheus \u76d1\u63a7</li> <li>ELK \u65e5\u5fd7\u7ba1\u7406</li> </ul>"},{"location":"conclusions/references/#_8","title":"\u6d4b\u8bd5\u4e0e\u8d28\u91cf\u4fdd\u8bc1","text":"<ul> <li>pytest \u6d4b\u8bd5\u6846\u67b6</li> <li>Python \u5355\u5143\u6d4b\u8bd5</li> <li>Mock \u5bf9\u8c61\u5e93</li> <li>\u4ee3\u7801\u8986\u76d6\u7387\u5de5\u5177</li> <li>Python \u4ee3\u7801\u8d28\u91cf\u5de5\u5177</li> </ul>"},{"location":"conclusions/references/#_9","title":"\u76f8\u5173\u9879\u76ee\u4e0e\u5de5\u5177","text":"<ul> <li>DocuSnap-Frontend - DocuSnap \u524d\u7aef\u9879\u76ee</li> <li>\u667a\u8c31 AI \u5f00\u653e\u5e73\u53f0 - LLM \u670d\u52a1\u63d0\u4f9b\u5546</li> <li>CnOCR - \u4e2d\u6587 OCR \u5de5\u5177</li> <li>FastAPI - \u73b0\u4ee3\u9ad8\u6027\u80fd Web \u6846\u67b6\uff0c\u53ef\u4f5c\u4e3a Flask \u7684\u66ff\u4ee3\u9009\u62e9</li> <li>Celery - \u5206\u5e03\u5f0f\u4efb\u52a1\u961f\u5217\uff0c\u53ef\u7528\u4e8e\u589e\u5f3a\u5f02\u6b65\u5904\u7406\u80fd\u529b</li> </ul>"},{"location":"conclusions/references/#_10","title":"\u5b66\u672f\u8d44\u6e90","text":"<ul> <li>OCR \u6280\u672f\u7efc\u8ff0</li> <li>LLM \u63d0\u793a\u5de5\u7a0b\u7814\u7a76</li> <li>\u6587\u6863\u667a\u80fd\u5904\u7406\u7cfb\u7edf</li> <li>\u7aef\u5230\u7aef\u52a0\u5bc6\u6700\u4f73\u5b9e\u8df5</li> </ul>"},{"location":"conclusions/references/#_11","title":"\u793e\u533a\u8d44\u6e90","text":"<ul> <li>Stack Overflow Flask \u6807\u7b7e</li> <li>Python \u5b98\u65b9\u8bba\u575b</li> <li>AI \u4e0e\u673a\u5668\u5b66\u4e60\u793e\u533a</li> <li>GitHub Discussions</li> </ul>"},{"location":"conclusions/references/#_12","title":"\u4e66\u7c4d\u63a8\u8350","text":"<ul> <li>\u300aFlask Web Development\u300bby Miguel Grinberg</li> <li>\u300aBuilding Microservices\u300bby Sam Newman</li> <li>\u300aClean Architecture\u300bby Robert C. Martin</li> <li>\u300aDesigning Data-Intensive Applications\u300bby Martin Kleppmann</li> <li>\u300aPython Concurrency with asyncio\u300bby Matthew Fowler</li> <li>\u300aPractical MLOps\u300bby Noah Gift and Alfredo Deza</li> </ul>"},{"location":"conclusions/references/#_13","title":"\u89c6\u9891\u6559\u7a0b","text":"<ul> <li>Flask Web \u5f00\u53d1\u6559\u7a0b</li> <li>Python \u5e76\u53d1\u7f16\u7a0b</li> <li>\u8f6f\u4ef6\u67b6\u6784\u8bbe\u8ba1\u6a21\u5f0f</li> <li>OCR \u4e0e\u6587\u6863\u5904\u7406</li> <li>LLM \u5e94\u7528\u5f00\u53d1</li> </ul>"},{"location":"conclusions/references/#_14","title":"\u535a\u5ba2\u4e0e\u6587\u7ae0","text":"<ul> <li>Flask \u5e94\u7528\u67b6\u6784\u8bbe\u8ba1</li> <li>Python \u5e76\u53d1\u7f16\u7a0b\u6307\u5357</li> <li>LLM \u63d0\u793a\u5de5\u7a0b\u6700\u4f73\u5b9e\u8df5</li> <li>\u6587\u6863\u5904\u7406\u7cfb\u7edf\u67b6\u6784</li> <li>Web \u5e94\u7528\u5b89\u5168\u6e05\u5355</li> </ul>"},{"location":"conclusions/summary/","title":"\u603b\u7ed3\u4e0e\u5efa\u8bae","text":"<p>\u672c\u9875\u9762\u603b\u7ed3 DocuSnap-Backend \u7cfb\u7edf\u7684\u67b6\u6784\u7279\u70b9\u3001\u4f18\u52bf\u4e0e\u6311\u6218\uff0c\u5e76\u63d0\u4f9b\u6574\u4f53\u8bc4\u4f30\u548c\u5efa\u8bae\u3002</p>"},{"location":"conclusions/summary/#_2","title":"\u67b6\u6784\u603b\u7ed3","text":"<p>DocuSnap-Backend \u662f\u4e00\u4e2a\u57fa\u4e8e Flask \u7684\u540e\u7aef\u670d\u52a1\uff0c\u91c7\u7528\u5206\u5c42\u67b6\u6784\u4e0e\u5fae\u670d\u52a1\u67b6\u6784\u7684\u6df7\u5408\u6a21\u5f0f\uff0c\u4e3b\u8981\u7528\u4e8e\u5904\u7406\u6587\u6863\u548c\u8868\u5355\u7684 OCR \u8bc6\u522b\u548c AI \u5206\u6790\u3002\u7cfb\u7edf\u7531\u4e09\u4e2a\u4e3b\u8981\u90e8\u5206\u7ec4\u6210\uff1a\u540e\u7aef\u670d\u52a1\u5668\u3001OCR \u670d\u52a1\u5668\u548c LLM \u63d0\u4f9b\u5546\uff0c\u652f\u6301\u4e09\u79cd\u6838\u5fc3\u529f\u80fd\uff1a\u6587\u6863\u5904\u7406\u3001\u8868\u5355\u5904\u7406\u548c\u8868\u5355\u81ea\u52a8\u586b\u5145\u3002</p>"},{"location":"conclusions/summary/#_3","title":"\u6838\u5fc3\u67b6\u6784\u7279\u70b9","text":"<ol> <li>\u4e09\u5c42\u67b6\u6784\uff1a</li> <li>\u540e\u7aef\u670d\u52a1\u5668\uff1a\u5904\u7406\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u534f\u8c03\u4efb\u52a1\u5904\u7406</li> <li>OCR \u670d\u52a1\u5668\uff1a\u4f7f\u7528 CnOCR \u8fdb\u884c\u6587\u672c\u8bc6\u522b</li> <li> <p>LLM \u63d0\u4f9b\u5546\uff1a\u4f7f\u7528\u667a\u8c31 AI \u8fdb\u884c LLM \u5904\u7406</p> </li> <li> <p>\u4e94\u5927\u6838\u5fc3\u6a21\u5757\uff1a</p> </li> <li>\u4efb\u52a1\u5904\u7406\u6a21\u5757\uff1a\u7ba1\u7406\u4efb\u52a1\u961f\u5217\u548c\u5f02\u6b65\u5904\u7406</li> <li>OCR \u5904\u7406\u6a21\u5757\uff1a\u5904\u7406\u56fe\u50cf\u8bc6\u522b\u8bf7\u6c42</li> <li>LLM \u5904\u7406\u6a21\u5757\uff1a\u6784\u5efa\u63d0\u793a\u548c\u5904\u7406 LLM \u54cd\u5e94</li> <li>\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\uff1a\u5b9e\u73b0\u7aef\u5230\u7aef\u52a0\u5bc6</li> <li> <p>\u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757\uff1a\u7ba1\u7406\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c</p> </li> <li> <p>\u5173\u952e\u6280\u672f\u9009\u578b\uff1a</p> </li> <li>Web \u6846\u67b6\uff1aFlask 3.1.1</li> <li>\u6570\u636e\u5e93\uff1aSQLite3</li> <li>AI/LLM\uff1a\u667a\u8c31 AI (zhipuai 2.1.5)</li> <li>OCR\uff1aCnOCR</li> <li>\u5b89\u5168\uff1aRSA \u548c AES \u52a0\u5bc6</li> <li> <p>\u5e76\u53d1\uff1aPython \u6807\u51c6\u5e93\uff08\u7ebf\u7a0b\u6c60\u3001\u961f\u5217\uff09</p> </li> <li> <p>\u8bbe\u8ba1\u6a21\u5f0f\u5e94\u7528\uff1a</p> </li> <li>\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u5f0f\uff1a\u4efb\u52a1\u961f\u5217\u548c\u5de5\u4f5c\u7ebf\u7a0b</li> <li>\u7b56\u7565\u6a21\u5f0f\uff1a\u6839\u636e\u4efb\u52a1\u7c7b\u578b\u4f7f\u7528\u4e0d\u540c\u5904\u7406\u7b56\u7565</li> <li>\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\uff1a\u521b\u5efa\u4e0d\u540c\u7c7b\u578b\u7684\u63d0\u793a</li> <li>\u4ee3\u7406\u6a21\u5f0f\uff1a\u7f13\u5b58\u4f5c\u4e3a\u5904\u7406\u7ed3\u679c\u7684\u4ee3\u7406</li> <li>\u9002\u914d\u5668\u6a21\u5f0f\uff1a\u8f6c\u6362\u6570\u636e\u683c\u5f0f</li> </ol>"},{"location":"conclusions/summary/#_4","title":"\u7cfb\u7edf\u4f18\u52bf","text":""},{"location":"conclusions/summary/#1","title":"1. \u529f\u80fd\u8bbe\u8ba1","text":"<ul> <li>\u7aef\u5230\u7aef\u89e3\u51b3\u65b9\u6848\uff1a\u63d0\u4f9b\u4ece\u56fe\u50cf\u5904\u7406\u5230\u6587\u672c\u5206\u6790\u518d\u5230\u7ed3\u6784\u5316\u6570\u636e\u8f93\u51fa\u7684\u5b8c\u6574\u6d41\u7a0b</li> <li>\u591a\u529f\u80fd\u652f\u6301\uff1a\u652f\u6301\u6587\u6863\u5904\u7406\u3001\u8868\u5355\u5904\u7406\u548c\u8868\u5355\u81ea\u52a8\u586b\u5145\u4e09\u79cd\u6838\u5fc3\u529f\u80fd</li> <li>\u7075\u6d3b\u7684\u63d0\u793a\u5de5\u7a0b\uff1a\u6839\u636e\u4e0d\u540c\u4efb\u52a1\u7c7b\u578b\u5b9a\u5236 LLM \u63d0\u793a\uff0c\u63d0\u9ad8\u5904\u7406\u7cbe\u5ea6</li> </ul>"},{"location":"conclusions/summary/#2","title":"2. \u6280\u672f\u5b9e\u73b0","text":"<ul> <li>\u5f02\u6b65\u5904\u7406\uff1a\u4f7f\u7528\u4efb\u52a1\u961f\u5217\u548c\u7ebf\u7a0b\u6c60\u5b9e\u73b0\u5f02\u6b65\u5904\u7406\uff0c\u63d0\u9ad8\u7cfb\u7edf\u54cd\u5e94\u6027</li> <li>\u5e76\u53d1\u63a7\u5236\uff1a\u901a\u8fc7\u4fe1\u53f7\u91cf\u548c\u7ebf\u7a0b\u6c60\u7cbe\u786e\u63a7\u5236\u5e76\u53d1\uff0c\u786e\u4fdd\u7cfb\u7edf\u7a33\u5b9a\u6027</li> <li>\u7f13\u5b58\u673a\u5236\uff1a\u4f7f\u7528 SQLite \u5b58\u50a8\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c\uff0c\u51cf\u5c11\u91cd\u590d\u8ba1\u7b97</li> <li>\u5b89\u5168\u52a0\u5bc6\uff1a\u5b9e\u73b0\u7aef\u5230\u7aef\u52a0\u5bc6\uff0c\u4fdd\u62a4\u6570\u636e\u4f20\u8f93\u5b89\u5168</li> </ul>"},{"location":"conclusions/summary/#3","title":"3. \u67b6\u6784\u7279\u6027","text":"<ul> <li>\u6a21\u5757\u5316\u8bbe\u8ba1\uff1a\u5c3d\u7ba1\u4ee3\u7801\u96c6\u4e2d\u5728\u5c11\u6570\u6587\u4ef6\u4e2d\uff0c\u4f46\u529f\u80fd\u6a21\u5757\u5212\u5206\u6e05\u6670</li> <li>\u53ef\u6269\u5c55\u6027\uff1a\u67b6\u6784\u652f\u6301\u6dfb\u52a0\u65b0\u7684\u6587\u6863\u7c7b\u578b\u548c\u5904\u7406\u6d41\u7a0b</li> <li>\u9519\u8bef\u5904\u7406\uff1a\u5168\u9762\u7684\u9519\u8bef\u5904\u7406\u673a\u5236\u786e\u4fdd\u7cfb\u7edf\u7a33\u5b9a\u6027</li> <li>\u90e8\u7f72\u7075\u6d3b\u6027\uff1a\u652f\u6301\u5355\u673a\u90e8\u7f72\u548c\u5206\u5e03\u5f0f\u90e8\u7f72</li> </ul>"},{"location":"conclusions/summary/#_5","title":"\u7cfb\u7edf\u6311\u6218","text":""},{"location":"conclusions/summary/#1_1","title":"1. \u4ee3\u7801\u7ec4\u7ec7","text":"<ul> <li>\u4ee3\u7801\u96c6\u4e2d\uff1a\u5927\u90e8\u5206\u4ee3\u7801\u96c6\u4e2d\u5728\u5355\u4e2a\u6587\u4ef6\u4e2d\uff0c\u589e\u52a0\u7ef4\u62a4\u96be\u5ea6</li> <li>\u6a21\u5757\u5316\u4e0d\u8db3\uff1a\u7f3a\u4e4f\u660e\u786e\u7684\u6a21\u5757\u8fb9\u754c\u548c\u63a5\u53e3\u5b9a\u4e49</li> <li>\u9762\u5411\u5bf9\u8c61\u4e0d\u8db3\uff1a\u4e3b\u8981\u4f7f\u7528\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u7f3a\u4e4f\u7c7b\u548c\u5bf9\u8c61\u7684\u4f7f\u7528</li> </ul>"},{"location":"conclusions/summary/#2_1","title":"2. \u6280\u672f\u9650\u5236","text":"<ul> <li>\u6570\u636e\u5e93\u9009\u62e9\uff1aSQLite \u5728\u9ad8\u5e76\u53d1\u573a\u666f\u4e0b\u53ef\u80fd\u5b58\u5728\u6027\u80fd\u74f6\u9888</li> <li>\u540c\u6b65\u5904\u7406\uff1a\u90e8\u5206\u5904\u7406\u6d41\u7a0b\u4ecd\u91c7\u7528\u540c\u6b65\u5904\u7406\uff0c\u53ef\u80fd\u5f71\u54cd\u6027\u80fd</li> <li>\u5916\u90e8\u4f9d\u8d56\uff1a\u5bf9 OCR \u548c LLM \u670d\u52a1\u7684\u5f3a\u4f9d\u8d56\u53ef\u80fd\u5f71\u54cd\u7cfb\u7edf\u53ef\u7528\u6027</li> </ul>"},{"location":"conclusions/summary/#3_1","title":"3. \u67b6\u6784\u6311\u6218","text":"<ul> <li>\u6d4b\u8bd5\u8986\u76d6\uff1a\u7f3a\u4e4f\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u589e\u52a0\u8d28\u91cf\u98ce\u9669</li> <li>\u4f9d\u8d56\u6ce8\u5165\uff1a\u5b58\u5728\u786c\u7f16\u7801\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u964d\u4f4e\u53ef\u6d4b\u8bd5\u6027</li> <li>\u76d1\u63a7\u673a\u5236\uff1a\u7f3a\u4e4f\u5b8c\u5584\u7684\u76d1\u63a7\u548c\u53ef\u89c2\u6d4b\u6027\u673a\u5236</li> </ul>"},{"location":"conclusions/summary/#_6","title":"\u6574\u4f53\u8bc4\u4f30","text":"<p>DocuSnap-Backend \u5c55\u793a\u4e86\u4e00\u4e2a\u8bbe\u8ba1\u826f\u597d\u7684\u540e\u7aef\u670d\u52a1\u67b6\u6784\uff0c\u7ed3\u5408\u4e86 OCR \u548c LLM \u6280\u672f\u6765\u5904\u7406\u548c\u5206\u6790\u6587\u6863\uff0c\u5e76\u901a\u8fc7\u7aef\u5230\u7aef\u52a0\u5bc6\u4fdd\u62a4\u6570\u636e\u5b89\u5168\u3002\u5c3d\u7ba1\u5728\u4ee3\u7801\u7ec4\u7ec7\u548c\u6d4b\u8bd5\u8986\u76d6\u65b9\u9762\u8fd8\u6709\u6539\u8fdb\u7a7a\u95f4\uff0c\u4f46\u603b\u4f53\u800c\u8a00\uff0c\u8fd9\u662f\u4e00\u4e2a\u8d28\u91cf\u826f\u597d\u7684\u4ee3\u7801\u5e93\uff0c\u7279\u522b\u8003\u8651\u5230\u5b83\u662f\u4e00\u4e2a\u5927\u5b66\u6bd5\u4e1a\u8bbe\u8ba1\u9879\u76ee\u3002</p>"},{"location":"conclusions/summary/#_7","title":"\u67b6\u6784\u8bc4\u5206","text":"\u7ef4\u5ea6 \u8bc4\u5206 (1-5) \u8bc4\u4ef7 \u529f\u80fd\u5b8c\u6574\u6027 4 \u652f\u6301\u591a\u79cd\u6587\u6863\u5904\u7406\u529f\u80fd\uff0c\u6ee1\u8db3\u57fa\u672c\u9700\u6c42 \u4ee3\u7801\u8d28\u91cf 3 \u529f\u80fd\u5b9e\u73b0\u826f\u597d\uff0c\u4f46\u6a21\u5757\u5316\u548c\u6d4b\u8bd5\u8986\u76d6\u6709\u5f85\u63d0\u9ad8 \u5b89\u5168\u6027 4 \u5b9e\u73b0\u4e86\u7aef\u5230\u7aef\u52a0\u5bc6\u548c\u8bf7\u6c42\u9a8c\u8bc1\uff0c\u5b89\u5168\u673a\u5236\u5b8c\u5584 \u53ef\u6269\u5c55\u6027 3 \u67b6\u6784\u652f\u6301\u529f\u80fd\u6269\u5c55\uff0c\u4f46\u9700\u8981\u8fdb\u4e00\u6b65\u6a21\u5757\u5316 \u6027\u80fd 3 \u5b9e\u73b0\u4e86\u5f02\u6b65\u5904\u7406\u548c\u7f13\u5b58\u673a\u5236\uff0c\u4f46\u5b58\u5728\u4f18\u5316\u7a7a\u95f4 \u53ef\u7ef4\u62a4\u6027 2 \u4ee3\u7801\u96c6\u4e2d\u548c\u6587\u6863\u4e0d\u8db3\u5f71\u54cd\u53ef\u7ef4\u62a4\u6027 \u603b\u4f53\u8bc4\u5206 3.2 \u826f\u597d\u7684\u67b6\u6784\u8bbe\u8ba1\uff0c\u5b58\u5728\u4e00\u5b9a\u6539\u8fdb\u7a7a\u95f4"},{"location":"conclusions/summary/#_8","title":"\u5173\u952e\u5efa\u8bae","text":"<p>\u57fa\u4e8e\u4e0a\u8ff0\u5206\u6790\uff0c\u6211\u4eec\u63d0\u51fa\u4ee5\u4e0b\u5173\u952e\u5efa\u8bae\uff1a</p>"},{"location":"conclusions/summary/#1-0-3","title":"1. \u77ed\u671f\u6539\u8fdb\uff080-3 \u4e2a\u6708\uff09","text":"<ul> <li>\u6a21\u5757\u5316\u91cd\u6784\uff1a\u5c06\u4ee3\u7801\u62c6\u5206\u4e3a\u591a\u4e2a\u6a21\u5757\u6587\u4ef6\uff0c\u63d0\u9ad8\u53ef\u7ef4\u62a4\u6027</li> <li>\u81ea\u52a8\u5316\u6d4b\u8bd5\uff1a\u5b9e\u73b0\u57fa\u672c\u7684\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5\uff0c\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf</li> <li>\u6587\u6863\u5b8c\u5584\uff1a\u5b8c\u5584 API \u6587\u6863\u548c\u67b6\u6784\u8bbe\u8ba1\u6587\u6863\uff0c\u4fbf\u4e8e\u7406\u89e3\u548c\u7ef4\u62a4</li> <li>\u76d1\u63a7\u673a\u5236\uff1a\u5b9e\u73b0\u57fa\u672c\u7684\u65e5\u5fd7\u8bb0\u5f55\u548c\u76d1\u63a7\u673a\u5236\uff0c\u63d0\u9ad8\u53ef\u89c2\u6d4b\u6027</li> </ul>"},{"location":"conclusions/summary/#2-3-6","title":"2. \u4e2d\u671f\u6539\u8fdb\uff083-6 \u4e2a\u6708\uff09","text":"<ul> <li>\u9762\u5411\u5bf9\u8c61\u91cd\u6784\uff1a\u5f15\u5165\u66f4\u591a\u7684\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\uff0c\u63d0\u9ad8\u4ee3\u7801\u7ec4\u7ec7\u6027</li> <li>\u6027\u80fd\u4f18\u5316\uff1a\u4f18\u5316\u5e76\u53d1\u5904\u7406\u548c\u7f13\u5b58\u7b56\u7565\uff0c\u63d0\u9ad8\u7cfb\u7edf\u6027\u80fd</li> <li>\u5b89\u5168\u589e\u5f3a\uff1a\u5b9e\u73b0\u66f4\u5b8c\u5584\u7684\u8bbf\u95ee\u63a7\u5236\u548c\u6570\u636e\u4fdd\u62a4\u673a\u5236</li> <li>\u529f\u80fd\u6269\u5c55\uff1a\u652f\u6301\u66f4\u591a\u6587\u6863\u7c7b\u578b\u548c\u5904\u7406\u6d41\u7a0b\uff0c\u63d0\u9ad8\u7cfb\u7edf\u9002\u7528\u6027</li> </ul>"},{"location":"conclusions/summary/#3-6","title":"3. \u957f\u671f\u89c4\u5212\uff086+ \u4e2a\u6708\uff09","text":"<ul> <li>\u5fae\u670d\u52a1\u6f14\u8fdb\uff1a\u8003\u8651\u5411\u5fae\u670d\u52a1\u67b6\u6784\u6f14\u8fdb\uff0c\u63d0\u9ad8\u7cfb\u7edf\u53ef\u6269\u5c55\u6027</li> <li>\u6570\u636e\u5e93\u5347\u7ea7\uff1a\u8003\u8651\u4f7f\u7528\u4f01\u4e1a\u7ea7\u6570\u636e\u5e93\uff0c\u63d0\u9ad8\u6570\u636e\u7ba1\u7406\u80fd\u529b</li> <li>API \u751f\u6001\uff1a\u5efa\u7acb\u5b8c\u6574\u7684 API \u751f\u6001\u548c\u5f00\u53d1\u8005\u793e\u533a\uff0c\u6269\u5927\u7cfb\u7edf\u5f71\u54cd\u529b</li> <li>\u9ad8\u53ef\u7528\u90e8\u7f72\uff1a\u5b9e\u73b0\u8de8\u533a\u57df\u3001\u9ad8\u53ef\u7528\u7684\u90e8\u7f72\u67b6\u6784\uff0c\u63d0\u9ad8\u7cfb\u7edf\u53ef\u9760\u6027</li> </ul>"},{"location":"conclusions/summary/#_9","title":"\u7ed3\u8bba","text":"<p>DocuSnap-Backend \u662f\u4e00\u4e2a\u8bbe\u8ba1\u826f\u597d\u7684\u6587\u6863\u5904\u7406\u540e\u7aef\u7cfb\u7edf\uff0c\u5c55\u793a\u4e86\u5c06 OCR \u548c LLM \u6280\u672f\u7ed3\u5408\u5e94\u7528\u7684\u6709\u6548\u65b9\u5f0f\u3002\u901a\u8fc7\u5b9e\u65bd\u4e0a\u8ff0\u5efa\u8bae\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u7cfb\u7edf\u7684\u8d28\u91cf\u3001\u6027\u80fd\u548c\u53ef\u7ef4\u62a4\u6027\uff0c\u4f7f\u5176\u66f4\u52a0\u9002\u5408\u751f\u4ea7\u73af\u5883\u548c\u4f01\u4e1a\u7ea7\u5e94\u7528\u3002</p> <p>\u7cfb\u7edf\u7684\u6838\u5fc3\u67b6\u6784\u8bbe\u8ba1\u662f\u5408\u7406\u7684\uff0c\u4e3b\u8981\u6539\u8fdb\u7a7a\u95f4\u5728\u4e8e\u4ee3\u7801\u7ec4\u7ec7\u3001\u6d4b\u8bd5\u8986\u76d6\u548c\u6027\u80fd\u4f18\u5316\u7b49\u65b9\u9762\u3002\u968f\u7740\u8fd9\u4e9b\u65b9\u9762\u7684\u6539\u8fdb\uff0cDocuSnap-Backend \u6709\u6f5c\u529b\u53d1\u5c55\u6210\u4e3a\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u3001\u6027\u80fd\u4f18\u8d8a\u7684\u4f01\u4e1a\u7ea7\u6587\u6863\u5904\u7406\u89e3\u51b3\u65b9\u6848\u3002</p>"},{"location":"core-modules/cache-persistence/","title":"\u7f13\u5b58\u4e0e\u6301\u4e45\u5316\u6a21\u5757","text":"<p>\u7f13\u5b58\u4e0e\u6301\u4e45\u5316\u6a21\u5757\u662f DocuSnap-Backend \u7cfb\u7edf\u7684\u6570\u636e\u7ba1\u7406\u7ec4\u4ef6\uff0c\u8d1f\u8d23\u7ba1\u7406\u4efb\u52a1\u72b6\u6001\u548c\u5904\u7406\u7ed3\u679c\u7684\u5b58\u50a8\u3001\u68c0\u7d22\u548c\u6e05\u7406\u3002\u8be5\u6a21\u5757\u4f7f\u7528 SQLite \u6570\u636e\u5e93\u5b9e\u73b0\u8f7b\u91cf\u7ea7\u7684\u6570\u636e\u6301\u4e45\u5316\uff0c\u63d0\u9ad8\u7cfb\u7edf\u6027\u80fd\u5e76\u4fdd\u969c\u6570\u636e\u53ef\u9760\u6027\u3002</p>"},{"location":"core-modules/cache-persistence/#_2","title":"\u6a21\u5757\u804c\u8d23","text":"<p>\u7f13\u5b58\u4e0e\u6301\u4e45\u5316\u6a21\u5757\u7684\u4e3b\u8981\u804c\u8d23\u5305\u62ec\uff1a</p> <ol> <li>\u6570\u636e\u5e93\u7ba1\u7406\uff1a\u521b\u5efa\u548c\u7ef4\u62a4 SQLite \u6570\u636e\u5e93\u8fde\u63a5\u548c\u8868\u7ed3\u6784</li> <li>\u4efb\u52a1\u72b6\u6001\u5b58\u50a8\uff1a\u8bb0\u5f55\u548c\u66f4\u65b0\u4efb\u52a1\u7684\u5904\u7406\u72b6\u6001</li> <li>\u7ed3\u679c\u7f13\u5b58\uff1a\u5b58\u50a8\u4efb\u52a1\u5904\u7406\u7ed3\u679c\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97</li> <li>\u6570\u636e\u68c0\u7d22\uff1a\u63d0\u4f9b\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c\u7684\u67e5\u8be2\u63a5\u53e3</li> <li>\u7f13\u5b58\u6e05\u7406\uff1a\u5b9a\u671f\u6e05\u7406\u8fc7\u671f\u7684\u7f13\u5b58\u6570\u636e\uff0c\u4f18\u5316\u5b58\u50a8\u7a7a\u95f4</li> </ol>"},{"location":"core-modules/cache-persistence/#_3","title":"\u6838\u5fc3\u7ec4\u4ef6","text":""},{"location":"core-modules/cache-persistence/#1","title":"1. \u6570\u636e\u5e93\u8fde\u63a5\u7ba1\u7406\u5668","text":"<p>\u6570\u636e\u5e93\u8fde\u63a5\u7ba1\u7406\u5668\u8d1f\u8d23\u521b\u5efa\u548c\u7ba1\u7406\u4e0e SQLite \u6570\u636e\u5e93\u7684\u8fde\u63a5\uff0c\u786e\u4fdd\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u53ef\u9760\u6027\u548c\u6548\u7387\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def get_db_connection():\n    \"\"\"\u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5\"\"\"\n    try:\n        conn = sqlite3.connect(DATABASE_PATH)\n        conn.row_factory = sqlite3.Row  # \u4f7f\u7ed3\u679c\u53ef\u901a\u8fc7\u5217\u540d\u8bbf\u95ee\n        return conn\n    except Exception as e:\n        raise Exception(f\"\u6570\u636e\u5e93\u8fde\u63a5\u5931\u8d25: {str(e)}\")\n\ndef init_db():\n    \"\"\"\u521d\u59cb\u5316\u6570\u636e\u5e93\uff0c\u521b\u5efa\u5fc5\u8981\u7684\u8868\"\"\"\n    try:\n        conn = get_db_connection()\n        cursor = conn.cursor()\n\n        # \u521b\u5efa\u4efb\u52a1\u8868\n        cursor.execute('''\n        CREATE TABLE IF NOT EXISTS tasks (\n            id TEXT PRIMARY KEY,\n            type TEXT NOT NULL,\n            status TEXT NOT NULL,\n            result TEXT,\n            created_at INTEGER NOT NULL,\n            updated_at INTEGER\n        )\n        ''')\n\n        conn.commit()\n        conn.close()\n    except Exception as e:\n        raise Exception(f\"\u6570\u636e\u5e93\u521d\u59cb\u5316\u5931\u8d25: {str(e)}\")\n</code></pre>"},{"location":"core-modules/cache-persistence/#2","title":"2. \u4efb\u52a1\u6570\u636e\u5b58\u50a8\u5668","text":"<p>\u4efb\u52a1\u6570\u636e\u5b58\u50a8\u5668\u8d1f\u8d23\u5c06\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c\u5b58\u50a8\u5230\u6570\u636e\u5e93\uff0c\u5e76\u5728\u9700\u8981\u65f6\u66f4\u65b0\u8fd9\u4e9b\u4fe1\u606f\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def create_task_record(task_id, task_type):\n    \"\"\"\u521b\u5efa\u65b0\u7684\u4efb\u52a1\u8bb0\u5f55\"\"\"\n    try:\n        conn = get_db_connection()\n        cursor = conn.cursor()\n\n        current_time = int(time.time())\n\n        cursor.execute(\n            \"INSERT INTO tasks (id, type, status, created_at) VALUES (?, ?, ?, ?)\",\n            (task_id, task_type, 'pending', current_time)\n        )\n\n        conn.commit()\n        conn.close()\n    except Exception as e:\n        raise Exception(f\"\u521b\u5efa\u4efb\u52a1\u8bb0\u5f55\u5931\u8d25: {str(e)}\")\n\ndef update_task_result(task_id, status, result=None):\n    \"\"\"\u66f4\u65b0\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c\"\"\"\n    try:\n        conn = get_db_connection()\n        cursor = conn.cursor()\n\n        current_time = int(time.time())\n\n        if result:\n            # \u5982\u679c\u63d0\u4f9b\u4e86\u7ed3\u679c\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a JSON \u5b57\u7b26\u4e32\u5b58\u50a8\n            result_json = json.dumps(result, ensure_ascii=False)\n\n            cursor.execute(\n                \"UPDATE tasks SET status = ?, result = ?, updated_at = ? WHERE id = ?\",\n                (status, result_json, current_time, task_id)\n            )\n        else:\n            cursor.execute(\n                \"UPDATE tasks SET status = ?, updated_at = ? WHERE id = ?\",\n                (status, current_time, task_id)\n            )\n\n        conn.commit()\n        conn.close()\n    except Exception as e:\n        raise Exception(f\"\u66f4\u65b0\u4efb\u52a1\u7ed3\u679c\u5931\u8d25: {str(e)}\")\n</code></pre>"},{"location":"core-modules/cache-persistence/#3","title":"3. \u7f13\u5b58\u67e5\u8be2\u5668","text":"<p>\u7f13\u5b58\u67e5\u8be2\u5668\u8d1f\u8d23\u4ece\u6570\u636e\u5e93\u4e2d\u68c0\u7d22\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c\uff0c\u652f\u6301\u7cfb\u7edf\u7684\u7f13\u5b58\u673a\u5236\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def get_task_status(task_id):\n    \"\"\"\u83b7\u53d6\u4efb\u52a1\u72b6\u6001\"\"\"\n    try:\n        conn = get_db_connection()\n        cursor = conn.cursor()\n\n        cursor.execute(\n            \"SELECT status, created_at, updated_at FROM tasks WHERE id = ?\",\n            (task_id,)\n        )\n\n        task = cursor.fetchone()\n        conn.close()\n\n        if task:\n            return {\n                'status': task['status'],\n                'created_at': task['created_at'],\n                'updated_at': task['updated_at']\n            }\n        else:\n            return None\n    except Exception as e:\n        raise Exception(f\"\u83b7\u53d6\u4efb\u52a1\u72b6\u6001\u5931\u8d25: {str(e)}\")\n\ndef get_task_result(task_id):\n    \"\"\"\u83b7\u53d6\u4efb\u52a1\u7ed3\u679c\"\"\"\n    try:\n        conn = get_db_connection()\n        cursor = conn.cursor()\n\n        cursor.execute(\n            \"SELECT status, result, created_at, updated_at FROM tasks WHERE id = ?\",\n            (task_id,)\n        )\n\n        task = cursor.fetchone()\n        conn.close()\n\n        if task and task['result']:\n            return {\n                'status': task['status'],\n                'result': json.loads(task['result']),\n                'created_at': task['created_at'],\n                'updated_at': task['updated_at']\n            }\n        elif task:\n            return {\n                'status': task['status'],\n                'result': None,\n                'created_at': task['created_at'],\n                'updated_at': task['updated_at']\n            }\n        else:\n            return None\n    except Exception as e:\n        raise Exception(f\"\u83b7\u53d6\u4efb\u52a1\u7ed3\u679c\u5931\u8d25: {str(e)}\")\n</code></pre>"},{"location":"core-modules/cache-persistence/#4","title":"4. \u6570\u636e\u6e05\u7406\u5668","text":"<p>\u6570\u636e\u6e05\u7406\u5668\u8d1f\u8d23\u5b9a\u671f\u6e05\u7406\u8fc7\u671f\u7684\u7f13\u5b58\u6570\u636e\uff0c\u4f18\u5316\u6570\u636e\u5e93\u5b58\u50a8\u7a7a\u95f4\u548c\u67e5\u8be2\u6027\u80fd\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def cleanup_expired_tasks(max_age_days=7):\n    \"\"\"\u6e05\u7406\u8fc7\u671f\u7684\u4efb\u52a1\u8bb0\u5f55\"\"\"\n    try:\n        conn = get_db_connection()\n        cursor = conn.cursor()\n\n        # \u8ba1\u7b97\u8fc7\u671f\u65f6\u95f4\u6233\uff08\u5f53\u524d\u65f6\u95f4\u51cf\u53bb\u6700\u5927\u4fdd\u7559\u5929\u6570\uff09\n        expiration_timestamp = int(time.time()) - (max_age_days * 24 * 60 * 60)\n\n        # \u5220\u9664\u8fc7\u671f\u7684\u4efb\u52a1\u8bb0\u5f55\n        cursor.execute(\n            \"DELETE FROM tasks WHERE created_at &lt; ?\",\n            (expiration_timestamp,)\n        )\n\n        deleted_count = cursor.rowcount\n        conn.commit()\n        conn.close()\n\n        return deleted_count\n    except Exception as e:\n        raise Exception(f\"\u6e05\u7406\u8fc7\u671f\u4efb\u52a1\u5931\u8d25: {str(e)}\")\n</code></pre>"},{"location":"core-modules/cache-persistence/#_4","title":"\u6570\u636e\u5e93\u8bbe\u8ba1","text":"<p>\u7f13\u5b58\u4e0e\u6301\u4e45\u5316\u6a21\u5757\u4f7f\u7528 SQLite \u6570\u636e\u5e93\u5b58\u50a8\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c\uff0c\u6570\u636e\u5e93\u8bbe\u8ba1\u5982\u4e0b\uff1a</p>"},{"location":"core-modules/cache-persistence/#tasks","title":"\u4efb\u52a1\u8868 (tasks)","text":"\u5217\u540d \u7c7b\u578b \u63cf\u8ff0 id TEXT \u4e3b\u952e\uff0c\u4efb\u52a1\u552f\u4e00\u6807\u8bc6\u7b26 type TEXT \u4efb\u52a1\u7c7b\u578b\uff08document, form, form_filling\uff09 status TEXT \u4efb\u52a1\u72b6\u6001\uff08pending, processing, completed, error\uff09 result TEXT \u4efb\u52a1\u7ed3\u679c\uff0cJSON \u683c\u5f0f created_at INTEGER \u521b\u5efa\u65f6\u95f4\u6233 updated_at INTEGER \u66f4\u65b0\u65f6\u95f4\u6233 <p>\u8fd9\u79cd\u8bbe\u8ba1\u652f\u6301\u7cfb\u7edf\u7684\u6838\u5fc3\u7f13\u5b58\u9700\u6c42\uff0c\u540c\u65f6\u4fdd\u6301\u6570\u636e\u5e93\u7ed3\u6784\u7684\u7b80\u6d01\u6027\u3002</p>"},{"location":"core-modules/cache-persistence/#_5","title":"\u7f13\u5b58\u7b56\u7565","text":"<p>\u7f13\u5b58\u4e0e\u6301\u4e45\u5316\u6a21\u5757\u5b9e\u73b0\u4e86\u4ee5\u4e0b\u7f13\u5b58\u7b56\u7565\uff1a</p> <ol> <li>\u7ed3\u679c\u7f13\u5b58\uff1a</li> <li>\u5b58\u50a8\u4efb\u52a1\u5904\u7406\u7ed3\u679c\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97</li> <li>\u76f8\u540c\u7684\u8f93\u5165\u53c2\u6570\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u7f13\u5b58\u7ed3\u679c</li> <li> <p>\u63d0\u9ad8\u7cfb\u7edf\u54cd\u5e94\u901f\u5ea6\u548c\u8d44\u6e90\u5229\u7528\u7387</p> </li> <li> <p>\u72b6\u6001\u8ddf\u8e2a\uff1a</p> </li> <li>\u8bb0\u5f55\u4efb\u52a1\u7684\u5904\u7406\u72b6\u6001\uff08\u5f85\u5904\u7406\u3001\u5904\u7406\u4e2d\u3001\u5df2\u5b8c\u6210\u3001\u9519\u8bef\uff09</li> <li>\u652f\u6301\u5ba2\u6237\u7aef\u67e5\u8be2\u4efb\u52a1\u8fdb\u5ea6</li> <li> <p>\u5b9e\u73b0\u5f02\u6b65\u5904\u7406\u6a21\u5f0f</p> </li> <li> <p>\u65f6\u95f4\u57fa\u7f13\u5b58\u7ba1\u7406\uff1a</p> </li> <li>\u8bb0\u5f55\u4efb\u52a1\u7684\u521b\u5efa\u548c\u66f4\u65b0\u65f6\u95f4</li> <li>\u5b9a\u671f\u6e05\u7406\u8fc7\u671f\u7f13\u5b58\u6570\u636e</li> <li> <p>\u4f18\u5316\u5b58\u50a8\u7a7a\u95f4\u548c\u67e5\u8be2\u6027\u80fd</p> </li> <li> <p>\u9519\u8bef\u6062\u590d\uff1a</p> </li> <li>\u8bb0\u5f55\u4efb\u52a1\u5904\u7406\u9519\u8bef\u4fe1\u606f</li> <li>\u652f\u6301\u9519\u8bef\u5206\u6790\u548c\u8c03\u8bd5</li> <li>\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u652f\u6301\u4efb\u52a1\u91cd\u8bd5</li> </ol>"},{"location":"core-modules/cache-persistence/#_6","title":"\u5de5\u4f5c\u6d41\u7a0b","text":"<p>\u7f13\u5b58\u4e0e\u6301\u4e45\u5316\u6a21\u5757\u7684\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a</p>"},{"location":"core-modules/cache-persistence/#_7","title":"\u6570\u636e\u5b58\u50a8\u6d41\u7a0b","text":"<ol> <li>\u4efb\u52a1\u521b\u5efa\uff1a</li> <li>\u7cfb\u7edf\u751f\u6210\u552f\u4e00\u7684\u4efb\u52a1 ID</li> <li>\u521b\u5efa\u4efb\u52a1\u8bb0\u5f55\uff0c\u72b6\u6001\u8bbe\u4e3a\"\u5f85\u5904\u7406\"</li> <li> <p>\u8bb0\u5f55\u521b\u5efa\u65f6\u95f4\u6233</p> </li> <li> <p>\u72b6\u6001\u66f4\u65b0\uff1a</p> </li> <li>\u4efb\u52a1\u5f00\u59cb\u5904\u7406\u65f6\uff0c\u72b6\u6001\u66f4\u65b0\u4e3a\"\u5904\u7406\u4e2d\"</li> <li> <p>\u8bb0\u5f55\u66f4\u65b0\u65f6\u95f4\u6233</p> </li> <li> <p>\u7ed3\u679c\u5b58\u50a8\uff1a</p> </li> <li>\u4efb\u52a1\u5b8c\u6210\u540e\uff0c\u72b6\u6001\u66f4\u65b0\u4e3a\"\u5df2\u5b8c\u6210\"\u6216\"\u9519\u8bef\"</li> <li>\u5b58\u50a8\u5904\u7406\u7ed3\u679c\u6216\u9519\u8bef\u4fe1\u606f</li> <li>\u66f4\u65b0\u66f4\u65b0\u65f6\u95f4\u6233</li> </ol>"},{"location":"core-modules/cache-persistence/#_8","title":"\u6570\u636e\u68c0\u7d22\u6d41\u7a0b","text":"<ol> <li>\u72b6\u6001\u67e5\u8be2\uff1a</li> <li>\u5ba2\u6237\u7aef\u63d0\u4f9b\u4efb\u52a1 ID</li> <li>\u7cfb\u7edf\u67e5\u8be2\u4efb\u52a1\u72b6\u6001</li> <li> <p>\u8fd4\u56de\u72b6\u6001\u4fe1\u606f\u548c\u65f6\u95f4\u6233</p> </li> <li> <p>\u7ed3\u679c\u67e5\u8be2\uff1a</p> </li> <li>\u5ba2\u6237\u7aef\u63d0\u4f9b\u4efb\u52a1 ID</li> <li>\u7cfb\u7edf\u67e5\u8be2\u4efb\u52a1\u7ed3\u679c</li> <li>\u5982\u679c\u4efb\u52a1\u5df2\u5b8c\u6210\uff0c\u8fd4\u56de\u5904\u7406\u7ed3\u679c</li> <li>\u5982\u679c\u4efb\u52a1\u672a\u5b8c\u6210\uff0c\u8fd4\u56de\u5f53\u524d\u72b6\u6001</li> </ol>"},{"location":"core-modules/cache-persistence/#_9","title":"\u7f13\u5b58\u6e05\u7406\u6d41\u7a0b","text":"<ol> <li>\u5b9a\u671f\u6267\u884c\uff1a</li> <li>\u7cfb\u7edf\u5b9a\u671f\uff08\u5982\u6bcf\u5929\uff09\u6267\u884c\u7f13\u5b58\u6e05\u7406</li> <li> <p>\u4e5f\u53ef\u4ee5\u5728\u670d\u52a1\u5668\u8d1f\u8f7d\u8f83\u4f4e\u65f6\u624b\u52a8\u89e6\u53d1</p> </li> <li> <p>\u8fc7\u671f\u5224\u65ad\uff1a</p> </li> <li>\u6839\u636e\u4efb\u52a1\u521b\u5efa\u65f6\u95f4\u5224\u65ad\u662f\u5426\u8fc7\u671f</li> <li> <p>\u9ed8\u8ba4\u4fdd\u7559\u671f\u4e3a 7 \u5929</p> </li> <li> <p>\u6570\u636e\u5220\u9664\uff1a</p> </li> <li>\u5220\u9664\u8fc7\u671f\u7684\u4efb\u52a1\u8bb0\u5f55</li> <li>\u91ca\u653e\u6570\u636e\u5e93\u5b58\u50a8\u7a7a\u95f4</li> </ol>"},{"location":"core-modules/cache-persistence/#_10","title":"\u4e8b\u52a1\u7ba1\u7406","text":"<p>\u7f13\u5b58\u4e0e\u6301\u4e45\u5316\u6a21\u5757\u5b9e\u73b0\u4e86\u57fa\u672c\u7684\u4e8b\u52a1\u7ba1\u7406\uff0c\u786e\u4fdd\u6570\u636e\u64cd\u4f5c\u7684\u539f\u5b50\u6027\uff1a</p> <ol> <li>\u8fde\u63a5\u7ba1\u7406\uff1a</li> <li>\u6bcf\u4e2a\u6570\u636e\u5e93\u64cd\u4f5c\u83b7\u53d6\u65b0\u7684\u8fde\u63a5</li> <li> <p>\u64cd\u4f5c\u5b8c\u6210\u540e\u5173\u95ed\u8fde\u63a5\uff0c\u91ca\u653e\u8d44\u6e90</p> </li> <li> <p>\u4e8b\u52a1\u63d0\u4ea4\uff1a</p> </li> <li>\u6570\u636e\u4fee\u6539\u64cd\u4f5c\u540e\u663e\u5f0f\u63d0\u4ea4\u4e8b\u52a1</li> <li> <p>\u786e\u4fdd\u6570\u636e\u5199\u5165\u78c1\u76d8</p> </li> <li> <p>\u9519\u8bef\u5904\u7406\uff1a</p> </li> <li>\u6355\u83b7\u5e76\u5904\u7406\u6570\u636e\u5e93\u64cd\u4f5c\u5f02\u5e38</li> <li>\u63d0\u4f9b\u8be6\u7ec6\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u4fbf\u4e8e\u8c03\u8bd5</li> </ol>"},{"location":"core-modules/cache-persistence/#_11","title":"\u6a21\u5757\u63a5\u53e3","text":"<p>\u7f13\u5b58\u4e0e\u6301\u4e45\u5316\u6a21\u5757\u63d0\u4f9b\u4ee5\u4e0b\u4e3b\u8981\u63a5\u53e3\uff1a</p> <ol> <li>\u5bf9\u5916\u63a5\u53e3\uff1a</li> <li><code>get_task_status</code>\uff1a\u83b7\u53d6\u4efb\u52a1\u72b6\u6001</li> <li> <p><code>get_task_result</code>\uff1a\u83b7\u53d6\u4efb\u52a1\u7ed3\u679c</p> </li> <li> <p>\u5bf9\u5185\u63a5\u53e3\uff1a</p> </li> <li><code>get_db_connection</code>\uff1a\u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5</li> <li><code>init_db</code>\uff1a\u521d\u59cb\u5316\u6570\u636e\u5e93</li> <li><code>create_task_record</code>\uff1a\u521b\u5efa\u4efb\u52a1\u8bb0\u5f55</li> <li><code>update_task_result</code>\uff1a\u66f4\u65b0\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c</li> <li><code>cleanup_expired_tasks</code>\uff1a\u6e05\u7406\u8fc7\u671f\u4efb\u52a1</li> </ol>"},{"location":"core-modules/cache-persistence/#_12","title":"\u6027\u80fd\u8003\u91cf","text":"<p>\u7f13\u5b58\u4e0e\u6301\u4e45\u5316\u6a21\u5757\u7684\u6027\u80fd\u4f18\u5316\u63aa\u65bd\u5305\u62ec\uff1a</p> <ol> <li>\u8f7b\u91cf\u7ea7\u6570\u636e\u5e93\uff1a</li> <li>\u4f7f\u7528 SQLite \u4f5c\u4e3a\u8f7b\u91cf\u7ea7\u6570\u636e\u5e93</li> <li>\u65e0\u9700\u72ec\u7acb\u7684\u6570\u636e\u5e93\u670d\u52a1\u5668</li> <li> <p>\u9002\u5408\u4e2d\u5c0f\u89c4\u6a21\u7684\u7f13\u5b58\u9700\u6c42</p> </li> <li> <p>\u7d22\u5f15\u4f18\u5316\uff1a</p> </li> <li>\u5bf9 <code>id</code> \u5b57\u6bb5\u5efa\u7acb\u4e3b\u952e\u7d22\u5f15</li> <li> <p>\u63d0\u9ad8\u4efb\u52a1\u67e5\u8be2\u6027\u80fd</p> </li> <li> <p>\u8fde\u63a5\u7ba1\u7406\uff1a</p> </li> <li>\u6bcf\u4e2a\u64cd\u4f5c\u4f7f\u7528\u72ec\u7acb\u7684\u8fde\u63a5</li> <li>\u907f\u514d\u957f\u65f6\u95f4\u5360\u7528\u8fde\u63a5\u8d44\u6e90</li> <li> <p>\u9002\u5408\u5e76\u53d1\u8bbf\u95ee\u573a\u666f</p> </li> <li> <p>\u5b9a\u671f\u6e05\u7406\uff1a</p> </li> <li>\u6e05\u7406\u8fc7\u671f\u6570\u636e\uff0c\u907f\u514d\u6570\u636e\u5e93\u81a8\u80c0</li> <li>\u7ef4\u6301\u67e5\u8be2\u6027\u80fd</li> </ol>"},{"location":"core-modules/cache-persistence/#_13","title":"\u6269\u5c55\u6027","text":"<p>\u7f13\u5b58\u4e0e\u6301\u4e45\u5316\u6a21\u5757\u7684\u6269\u5c55\u6027\u4f53\u73b0\u5728\uff1a</p> <ol> <li>\u652f\u6301\u591a\u79cd\u5b58\u50a8\u540e\u7aef\uff1a</li> <li>\u8bbe\u8ba1\u652f\u6301\u672a\u6765\u66ff\u6362\u4e3a\u5176\u4ed6\u6570\u636e\u5e93\u7cfb\u7edf</li> <li> <p>\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u5347\u7ea7\u4e3a\u66f4\u5f3a\u5927\u7684\u6570\u636e\u5e93</p> </li> <li> <p>\u53ef\u6269\u5c55\u7684\u6570\u636e\u6a21\u578b\uff1a</p> </li> <li>\u53ef\u4ee5\u6dfb\u52a0\u65b0\u7684\u8868\u548c\u5b57\u6bb5\uff0c\u652f\u6301\u66f4\u590d\u6742\u7684\u6570\u636e\u9700\u6c42</li> <li> <p>\u4fdd\u6301\u5411\u540e\u517c\u5bb9\u6027</p> </li> <li> <p>\u7f13\u5b58\u7b56\u7565\u4f18\u5316\uff1a</p> </li> <li>\u53ef\u4ee5\u5b9e\u73b0\u66f4\u590d\u6742\u7684\u7f13\u5b58\u7b56\u7565\uff0c\u5982\u57fa\u4e8e\u4f7f\u7528\u9891\u7387\u7684\u7f13\u5b58</li> <li>\u53ef\u4ee5\u6dfb\u52a0\u7f13\u5b58\u9884\u70ed\u548c\u7f13\u5b58\u5931\u6548\u673a\u5236</li> </ol> <p>\u901a\u8fc7\u8fd9\u4e9b\u8bbe\u8ba1\u548c\u5b9e\u73b0\uff0c\u7f13\u5b58\u4e0e\u6301\u4e45\u5316\u6a21\u5757\u4e3a DocuSnap-Backend \u7cfb\u7edf\u63d0\u4f9b\u4e86\u9ad8\u6548\u3001\u53ef\u9760\u7684\u6570\u636e\u5b58\u50a8\u548c\u68c0\u7d22\u670d\u52a1\uff0c\u652f\u6301\u7cfb\u7edf\u7684\u6838\u5fc3\u529f\u80fd\u548c\u6027\u80fd\u9700\u6c42\u3002</p>"},{"location":"core-modules/llm-processing/","title":"LLM \u5904\u7406\u6a21\u5757","text":"<p>LLM \u5904\u7406\u6a21\u5757\u662f DocuSnap-Backend \u7cfb\u7edf\u7684\u6838\u5fc3\u667a\u80fd\u7ec4\u4ef6\uff0c\u8d1f\u8d23\u6587\u672c\u5206\u6790\u548c\u4fe1\u606f\u63d0\u53d6\u3002\u8be5\u6a21\u5757\u4e0e\u667a\u8c31 AI \u7684\u5927\u8bed\u8a00\u6a21\u578b\u670d\u52a1\u4ea4\u4e92\uff0c\u901a\u8fc7\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u63d0\u793a\u5de5\u7a0b\uff0c\u5b9e\u73b0\u5bf9\u6587\u6863\u5185\u5bb9\u7684\u6df1\u5ea6\u7406\u89e3\u548c\u7ed3\u6784\u5316\u5904\u7406\u3002</p>"},{"location":"core-modules/llm-processing/#_1","title":"\u6a21\u5757\u804c\u8d23","text":"<p>LLM \u5904\u7406\u6a21\u5757\u7684\u4e3b\u8981\u804c\u8d23\u5305\u62ec\uff1a</p> <ol> <li>\u63d0\u793a\u6784\u5efa\uff1a\u6839\u636e\u4efb\u52a1\u7c7b\u578b\u548c OCR \u7ed3\u679c\u6784\u5efa\u9002\u5f53\u7684\u63d0\u793a\uff08Prompt\uff09</li> <li>LLM API \u8c03\u7528\uff1a\u4e0e\u667a\u8c31 AI \u7684 LLM \u670d\u52a1\u4ea4\u4e92\uff0c\u53d1\u9001\u63d0\u793a\u5e76\u63a5\u6536\u54cd\u5e94</li> <li>\u54cd\u5e94\u89e3\u6790\uff1a\u89e3\u6790 LLM \u8fd4\u56de\u7684\u54cd\u5e94\uff0c\u63d0\u53d6\u6709\u7528\u4fe1\u606f</li> <li>\u7ed3\u679c\u7ed3\u6784\u5316\uff1a\u5c06 LLM \u5206\u6790\u7ed3\u679c\u8f6c\u6362\u4e3a\u7ed3\u6784\u5316\u6570\u636e\u683c\u5f0f</li> <li>\u9519\u8bef\u5904\u7406\uff1a\u5904\u7406 LLM \u8c03\u7528\u8fc7\u7a0b\u4e2d\u7684\u9519\u8bef\u548c\u5f02\u5e38\u60c5\u51b5</li> </ol>"},{"location":"core-modules/llm-processing/#_2","title":"\u6838\u5fc3\u7ec4\u4ef6","text":""},{"location":"core-modules/llm-processing/#1","title":"1. \u63d0\u793a\u6784\u5efa\u5668","text":"<p>\u63d0\u793a\u6784\u5efa\u5668\u8d1f\u8d23\u6839\u636e\u4efb\u52a1\u7c7b\u578b\u548c OCR \u7ed3\u679c\u6784\u5efa\u9002\u5f53\u7684\u63d0\u793a\uff0c\u5f15\u5bfc LLM \u8fdb\u884c\u51c6\u786e\u7684\u6587\u672c\u5206\u6790\u548c\u4fe1\u606f\u63d0\u53d6\u3002\u7cfb\u7edf\u4e3a\u4e0d\u540c\u7c7b\u578b\u7684\u4efb\u52a1\uff08\u6587\u6863\u5904\u7406\u3001\u8868\u5355\u5904\u7406\u3001\u8868\u5355\u586b\u5145\uff09\u8bbe\u8ba1\u4e86\u4e13\u95e8\u7684\u63d0\u793a\u6a21\u677f\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def build_document_prompt(ocr_text):\n    \"\"\"\u6784\u5efa\u6587\u6863\u5904\u7406\u7684\u63d0\u793a\"\"\"\n    # \u4ece prompts.py \u83b7\u53d6\u6587\u6863\u5904\u7406\u63d0\u793a\u6a21\u677f\n    prompt_template = DOCUMENT_PROMPT_TEMPLATE\n\n    # \u5c06 OCR \u6587\u672c\u63d2\u5165\u63d0\u793a\u6a21\u677f\n    prompt = prompt_template.format(document_text='\\n'.join(ocr_text))\n\n    return prompt\n\ndef build_form_prompt(ocr_text):\n    \"\"\"\u6784\u5efa\u8868\u5355\u5904\u7406\u7684\u63d0\u793a\"\"\"\n    # \u4ece prompts.py \u83b7\u53d6\u8868\u5355\u5904\u7406\u63d0\u793a\u6a21\u677f\n    prompt_template = FORM_PROMPT_TEMPLATE\n\n    # \u5c06 OCR \u6587\u672c\u63d2\u5165\u63d0\u793a\u6a21\u677f\n    prompt = prompt_template.format(form_text='\\n'.join(ocr_text))\n\n    return prompt\n\ndef build_form_filling_prompt(ocr_text, user_data):\n    \"\"\"\u6784\u5efa\u8868\u5355\u586b\u5145\u7684\u63d0\u793a\"\"\"\n    # \u4ece prompts.py \u83b7\u53d6\u8868\u5355\u586b\u5145\u63d0\u793a\u6a21\u677f\n    prompt_template = FORM_FILLING_PROMPT_TEMPLATE\n\n    # \u5c06 OCR \u6587\u672c\u548c\u7528\u6237\u6570\u636e\u63d2\u5165\u63d0\u793a\u6a21\u677f\n    prompt = prompt_template.format(\n        form_text='\\n'.join(ocr_text),\n        user_data=json.dumps(user_data, ensure_ascii=False)\n    )\n\n    return prompt\n</code></pre>"},{"location":"core-modules/llm-processing/#2-llm-api","title":"2. LLM API \u5ba2\u6237\u7aef","text":"<p>LLM API \u5ba2\u6237\u7aef\u8d1f\u8d23\u4e0e\u667a\u8c31 AI \u7684 LLM \u670d\u52a1\u4ea4\u4e92\uff0c\u53d1\u9001\u63d0\u793a\u5e76\u63a5\u6536\u54cd\u5e94\u3002\u7cfb\u7edf\u4f7f\u7528 <code>zhipuai</code> \u5e93\u8c03\u7528\u667a\u8c31 AI \u7684 API\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def call_llm_api(prompt, max_tokens=4096):\n    \"\"\"\u8c03\u7528 LLM API \u5904\u7406\u63d0\u793a\"\"\"\n    try:\n        # \u8c03\u7528\u667a\u8c31 AI \u7684 API\n        response = zhipuai.model_api.invoke(\n            model=\"chatglm_pro\",\n            prompt=prompt,\n            temperature=0.7,\n            max_tokens=max_tokens\n        )\n\n        # \u68c0\u67e5\u54cd\u5e94\u72b6\u6001\n        if response['code'] == 200:\n            return response['data']['choices'][0]['content']\n        else:\n            raise Exception(f\"LLM API \u8c03\u7528\u5931\u8d25: {response['msg']}\")\n    except Exception as e:\n        raise Exception(f\"LLM API \u8c03\u7528\u5f02\u5e38: {str(e)}\")\n</code></pre>"},{"location":"core-modules/llm-processing/#3","title":"3. \u54cd\u5e94\u89e3\u6790\u5668","text":"<p>\u54cd\u5e94\u89e3\u6790\u5668\u8d1f\u8d23\u89e3\u6790 LLM \u8fd4\u56de\u7684\u54cd\u5e94\uff0c\u63d0\u53d6\u6709\u7528\u4fe1\u606f\uff0c\u5e76\u5904\u7406\u53ef\u80fd\u7684\u683c\u5f0f\u95ee\u9898\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def parse_document_result(llm_response):\n    \"\"\"\u89e3\u6790\u6587\u6863\u5904\u7406\u7684 LLM \u54cd\u5e94\"\"\"\n    try:\n        # \u5c1d\u8bd5\u89e3\u6790 JSON \u683c\u5f0f\u7684\u54cd\u5e94\n        if llm_response.strip().startswith('{') and llm_response.strip().endswith('}'):\n            return json.loads(llm_response)\n\n        # \u5c1d\u8bd5\u63d0\u53d6 JSON \u90e8\u5206\n        json_match = re.search(r'```json\\s*([\\s\\S]*?)\\s*```', llm_response)\n        if json_match:\n            json_str = json_match.group(1)\n            return json.loads(json_str)\n\n        # \u5982\u679c\u65e0\u6cd5\u89e3\u6790\u4e3a JSON\uff0c\u8fd4\u56de\u539f\u59cb\u6587\u672c\n        return {\"text\": llm_response, \"parsed\": False}\n    except Exception as e:\n        # \u89e3\u6790\u5931\u8d25\uff0c\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u548c\u539f\u59cb\u54cd\u5e94\n        return {\n            \"error\": f\"\u89e3\u6790\u5931\u8d25: {str(e)}\",\n            \"raw_response\": llm_response,\n            \"parsed\": False\n        }\n\ndef parse_form_result(llm_response):\n    \"\"\"\u89e3\u6790\u8868\u5355\u5904\u7406\u7684 LLM \u54cd\u5e94\"\"\"\n    # \u7c7b\u4f3c\u4e8e parse_document_result\uff0c\u4f46\u9488\u5bf9\u8868\u5355\u7ed3\u679c\n    # ...\n\ndef parse_form_filling_result(llm_response):\n    \"\"\"\u89e3\u6790\u8868\u5355\u586b\u5145\u7684 LLM \u54cd\u5e94\"\"\"\n    # \u7c7b\u4f3c\u4e8e parse_document_result\uff0c\u4f46\u9488\u5bf9\u8868\u5355\u586b\u5145\u7ed3\u679c\n    # ...\n</code></pre>"},{"location":"core-modules/llm-processing/#4","title":"4. \u7ed3\u679c\u683c\u5f0f\u5316\u5668","text":"<p>\u7ed3\u679c\u683c\u5f0f\u5316\u5668\u8d1f\u8d23\u5c06\u89e3\u6790\u540e\u7684 LLM \u54cd\u5e94\u8f6c\u6362\u4e3a\u7cfb\u7edf\u9700\u8981\u7684\u7ed3\u6784\u5316\u6570\u636e\u683c\u5f0f\uff0c\u786e\u4fdd\u8f93\u51fa\u4e00\u81f4\u6027\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def format_document_result(parsed_result):\n    \"\"\"\u683c\u5f0f\u5316\u6587\u6863\u5904\u7406\u7ed3\u679c\"\"\"\n    # \u786e\u4fdd\u7ed3\u679c\u5305\u542b\u5fc5\u8981\u7684\u5b57\u6bb5\n    result = {\n        \"title\": parsed_result.get(\"title\", \"\u672a\u77e5\u6807\u9898\"),\n        \"content\": parsed_result.get(\"content\", {}),\n        \"metadata\": {\n            \"processed_at\": int(time.time()),\n            \"source\": \"document_processing\"\n        }\n    }\n\n    return result\n\ndef format_form_result(parsed_result):\n    \"\"\"\u683c\u5f0f\u5316\u8868\u5355\u5904\u7406\u7ed3\u679c\"\"\"\n    # \u7c7b\u4f3c\u4e8e format_document_result\uff0c\u4f46\u9488\u5bf9\u8868\u5355\u7ed3\u679c\n    # ...\n\ndef format_form_filling_result(parsed_result):\n    \"\"\"\u683c\u5f0f\u5316\u8868\u5355\u586b\u5145\u7ed3\u679c\"\"\"\n    # \u7c7b\u4f3c\u4e8e format_document_result\uff0c\u4f46\u9488\u5bf9\u8868\u5355\u586b\u5145\u7ed3\u679c\n    # ...\n</code></pre>"},{"location":"core-modules/llm-processing/#_3","title":"\u63d0\u793a\u5de5\u7a0b","text":"<p>LLM \u5904\u7406\u6a21\u5757\u7684\u6838\u5fc3\u662f\u63d0\u793a\u5de5\u7a0b\uff08Prompt Engineering\uff09\uff0c\u901a\u8fc7\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u63d0\u793a\u6a21\u677f\u5f15\u5bfc LLM \u8fdb\u884c\u51c6\u786e\u7684\u6587\u672c\u5206\u6790\u548c\u4fe1\u606f\u63d0\u53d6\u3002\u7cfb\u7edf\u4e3a\u4e09\u79cd\u4e3b\u8981\u4efb\u52a1\u7c7b\u578b\u8bbe\u8ba1\u4e86\u4e13\u95e8\u7684\u63d0\u793a\u6a21\u677f\uff1a</p>"},{"location":"core-modules/llm-processing/#1_1","title":"1. \u6587\u6863\u5904\u7406\u63d0\u793a","text":"<p>\u6587\u6863\u5904\u7406\u63d0\u793a\u5f15\u5bfc LLM \u5206\u6790\u6587\u6863\u5185\u5bb9\uff0c\u8bc6\u522b\u6807\u9898\u3001\u6bb5\u843d\u3001\u5217\u8868\u7b49\u7ed3\u6784\uff0c\u5e76\u63d0\u53d6\u5173\u952e\u4fe1\u606f\u3002</p> <p>\u63d0\u793a\u6a21\u677f\u793a\u4f8b\uff1a</p> <pre><code>\u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u6587\u6863\u5206\u6790\u52a9\u624b\u3002\u8bf7\u5206\u6790\u4ee5\u4e0b\u6587\u6863\u5185\u5bb9\uff0c\u63d0\u53d6\u5173\u952e\u4fe1\u606f\u5e76\u6309\u7167\u6307\u5b9a\u683c\u5f0f\u8f93\u51fa\u3002\n\n\u6587\u6863\u5185\u5bb9\uff1a\n{document_text}\n\n\u8bf7\u63d0\u4f9b\u4ee5\u4e0b\u4fe1\u606f\uff1a\n1. \u6587\u6863\u6807\u9898\n2. \u6587\u6863\u7c7b\u578b\uff08\u5982\uff1a\u62a5\u544a\u3001\u5408\u540c\u3001\u901a\u77e5\u7b49\uff09\n3. \u4e3b\u8981\u5185\u5bb9\u6458\u8981\n4. \u5173\u952e\u65e5\u671f\u548c\u6570\u5b57\n5. \u91cd\u8981\u4eba\u540d\u548c\u673a\u6784\n\n\u8bf7\u4ee5JSON\u683c\u5f0f\u8f93\u51fa\u7ed3\u679c\uff0c\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\uff1a\n- title: \u6587\u6863\u6807\u9898\n- document_type: \u6587\u6863\u7c7b\u578b\n- summary: \u5185\u5bb9\u6458\u8981\uff08100-200\u5b57\uff09\n- key_dates: \u5173\u952e\u65e5\u671f\u5217\u8868\uff0c\u6bcf\u9879\u5305\u542bdate\uff08\u65e5\u671f\uff09\u548ccontext\uff08\u4e0a\u4e0b\u6587\uff09\n- key_figures: \u5173\u952e\u6570\u5b57\u5217\u8868\uff0c\u6bcf\u9879\u5305\u542bfigure\uff08\u6570\u5b57\uff09\u548ccontext\uff08\u4e0a\u4e0b\u6587\uff09\n- key_entities: \u91cd\u8981\u4eba\u540d\u548c\u673a\u6784\u5217\u8868\uff0c\u6bcf\u9879\u5305\u542bname\uff08\u540d\u79f0\uff09\u548crole\uff08\u89d2\u8272\uff09\n</code></pre>"},{"location":"core-modules/llm-processing/#2","title":"2. \u8868\u5355\u5904\u7406\u63d0\u793a","text":"<p>\u8868\u5355\u5904\u7406\u63d0\u793a\u5f15\u5bfc LLM \u8bc6\u522b\u8868\u5355\u7ed3\u6784\uff0c\u63d0\u53d6\u5b57\u6bb5\u540d\u79f0\u548c\u5bf9\u5e94\u7684\u503c\u3002</p> <p>\u63d0\u793a\u6a21\u677f\u793a\u4f8b\uff1a</p> <pre><code>\u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u8868\u5355\u5206\u6790\u52a9\u624b\u3002\u8bf7\u5206\u6790\u4ee5\u4e0b\u8868\u5355\u5185\u5bb9\uff0c\u63d0\u53d6\u6240\u6709\u5b57\u6bb5\u53ca\u5176\u503c\u3002\n\n\u8868\u5355\u5185\u5bb9\uff1a\n{form_text}\n\n\u8bf7\u6267\u884c\u4ee5\u4e0b\u4efb\u52a1\uff1a\n1. \u8bc6\u522b\u8868\u5355\u7684\u7c7b\u578b\u548c\u6807\u9898\n2. \u63d0\u53d6\u6240\u6709\u5b57\u6bb5\u540d\u79f0\u548c\u5bf9\u5e94\u7684\u503c\n3. \u5bf9\u5b57\u6bb5\u8fdb\u884c\u5206\u7c7b\uff08\u4e2a\u4eba\u4fe1\u606f\u3001\u8054\u7cfb\u65b9\u5f0f\u3001\u5176\u4ed6\u4fe1\u606f\u7b49\uff09\n\n\u8bf7\u4ee5JSON\u683c\u5f0f\u8f93\u51fa\u7ed3\u679c\uff0c\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\uff1a\n- form_title: \u8868\u5355\u6807\u9898\n- form_type: \u8868\u5355\u7c7b\u578b\n- fields: \u5b57\u6bb5\u5217\u8868\uff0c\u6bcf\u4e2a\u5b57\u6bb5\u5305\u542b\uff1a\n  - name: \u5b57\u6bb5\u540d\u79f0\n  - value: \u5b57\u6bb5\u503c\n  - category: \u5b57\u6bb5\u7c7b\u522b\n- metadata: \u8868\u5355\u5143\u6570\u636e\uff0c\u5305\u542b\u8868\u5355ID\u3001\u65e5\u671f\u7b49\u4fe1\u606f\uff08\u5982\u679c\u6709\uff09\n</code></pre>"},{"location":"core-modules/llm-processing/#3_1","title":"3. \u8868\u5355\u586b\u5145\u63d0\u793a","text":"<p>\u8868\u5355\u586b\u5145\u63d0\u793a\u5f15\u5bfc LLM \u5c06\u7528\u6237\u63d0\u4f9b\u7684\u4fe1\u606f\u4e0e\u8868\u5355\u5b57\u6bb5\u5339\u914d\uff0c\u751f\u6210\u586b\u5145\u540e\u7684\u8868\u5355\u6570\u636e\u3002</p> <p>\u63d0\u793a\u6a21\u677f\u793a\u4f8b\uff1a</p> <pre><code>\u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u8868\u5355\u586b\u5145\u52a9\u624b\u3002\u8bf7\u6839\u636e\u7528\u6237\u63d0\u4f9b\u7684\u4fe1\u606f\uff0c\u586b\u5145\u4ee5\u4e0b\u8868\u5355\u3002\n\n\u8868\u5355\u5185\u5bb9\uff1a\n{form_text}\n\n\u7528\u6237\u4fe1\u606f\uff1a\n{user_data}\n\n\u8bf7\u6267\u884c\u4ee5\u4e0b\u4efb\u52a1\uff1a\n1. \u5206\u6790\u8868\u5355\u7ed3\u6784\uff0c\u8bc6\u522b\u6240\u6709\u9700\u8981\u586b\u5199\u7684\u5b57\u6bb5\n2. \u5c06\u7528\u6237\u63d0\u4f9b\u7684\u4fe1\u606f\u4e0e\u8868\u5355\u5b57\u6bb5\u8fdb\u884c\u5339\u914d\n3. \u5bf9\u4e8e\u7f3a\u5931\u7684\u5fc5\u586b\u5b57\u6bb5\uff0c\u6807\u8bb0\u4e3a\"\u7f3a\u5931\"\n4. \u5bf9\u4e8e\u53ef\u4ee5\u63a8\u65ad\u7684\u5b57\u6bb5\uff0c\u5c1d\u8bd5\u5408\u7406\u63a8\u65ad\n\n\u8bf7\u4ee5JSON\u683c\u5f0f\u8f93\u51fa\u7ed3\u679c\uff0c\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\uff1a\n- form_title: \u8868\u5355\u6807\u9898\n- filled_fields: \u5df2\u586b\u5145\u7684\u5b57\u6bb5\u5217\u8868\uff0c\u6bcf\u4e2a\u5b57\u6bb5\u5305\u542b\uff1a\n  - name: \u5b57\u6bb5\u540d\u79f0\n  - value: \u586b\u5145\u7684\u503c\n  - source: \u503c\u7684\u6765\u6e90\uff08\"user_provided\", \"inferred\", \"default\"\uff09\n- missing_fields: \u7f3a\u5931\u7684\u5fc5\u586b\u5b57\u6bb5\u5217\u8868\n- complete: \u8868\u5355\u662f\u5426\u5b8c\u6574\u586b\u5199\uff08\u5e03\u5c14\u503c\uff09\n</code></pre>"},{"location":"core-modules/llm-processing/#_4","title":"\u5de5\u4f5c\u6d41\u7a0b","text":"<p>LLM \u5904\u7406\u6a21\u5757\u7684\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u63a5\u6536\u8f93\u5165\uff1a</li> <li>\u4ece\u4efb\u52a1\u5904\u7406\u6a21\u5757\u63a5\u6536 OCR \u5904\u7406\u540e\u7684\u6587\u672c</li> <li> <p>\u6839\u636e\u4efb\u52a1\u7c7b\u578b\u786e\u5b9a\u5904\u7406\u7b56\u7565</p> </li> <li> <p>\u6784\u5efa\u63d0\u793a\uff1a</p> </li> <li>\u9009\u62e9\u9002\u5f53\u7684\u63d0\u793a\u6a21\u677f</li> <li>\u5c06 OCR \u6587\u672c\u63d2\u5165\u63d0\u793a\u6a21\u677f</li> <li> <p>\u6dfb\u52a0\u4efb\u52a1\u7279\u5b9a\u7684\u6307\u4ee4\u548c\u683c\u5f0f\u8981\u6c42</p> </li> <li> <p>\u8c03\u7528 LLM API\uff1a</p> </li> <li>\u53d1\u9001\u63d0\u793a\u5230\u667a\u8c31 AI \u7684 LLM \u670d\u52a1</li> <li>\u8bbe\u7f6e\u9002\u5f53\u7684\u53c2\u6570\uff08\u6e29\u5ea6\u3001\u6700\u5927\u4ee4\u724c\u6570\u7b49\uff09</li> <li> <p>\u63a5\u6536 LLM \u7684\u54cd\u5e94</p> </li> <li> <p>\u89e3\u6790\u54cd\u5e94\uff1a</p> </li> <li>\u89e3\u6790 LLM \u8fd4\u56de\u7684\u6587\u672c</li> <li>\u63d0\u53d6 JSON \u6216\u5176\u4ed6\u7ed3\u6784\u5316\u6570\u636e</li> <li> <p>\u5904\u7406\u53ef\u80fd\u7684\u683c\u5f0f\u95ee\u9898</p> </li> <li> <p>\u683c\u5f0f\u5316\u7ed3\u679c\uff1a</p> </li> <li>\u5c06\u89e3\u6790\u540e\u7684\u7ed3\u679c\u8f6c\u6362\u4e3a\u6807\u51c6\u683c\u5f0f</li> <li>\u786e\u4fdd\u8f93\u51fa\u4e00\u81f4\u6027</li> <li> <p>\u6dfb\u52a0\u5143\u6570\u636e\u548c\u5904\u7406\u4fe1\u606f</p> </li> <li> <p>\u8fd4\u56de\u7ed3\u679c\uff1a</p> </li> <li>\u5c06\u683c\u5f0f\u5316\u540e\u7684\u7ed3\u679c\u8fd4\u56de\u7ed9\u4efb\u52a1\u5904\u7406\u6a21\u5757</li> <li>\u5904\u7406\u548c\u62a5\u544a\u4efb\u4f55\u9519\u8bef</li> </ol>"},{"location":"core-modules/llm-processing/#llm_1","title":"\u4e0e LLM \u670d\u52a1\u7684\u96c6\u6210","text":"<p>DocuSnap-Backend \u4f7f\u7528\u667a\u8c31 AI \u7684 LLM \u670d\u52a1\u8fdb\u884c\u6587\u672c\u5206\u6790\u548c\u4fe1\u606f\u63d0\u53d6\u3002\u9009\u62e9\u667a\u8c31 AI \u7684\u4e3b\u8981\u539f\u56e0\u5305\u62ec\uff1a</p> <ol> <li>\u4e2d\u6587\u5904\u7406\u80fd\u529b\uff1a\u667a\u8c31 AI \u7684\u6a21\u578b\u5bf9\u4e2d\u6587\u6709\u8f83\u597d\u7684\u4f18\u5316\uff0c\u9002\u5408\u5904\u7406\u4e2d\u6587\u6587\u6863\u548c\u8868\u5355</li> <li>\u7ed3\u6784\u5316\u8f93\u51fa\u80fd\u529b\uff1a\u652f\u6301\u751f\u6210\u7ed3\u6784\u5316\u7684 JSON \u8f93\u51fa\uff0c\u9002\u5408\u63d0\u53d6\u8868\u5355\u5b57\u6bb5\u548c\u503c</li> <li>API \u63a5\u53e3\u548c\u96c6\u6210\u4fbf\u5229\u6027\uff1a\u63d0\u4f9b\u7b80\u6d01\u6613\u7528\u7684 API \u63a5\u53e3\u548c Python SDK</li> </ol> <p>\u96c6\u6210\u65b9\u5f0f\u662f\u901a\u8fc7 <code>zhipuai</code> \u5e93\u8c03\u7528\u667a\u8c31 AI \u7684 API\uff0c\u53d1\u9001\u63d0\u793a\u5e76\u63a5\u6536\u54cd\u5e94\u3002</p>"},{"location":"core-modules/llm-processing/#_5","title":"\u9519\u8bef\u5904\u7406","text":"<p>LLM \u5904\u7406\u6a21\u5757\u5b9e\u73b0\u4e86\u5168\u9762\u7684\u9519\u8bef\u5904\u7406\u673a\u5236\uff1a</p> <ol> <li>API \u8c03\u7528\u9519\u8bef\uff1a\u5904\u7406 LLM \u670d\u52a1\u4e0d\u53ef\u7528\u6216\u54cd\u5e94\u9519\u8bef\u7684\u60c5\u51b5</li> <li>\u54cd\u5e94\u89e3\u6790\u9519\u8bef\uff1a\u5904\u7406 LLM \u54cd\u5e94\u683c\u5f0f\u4e0d\u7b26\u5408\u9884\u671f\u7684\u60c5\u51b5</li> <li>\u8d85\u65f6\u5904\u7406\uff1a\u5904\u7406 LLM \u670d\u52a1\u54cd\u5e94\u8d85\u65f6\u7684\u60c5\u51b5</li> <li>\u7ed3\u679c\u9a8c\u8bc1\uff1a\u9a8c\u8bc1 LLM \u7ed3\u679c\u662f\u5426\u7b26\u5408\u9884\u671f\u683c\u5f0f\u548c\u5185\u5bb9\u8981\u6c42</li> </ol>"},{"location":"core-modules/llm-processing/#_6","title":"\u6a21\u5757\u63a5\u53e3","text":"<p>LLM \u5904\u7406\u6a21\u5757\u63d0\u4f9b\u4ee5\u4e0b\u4e3b\u8981\u63a5\u53e3\uff1a</p> <ol> <li>\u5bf9\u5916\u63a5\u53e3\uff1a</li> <li> <p><code>process_with_llm</code>\uff1a\u4f7f\u7528 LLM \u5904\u7406\u6587\u672c\u5e76\u8fd4\u56de\u7ed3\u679c</p> </li> <li> <p>\u5bf9\u5185\u63a5\u53e3\uff1a</p> </li> <li><code>build_document_prompt</code>\uff1a\u6784\u5efa\u6587\u6863\u5904\u7406\u63d0\u793a</li> <li><code>build_form_prompt</code>\uff1a\u6784\u5efa\u8868\u5355\u5904\u7406\u63d0\u793a</li> <li><code>build_form_filling_prompt</code>\uff1a\u6784\u5efa\u8868\u5355\u586b\u5145\u63d0\u793a</li> <li><code>call_llm_api</code>\uff1a\u8c03\u7528 LLM API</li> <li><code>parse_document_result</code>\uff1a\u89e3\u6790\u6587\u6863\u5904\u7406\u7ed3\u679c</li> <li><code>parse_form_result</code>\uff1a\u89e3\u6790\u8868\u5355\u5904\u7406\u7ed3\u679c</li> <li><code>parse_form_filling_result</code>\uff1a\u89e3\u6790\u8868\u5355\u586b\u5145\u7ed3\u679c</li> </ol>"},{"location":"core-modules/llm-processing/#_7","title":"\u6027\u80fd\u4f18\u5316","text":"<p>LLM \u5904\u7406\u6a21\u5757\u7684\u6027\u80fd\u4f18\u5316\u63aa\u65bd\u5305\u62ec\uff1a</p> <ol> <li>\u63d0\u793a\u4f18\u5316\uff1a\u7cbe\u5fc3\u8bbe\u8ba1\u63d0\u793a\u6a21\u677f\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u4ee4\u724c\u6d88\u8017</li> <li>\u53c2\u6570\u8c03\u4f18\uff1a\u6839\u636e\u4efb\u52a1\u9700\u6c42\u8c03\u6574 LLM \u8c03\u7528\u53c2\u6570\uff08\u6e29\u5ea6\u3001\u6700\u5927\u4ee4\u724c\u6570\u7b49\uff09</li> <li>\u54cd\u5e94\u7f13\u5b58\uff1a\u901a\u8fc7\u4efb\u52a1\u5904\u7406\u6a21\u5757\u7684\u7f13\u5b58\u673a\u5236\uff0c\u907f\u514d\u91cd\u590d\u8c03\u7528 LLM API</li> <li>\u9519\u8bef\u91cd\u8bd5\uff1a\u5bf9\u4e34\u65f6\u6027\u9519\u8bef\u5b9e\u73b0\u81ea\u52a8\u91cd\u8bd5\u673a\u5236</li> </ol>"},{"location":"core-modules/llm-processing/#_8","title":"\u6269\u5c55\u6027","text":"<p>LLM \u5904\u7406\u6a21\u5757\u7684\u6269\u5c55\u6027\u4f53\u73b0\u5728\uff1a</p> <ol> <li>\u652f\u6301\u591a\u79cd LLM \u670d\u52a1\uff1a\u8bbe\u8ba1\u652f\u6301\u672a\u6765\u96c6\u6210\u5176\u4ed6 LLM \u670d\u52a1</li> <li>\u53ef\u6269\u5c55\u7684\u63d0\u793a\u6a21\u677f\uff1a\u53ef\u4ee5\u8f7b\u677e\u6dfb\u52a0\u548c\u4fee\u6539\u63d0\u793a\u6a21\u677f\uff0c\u652f\u6301\u65b0\u7684\u4efb\u52a1\u7c7b\u578b</li> <li>\u7ed3\u679c\u540e\u5904\u7406\u6269\u5c55\uff1a\u53ef\u4ee5\u6dfb\u52a0\u66f4\u591a\u7ed3\u679c\u9a8c\u8bc1\u548c\u4f18\u5316\u529f\u80fd</li> <li>\u63d0\u793a\u7b56\u7565\u4f18\u5316\uff1a\u53ef\u4ee5\u5b9e\u73b0\u66f4\u590d\u6742\u7684\u63d0\u793a\u7b56\u7565\uff0c\u5982\u591a\u8f6e\u5bf9\u8bdd\u6216\u94fe\u5f0f\u601d\u8003</li> </ol> <p>\u901a\u8fc7\u8fd9\u4e9b\u8bbe\u8ba1\u548c\u5b9e\u73b0\uff0cLLM \u5904\u7406\u6a21\u5757\u4e3a DocuSnap-Backend \u7cfb\u7edf\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u6587\u672c\u5206\u6790\u548c\u4fe1\u606f\u63d0\u53d6\u80fd\u529b\uff0c\u662f\u7cfb\u7edf\u667a\u80fd\u5904\u7406\u6587\u6863\u548c\u8868\u5355\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002</p>"},{"location":"core-modules/ocr-processing/","title":"OCR \u5904\u7406\u6a21\u5757","text":"<p>OCR \u5904\u7406\u6a21\u5757\u662f DocuSnap-Backend \u7cfb\u7edf\u7684\u5173\u952e\u7ec4\u4ef6\uff0c\u8d1f\u8d23\u5c06\u6587\u6863\u548c\u8868\u5355\u56fe\u50cf\u8f6c\u6362\u4e3a\u6587\u672c\u5185\u5bb9\u3002\u8be5\u6a21\u5757\u4e0e\u5916\u90e8 OCR \u670d\u52a1\uff08CnOCR\uff09\u4ea4\u4e92\uff0c\u5b9e\u73b0\u9ad8\u6548\u51c6\u786e\u7684\u6587\u672c\u8bc6\u522b\u529f\u80fd\u3002</p>"},{"location":"core-modules/ocr-processing/#_1","title":"\u6a21\u5757\u804c\u8d23","text":"<p>OCR \u5904\u7406\u6a21\u5757\u7684\u4e3b\u8981\u804c\u8d23\u5305\u62ec\uff1a</p> <ol> <li>\u56fe\u50cf\u9884\u5904\u7406\uff1a\u5904\u7406\u548c\u4f18\u5316\u8f93\u5165\u56fe\u50cf\uff0c\u63d0\u9ad8 OCR \u8bc6\u522b\u51c6\u786e\u7387</li> <li>OCR \u670d\u52a1\u8c03\u7528\uff1a\u4e0e CnOCR \u670d\u52a1\u4ea4\u4e92\uff0c\u53d1\u9001\u56fe\u50cf\u5e76\u63a5\u6536\u8bc6\u522b\u7ed3\u679c</li> <li>\u5e76\u884c\u5904\u7406\uff1a\u5e76\u884c\u5904\u7406\u591a\u4e2a\u56fe\u50cf\uff0c\u63d0\u9ad8\u5904\u7406\u6548\u7387</li> <li>\u7ed3\u679c\u6574\u5408\uff1a\u5408\u5e76\u548c\u6574\u7406\u591a\u4e2a\u56fe\u50cf\u7684 OCR \u7ed3\u679c</li> <li>\u9519\u8bef\u5904\u7406\uff1a\u5904\u7406 OCR \u8fc7\u7a0b\u4e2d\u7684\u9519\u8bef\u548c\u5f02\u5e38\u60c5\u51b5</li> </ol>"},{"location":"core-modules/ocr-processing/#_2","title":"\u6838\u5fc3\u7ec4\u4ef6","text":""},{"location":"core-modules/ocr-processing/#1","title":"1. \u56fe\u50cf\u5904\u7406\u5668","text":"<p>\u56fe\u50cf\u5904\u7406\u5668\u8d1f\u8d23\u5904\u7406\u548c\u4f18\u5316\u8f93\u5165\u56fe\u50cf\uff0c\u5305\u62ec\u89e3\u7801 Base64 \u56fe\u50cf\u3001\u683c\u5f0f\u8f6c\u6362\u548c\u57fa\u672c\u7684\u56fe\u50cf\u4f18\u5316\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def decode_image(base64_image):\n    \"\"\"\u5c06 Base64 \u7f16\u7801\u7684\u56fe\u50cf\u89e3\u7801\u4e3a\u4e8c\u8fdb\u5236\u6570\u636e\"\"\"\n    try:\n        # \u79fb\u9664\u53ef\u80fd\u7684 Base64 \u524d\u7f00\n        if ',' in base64_image:\n            base64_image = base64_image.split(',')[1]\n\n        # \u89e3\u7801 Base64 \u6570\u636e\n        image_data = base64.b64decode(base64_image)\n        return image_data\n    except Exception as e:\n        raise Exception(f\"\u56fe\u50cf\u89e3\u7801\u5931\u8d25: {str(e)}\")\n</code></pre>"},{"location":"core-modules/ocr-processing/#2-ocr","title":"2. OCR \u5ba2\u6237\u7aef","text":"<p>OCR \u5ba2\u6237\u7aef\u8d1f\u8d23\u4e0e CnOCR \u670d\u52a1\u4ea4\u4e92\uff0c\u53d1\u9001\u56fe\u50cf\u8bf7\u6c42\u5e76\u63a5\u6536\u8bc6\u522b\u7ed3\u679c\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def call_ocr_service(image_data):\n    \"\"\"\u8c03\u7528 OCR \u670d\u52a1\u5904\u7406\u56fe\u50cf\"\"\"\n    try:\n        # \u51c6\u5907 OCR \u8bf7\u6c42\u6570\u636e\n        files = {'image': ('image.png', image_data, 'image/png')}\n\n        # \u53d1\u9001\u8bf7\u6c42\u5230 OCR \u670d\u52a1\n        response = requests.post(\n            OCR_SERVICE_URL,\n            files=files,\n            timeout=OCR_TIMEOUT\n        )\n\n        # \u68c0\u67e5\u54cd\u5e94\u72b6\u6001\n        if response.status_code == 200:\n            return response.json()\n        else:\n            raise Exception(f\"OCR \u670d\u52a1\u8fd4\u56de\u9519\u8bef: {response.status_code}\")\n    except requests.RequestException as e:\n        raise Exception(f\"OCR \u670d\u52a1\u8c03\u7528\u5931\u8d25: {str(e)}\")\n</code></pre>"},{"location":"core-modules/ocr-processing/#3","title":"3. \u5e76\u884c\u5904\u7406\u63a7\u5236\u5668","text":"<p>\u5e76\u884c\u5904\u7406\u63a7\u5236\u5668\u8d1f\u8d23\u7ba1\u7406\u591a\u4e2a\u56fe\u50cf\u7684\u5e76\u884c\u5904\u7406\uff0c\u4f7f\u7528\u7ebf\u7a0b\u6c60\u63d0\u9ad8\u5904\u7406\u6548\u7387\uff0c\u540c\u65f6\u63a7\u5236\u5e76\u53d1\u5ea6\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def process_images(images):\n    \"\"\"\u5e76\u884c\u5904\u7406\u591a\u4e2a\u56fe\u50cf\"\"\"\n    # \u521b\u5efa\u4fe1\u53f7\u91cf\u63a7\u5236\u5e76\u53d1\u8bbf\u95ee OCR \u670d\u52a1\n    ocr_semaphore = threading.Semaphore(OCR_MAX_CONCURRENT)\n\n    # \u521b\u5efa\u7ebf\u7a0b\u6c60\n    with ThreadPoolExecutor(max_workers=OCR_MAX_CONCURRENT) as executor:\n        # \u63d0\u4ea4\u6240\u6709\u56fe\u50cf\u5904\u7406\u4efb\u52a1\n        future_to_image = {\n            executor.submit(process_single_image, image, ocr_semaphore): i \n            for i, image in enumerate(images)\n        }\n\n        # \u6536\u96c6\u7ed3\u679c\n        results = []\n        for future in as_completed(future_to_image):\n            try:\n                result = future.result()\n                results.append(result)\n            except Exception as e:\n                # \u8bb0\u5f55\u9519\u8bef\u4f46\u7ee7\u7eed\u5904\u7406\u5176\u4ed6\u56fe\u50cf\n                logging.error(f\"\u56fe\u50cf\u5904\u7406\u5931\u8d25: {str(e)}\")\n\n        # \u6309\u539f\u59cb\u987a\u5e8f\u6392\u5e8f\u7ed3\u679c\n        results.sort(key=lambda x: x['index'])\n        return [r['text'] for r in results]\n\ndef process_single_image(image, semaphore):\n    \"\"\"\u5904\u7406\u5355\u4e2a\u56fe\u50cf\uff0c\u4f7f\u7528\u4fe1\u53f7\u91cf\u63a7\u5236\u5e76\u53d1\"\"\"\n    # \u83b7\u53d6\u4fe1\u53f7\u91cf\u8bb8\u53ef\n    with semaphore:\n        try:\n            # \u89e3\u7801\u56fe\u50cf\n            image_data = decode_image(image)\n\n            # \u8c03\u7528 OCR \u670d\u52a1\n            ocr_result = call_ocr_service(image_data)\n\n            # \u63d0\u53d6\u6587\u672c\n            text = extract_text_from_ocr_result(ocr_result)\n\n            return {'text': text, 'index': images.index(image)}\n        except Exception as e:\n            raise Exception(f\"\u56fe\u50cf\u5904\u7406\u5931\u8d25: {str(e)}\")\n</code></pre>"},{"location":"core-modules/ocr-processing/#4","title":"4. \u7ed3\u679c\u5904\u7406\u5668","text":"<p>\u7ed3\u679c\u5904\u7406\u5668\u8d1f\u8d23\u5904\u7406\u548c\u6574\u7406 OCR \u8bc6\u522b\u7ed3\u679c\uff0c\u5305\u62ec\u63d0\u53d6\u6587\u672c\u3001\u5408\u5e76\u7ed3\u679c\u548c\u57fa\u672c\u7684\u6587\u672c\u6e05\u7406\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def extract_text_from_ocr_result(ocr_result):\n    \"\"\"\u4ece OCR \u7ed3\u679c\u4e2d\u63d0\u53d6\u6587\u672c\"\"\"\n    try:\n        # \u68c0\u67e5 OCR \u7ed3\u679c\u683c\u5f0f\n        if 'text' not in ocr_result:\n            raise Exception(\"OCR \u7ed3\u679c\u683c\u5f0f\u9519\u8bef\")\n\n        # \u63d0\u53d6\u6587\u672c\n        text = ocr_result['text']\n\n        # \u57fa\u672c\u6587\u672c\u6e05\u7406\n        text = text.strip()\n\n        return text\n    except Exception as e:\n        raise Exception(f\"OCR \u7ed3\u679c\u5904\u7406\u5931\u8d25: {str(e)}\")\n</code></pre>"},{"location":"core-modules/ocr-processing/#_3","title":"\u5de5\u4f5c\u6d41\u7a0b","text":"<p>OCR \u5904\u7406\u6a21\u5757\u7684\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u63a5\u6536\u8bf7\u6c42\uff1a</li> <li>\u4ece\u4efb\u52a1\u5904\u7406\u6a21\u5757\u63a5\u6536\u56fe\u50cf\u5904\u7406\u8bf7\u6c42</li> <li> <p>\u9a8c\u8bc1\u56fe\u50cf\u683c\u5f0f\u548c\u6570\u91cf</p> </li> <li> <p>\u5e76\u884c\u5904\u7406\uff1a</p> </li> <li>\u521b\u5efa\u7ebf\u7a0b\u6c60\u548c\u4fe1\u53f7\u91cf</li> <li>\u5e76\u884c\u63d0\u4ea4\u591a\u4e2a\u56fe\u50cf\u5904\u7406\u4efb\u52a1</li> <li> <p>\u63a7\u5236\u5bf9 OCR \u670d\u52a1\u7684\u5e76\u53d1\u8bbf\u95ee</p> </li> <li> <p>\u5355\u56fe\u50cf\u5904\u7406\uff1a</p> </li> <li>\u89e3\u7801 Base64 \u56fe\u50cf</li> <li>\u8c03\u7528 OCR \u670d\u52a1</li> <li> <p>\u63d0\u53d6\u548c\u6e05\u7406\u6587\u672c\u7ed3\u679c</p> </li> <li> <p>\u7ed3\u679c\u6574\u5408\uff1a</p> </li> <li>\u6536\u96c6\u6240\u6709\u56fe\u50cf\u7684\u5904\u7406\u7ed3\u679c</li> <li>\u6309\u539f\u59cb\u987a\u5e8f\u6392\u5e8f\u7ed3\u679c</li> <li> <p>\u5408\u5e76\u4e3a\u5b8c\u6574\u7684\u6587\u672c\u5185\u5bb9</p> </li> <li> <p>\u8fd4\u56de\u7ed3\u679c\uff1a</p> </li> <li>\u5c06\u5904\u7406\u7ed3\u679c\u8fd4\u56de\u7ed9\u4efb\u52a1\u5904\u7406\u6a21\u5757</li> <li>\u5904\u7406\u548c\u62a5\u544a\u4efb\u4f55\u9519\u8bef</li> </ol>"},{"location":"core-modules/ocr-processing/#ocr_1","title":"\u4e0e OCR \u670d\u52a1\u7684\u96c6\u6210","text":"<p>DocuSnap-Backend \u5c06 OCR \u529f\u80fd\u8bbe\u8ba1\u4e3a\u72ec\u7acb\u7684\u670d\u52a1\uff0c\u901a\u8fc7 HTTP API \u8fdb\u884c\u4ea4\u4e92\u3002\u8fd9\u79cd\u8bbe\u8ba1\u6709\u4ee5\u4e0b\u4f18\u52bf\uff1a</p> <ol> <li>\u670d\u52a1\u5206\u79bb\uff1aOCR \u5904\u7406\u4f5c\u4e3a\u72ec\u7acb\u670d\u52a1\uff0c\u51cf\u5c11\u6838\u5fc3\u5e94\u7528\u7684\u8d1f\u62c5</li> <li>\u72ec\u7acb\u6269\u5c55\uff1a\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u72ec\u7acb\u6269\u5c55 OCR \u670d\u52a1\u7684\u5bb9\u91cf</li> <li>\u6280\u672f\u9694\u79bb\uff1aOCR \u670d\u52a1\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u6280\u672f\u6808\u548c\u8d44\u6e90\u9700\u6c42</li> <li>\u5bb9\u9519\u8bbe\u8ba1\uff1aOCR \u670d\u52a1\u6545\u969c\u4e0d\u4f1a\u76f4\u63a5\u5f71\u54cd\u6838\u5fc3\u5e94\u7528\u7684\u5176\u4ed6\u529f\u80fd</li> </ol> <p>OCR \u670d\u52a1\u57fa\u4e8e CnOCR \u5b9e\u73b0\uff0c\u4e13\u4e3a\u4e2d\u6587\u6587\u672c\u8bc6\u522b\u4f18\u5316\uff0c\u63d0\u4f9b\u8f83\u9ad8\u7684\u8bc6\u522b\u51c6\u786e\u7387\u3002</p>"},{"location":"core-modules/ocr-processing/#_4","title":"\u5e76\u53d1\u63a7\u5236","text":"<p>OCR \u5904\u7406\u6a21\u5757\u5b9e\u73b0\u4e86\u4ee5\u4e0b\u5e76\u53d1\u63a7\u5236\u673a\u5236\uff1a</p> <ol> <li>\u7ebf\u7a0b\u6c60\uff1a\u4f7f\u7528 <code>ThreadPoolExecutor</code> \u63a7\u5236\u5e76\u884c\u5904\u7406\u7684\u7ebf\u7a0b\u6570\u91cf</li> <li>\u4fe1\u53f7\u91cf\uff1a\u4f7f\u7528 <code>Semaphore</code> \u63a7\u5236\u5bf9 OCR \u670d\u52a1\u7684\u5e76\u53d1\u8bbf\u95ee</li> <li>\u8d85\u65f6\u63a7\u5236\uff1a\u8bbe\u7f6e OCR \u670d\u52a1\u8c03\u7528\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u907f\u514d\u957f\u65f6\u95f4\u963b\u585e</li> <li>\u9519\u8bef\u9694\u79bb\uff1a\u5355\u4e2a\u56fe\u50cf\u5904\u7406\u5931\u8d25\u4e0d\u5f71\u54cd\u5176\u4ed6\u56fe\u50cf\u7684\u5904\u7406</li> </ol>"},{"location":"core-modules/ocr-processing/#_5","title":"\u9519\u8bef\u5904\u7406","text":"<p>OCR \u5904\u7406\u6a21\u5757\u5b9e\u73b0\u4e86\u5168\u9762\u7684\u9519\u8bef\u5904\u7406\u673a\u5236\uff1a</p> <ol> <li>\u56fe\u50cf\u89e3\u7801\u9519\u8bef\uff1a\u5904\u7406 Base64 \u89e3\u7801\u5931\u8d25\u7684\u60c5\u51b5</li> <li>\u670d\u52a1\u8c03\u7528\u9519\u8bef\uff1a\u5904\u7406 OCR \u670d\u52a1\u4e0d\u53ef\u7528\u6216\u54cd\u5e94\u9519\u8bef\u7684\u60c5\u51b5</li> <li>\u7ed3\u679c\u5904\u7406\u9519\u8bef\uff1a\u5904\u7406 OCR \u7ed3\u679c\u683c\u5f0f\u9519\u8bef\u6216\u5185\u5bb9\u7f3a\u5931\u7684\u60c5\u51b5</li> <li>\u8d85\u65f6\u5904\u7406\uff1a\u5904\u7406 OCR \u670d\u52a1\u54cd\u5e94\u8d85\u65f6\u7684\u60c5\u51b5</li> </ol>"},{"location":"core-modules/ocr-processing/#_6","title":"\u6a21\u5757\u63a5\u53e3","text":"<p>OCR \u5904\u7406\u6a21\u5757\u63d0\u4f9b\u4ee5\u4e0b\u4e3b\u8981\u63a5\u53e3\uff1a</p> <ol> <li>\u5bf9\u5916\u63a5\u53e3\uff1a</li> <li> <p><code>process_images</code>\uff1a\u5904\u7406\u591a\u4e2a\u56fe\u50cf\u5e76\u8fd4\u56de\u6587\u672c\u7ed3\u679c</p> </li> <li> <p>\u5bf9\u5185\u63a5\u53e3\uff1a</p> </li> <li><code>decode_image</code>\uff1a\u89e3\u7801 Base64 \u56fe\u50cf</li> <li><code>call_ocr_service</code>\uff1a\u8c03\u7528 OCR \u670d\u52a1</li> <li><code>process_single_image</code>\uff1a\u5904\u7406\u5355\u4e2a\u56fe\u50cf</li> <li><code>extract_text_from_ocr_result</code>\uff1a\u4ece OCR \u7ed3\u679c\u4e2d\u63d0\u53d6\u6587\u672c</li> </ol>"},{"location":"core-modules/ocr-processing/#_7","title":"\u6027\u80fd\u4f18\u5316","text":"<p>OCR \u5904\u7406\u6a21\u5757\u7684\u6027\u80fd\u4f18\u5316\u63aa\u65bd\u5305\u62ec\uff1a</p> <ol> <li>\u5e76\u884c\u5904\u7406\uff1a\u4f7f\u7528\u7ebf\u7a0b\u6c60\u5e76\u884c\u5904\u7406\u591a\u4e2a\u56fe\u50cf\uff0c\u63d0\u9ad8\u541e\u5410\u91cf</li> <li>\u5e76\u53d1\u63a7\u5236\uff1a\u4f7f\u7528\u4fe1\u53f7\u91cf\u63a7\u5236\u5e76\u53d1\u5ea6\uff0c\u907f\u514d\u8fc7\u8f7d OCR \u670d\u52a1</li> <li>\u8d85\u65f6\u8bbe\u7f6e\uff1a\u8bbe\u7f6e\u9002\u5f53\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u907f\u514d\u957f\u65f6\u95f4\u7b49\u5f85\u65e0\u54cd\u5e94\u7684\u8bf7\u6c42</li> <li>\u7ed3\u679c\u7f13\u5b58\uff1a\u901a\u8fc7\u4efb\u52a1\u5904\u7406\u6a21\u5757\u7684\u7f13\u5b58\u673a\u5236\uff0c\u907f\u514d\u91cd\u590d\u5904\u7406\u76f8\u540c\u7684\u56fe\u50cf</li> </ol>"},{"location":"core-modules/ocr-processing/#_8","title":"\u6269\u5c55\u6027","text":"<p>OCR \u5904\u7406\u6a21\u5757\u7684\u6269\u5c55\u6027\u4f53\u73b0\u5728\uff1a</p> <ol> <li>\u652f\u6301\u591a\u79cd OCR \u670d\u52a1\uff1a\u8bbe\u8ba1\u652f\u6301\u672a\u6765\u96c6\u6210\u5176\u4ed6 OCR \u670d\u52a1</li> <li>\u53ef\u914d\u7f6e\u7684\u5e76\u53d1\u53c2\u6570\uff1a\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u8c03\u6574\u5e76\u53d1\u5ea6\u548c\u8d85\u65f6\u8bbe\u7f6e</li> <li>\u56fe\u50cf\u9884\u5904\u7406\u6269\u5c55\uff1a\u53ef\u4ee5\u6dfb\u52a0\u66f4\u591a\u56fe\u50cf\u9884\u5904\u7406\u6b65\u9aa4\uff0c\u63d0\u9ad8\u8bc6\u522b\u51c6\u786e\u7387</li> <li>\u7ed3\u679c\u540e\u5904\u7406\u6269\u5c55\uff1a\u53ef\u4ee5\u6dfb\u52a0\u66f4\u591a\u6587\u672c\u6e05\u7406\u548c\u4f18\u5316\u529f\u80fd</li> </ol> <p>\u901a\u8fc7\u8fd9\u4e9b\u8bbe\u8ba1\u548c\u5b9e\u73b0\uff0cOCR \u5904\u7406\u6a21\u5757\u4e3a DocuSnap-Backend \u7cfb\u7edf\u63d0\u4f9b\u4e86\u9ad8\u6548\u3001\u51c6\u786e\u7684\u56fe\u50cf\u6587\u672c\u8bc6\u522b\u80fd\u529b\uff0c\u662f\u6587\u6863\u548c\u8868\u5355\u5904\u7406\u529f\u80fd\u7684\u91cd\u8981\u57fa\u7840\u3002</p>"},{"location":"core-modules/overview/","title":"Module Overview","text":"<p>The DocuSnap-Backend system consists of five core functional modules that work together to implement the system's main features. This page provides an overview of these core modules.</p>"},{"location":"core-modules/overview/#core-module-composition","title":"Core Module Composition","text":"<p>Through analysis of the DocuSnap-Backend codebase, we have identified the following five core functional modules:</p> <ol> <li>Task Processing Module: Manages task queues, allocates worker threads, and coordinates asynchronous task processing</li> <li>OCR Processing Module: Processes image recognition requests and converts images to text</li> <li>LLM Processing Module: Builds prompts, calls LLM API, and processes LLM responses</li> <li>Security &amp; Encryption Module: Implements end-to-end encryption and protects data transmission security</li> <li>Cache &amp; Persistence Module: Manages storage, retrieval, and cleanup of task status and results</li> </ol> <p>These modules together form the core functional architecture of DocuSnap-Backend, with each module responsible for a specific functional area and interacting through clear interfaces and data flows.</p>"},{"location":"core-modules/overview/#module-relationship-diagram","title":"Module Relationship Diagram","text":"<p>The following diagram shows the relationships and interactions between the five core modules:</p> <p></p> <p>From the diagram, we can see that:</p> <ul> <li>The Task Processing Module is at the center of the system, coordinating the work of other modules</li> <li>The OCR Processing Module and LLM Processing Module work closely together to complete document and form processing</li> <li>The Security &amp; Encryption Module and Cache &amp; Persistence Module provide support services for other modules</li> <li>All modules interact with the Task Processing Module, forming a coordinated working whole</li> </ul>"},{"location":"core-modules/overview/#module-responsibilities-overview","title":"Module Responsibilities Overview","text":""},{"location":"core-modules/overview/#1-task-processing-module","title":"1. Task Processing Module","text":"<p>The Task Processing Module is the core coordinator of the system, responsible for managing the lifecycle and workflow of tasks.</p> <p>Main Responsibilities: - Receiving and validating client requests - Managing task queues and task status - Coordinating the allocation and execution of worker threads - Implementing processing strategies for different types of tasks - Coordinating the work of other modules</p> <p>Key Components: - Task queue - Worker thread pool - Task status management - Processing strategy selector</p>"},{"location":"core-modules/overview/#2-ocr-processing-module","title":"2. OCR Processing Module","text":"<p>The OCR Processing Module is responsible for image text recognition, converting document and form images into text content.</p> <p>Main Responsibilities: - Handling image preprocessing and format conversion - Calling OCR services for text recognition - Processing multiple images in parallel - Merging and organizing OCR results</p> <p>Key Components: - OCR service client - Image processing tools - Parallel processing controller - Result merger</p>"},{"location":"core-modules/overview/#3-llm-processing-module","title":"3. LLM Processing Module","text":"<p>The LLM Processing Module is responsible for text analysis and information extraction, utilizing the capabilities of large language models to understand document content.</p> <p>Main Responsibilities: - Building appropriate prompts based on task type - Calling LLM API for text analysis - Parsing and processing LLM responses - Generating structured processing results</p> <p>Key Components: - Prompt builder - LLM API client - Response parser - Result formatter</p>"},{"location":"core-modules/overview/#4-security-encryption-module","title":"4. Security &amp; Encryption Module","text":"<p>The Security &amp; Encryption Module is responsible for protecting the security of the system and data, implementing end-to-end encryption and request validation.</p> <p>Main Responsibilities: - Implementing RSA and AES hybrid encryption - Validating the integrity and authenticity of requests - Protecting the security of sensitive data transmission - Managing encryption keys and security configurations</p> <p>Key Components: - RSA encryptor/decryptor - AES encryptor/decryptor - Hash validator - Key manager</p>"},{"location":"core-modules/overview/#5-cache-persistence-module","title":"5. Cache &amp; Persistence Module","text":"<p>The Cache &amp; Persistence Module is responsible for managing the storage and retrieval of system data, improving system performance and reliability.</p> <p>Main Responsibilities: - Managing SQLite database connections - Storing and retrieving task status and results - Implementing caching mechanisms to avoid repeated computation - Periodically cleaning up expired data</p> <p>Key Components: - Database connection manager - Task data store - Cache query handler - Data cleaner</p>"},{"location":"core-modules/overview/#module-design-principles","title":"Module Design Principles","text":"<p>The core module design of DocuSnap-Backend follows these principles:</p> <ol> <li>Single Responsibility Principle: Each module focuses on a specific functional area</li> <li>Clear Interface Principle: Modules interact through clearly defined interfaces</li> <li>Low Coupling, High Cohesion Principle: Reducing dependencies between modules while enhancing functional associations within modules</li> <li>Extensibility Principle: Module design facilitates extension and addition of new features</li> <li>Testability Principle: Module functions can be independently tested and verified</li> </ol> <p>Through these design principles, DocuSnap-Backend has achieved a modular architecture that is structurally clear, functionally well-defined, and easy to maintain and extend.</p> <p>In the following pages, we will provide detailed descriptions of the design, implementation, and key code examples for each core module.</p>"},{"location":"core-modules/relationships/","title":"\u6a21\u5757\u5173\u7cfb","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u7684\u4e94\u4e2a\u6838\u5fc3\u6a21\u5757\u901a\u8fc7\u660e\u786e\u7684\u63a5\u53e3\u548c\u6570\u636e\u6d41\u8fdb\u884c\u4ea4\u4e92\uff0c\u5f62\u6210\u4e00\u4e2a\u534f\u8c03\u5de5\u4f5c\u7684\u6574\u4f53\u3002\u672c\u9875\u9762\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e9b\u6a21\u5757\u4e4b\u95f4\u7684\u5173\u7cfb\u548c\u4ea4\u4e92\u65b9\u5f0f\u3002</p>"},{"location":"core-modules/relationships/#_2","title":"\u6a21\u5757\u5173\u7cfb\u56fe","text":"<p>\u4e0b\u56fe\u5c55\u793a\u4e86\u4e94\u4e2a\u6838\u5fc3\u6a21\u5757\u4e4b\u95f4\u7684\u5173\u7cfb\u548c\u4ea4\u4e92\uff1a</p> <p></p> <p>\u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff1a</p> <ul> <li>**\u4efb\u52a1\u5904\u7406\u6a21\u5757**\u4f4d\u4e8e\u7cfb\u7edf\u7684\u4e2d\u5fc3\uff0c\u534f\u8c03\u5176\u4ed6\u6a21\u5757\u7684\u5de5\u4f5c</li> <li>**OCR \u5904\u7406\u6a21\u5757**\u548c**LLM \u5904\u7406\u6a21\u5757**\u7d27\u5bc6\u5408\u4f5c\uff0c\u5171\u540c\u5b8c\u6210\u6587\u6863\u548c\u8868\u5355\u5904\u7406</li> <li>**\u5b89\u5168\u52a0\u5bc6\u6a21\u5757**\u548c**\u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757**\u4e3a\u5176\u4ed6\u6a21\u5757\u63d0\u4f9b\u652f\u6301\u670d\u52a1</li> <li>\u6240\u6709\u6a21\u5757\u90fd\u4e0e**\u4efb\u52a1\u5904\u7406\u6a21\u5757**\u6709\u4ea4\u4e92\uff0c\u5f62\u6210\u4e00\u4e2a\u534f\u8c03\u5de5\u4f5c\u7684\u6574\u4f53</li> </ul>"},{"location":"core-modules/relationships/#_3","title":"\u4e3b\u8981\u4ea4\u4e92\u6d41\u7a0b","text":""},{"location":"core-modules/relationships/#_4","title":"\u4efb\u52a1\u5904\u7406\u6a21\u5757\u4e0e\u5176\u4ed6\u6a21\u5757\u7684\u4ea4\u4e92","text":"<p>\u4efb\u52a1\u5904\u7406\u6a21\u5757\u4f5c\u4e3a\u7cfb\u7edf\u7684\u6838\u5fc3\u534f\u8c03\u8005\uff0c\u4e0e\u5176\u4ed6\u6240\u6709\u6a21\u5757\u90fd\u6709\u4ea4\u4e92\u3002</p> <ol> <li>\u4efb\u52a1\u5904\u7406\u6a21\u5757 \u2192 OCR \u5904\u7406\u6a21\u5757\uff1a</li> <li>\u8c03\u7528 OCR \u5904\u7406\u6a21\u5757\u5904\u7406\u56fe\u50cf</li> <li>\u4f20\u9012\u56fe\u50cf\u6570\u636e\u548c\u5904\u7406\u53c2\u6570</li> <li> <p>\u63a5\u6536 OCR \u5904\u7406\u7ed3\u679c\uff08\u6587\u672c\u5185\u5bb9\uff09</p> </li> <li> <p>\u4efb\u52a1\u5904\u7406\u6a21\u5757 \u2192 LLM \u5904\u7406\u6a21\u5757\uff1a</p> </li> <li>\u8c03\u7528 LLM \u5904\u7406\u6a21\u5757\u5206\u6790\u6587\u672c</li> <li>\u4f20\u9012 OCR \u7ed3\u679c\u548c\u4efb\u52a1\u7c7b\u578b</li> <li> <p>\u63a5\u6536 LLM \u5904\u7406\u7ed3\u679c\uff08\u7ed3\u6784\u5316\u6570\u636e\uff09</p> </li> <li> <p>\u4efb\u52a1\u5904\u7406\u6a21\u5757 \u2192 \u5b89\u5168\u52a0\u5bc6\u6a21\u5757\uff1a</p> </li> <li>\u8c03\u7528\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u89e3\u5bc6\u5ba2\u6237\u7aef\u8bf7\u6c42</li> <li>\u8c03\u7528\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u52a0\u5bc6\u54cd\u5e94\u6570\u636e</li> <li> <p>\u9a8c\u8bc1\u8bf7\u6c42\u7684\u5b8c\u6574\u6027\u548c\u771f\u5b9e\u6027</p> </li> <li> <p>\u4efb\u52a1\u5904\u7406\u6a21\u5757 \u2192 \u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757\uff1a</p> </li> <li>\u521b\u5efa\u548c\u66f4\u65b0\u4efb\u52a1\u8bb0\u5f55</li> <li>\u5b58\u50a8\u4efb\u52a1\u5904\u7406\u7ed3\u679c</li> <li>\u67e5\u8be2\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c</li> </ol>"},{"location":"core-modules/relationships/#ocr","title":"OCR \u5904\u7406\u6a21\u5757\u4e0e\u5176\u4ed6\u6a21\u5757\u7684\u4ea4\u4e92","text":"<p>OCR \u5904\u7406\u6a21\u5757\u4e3b\u8981\u4e0e\u4efb\u52a1\u5904\u7406\u6a21\u5757\u548c\u5916\u90e8 OCR \u670d\u52a1\u4ea4\u4e92\u3002</p> <ol> <li>OCR \u5904\u7406\u6a21\u5757 \u2190 \u4efb\u52a1\u5904\u7406\u6a21\u5757\uff1a</li> <li>\u63a5\u6536\u56fe\u50cf\u5904\u7406\u8bf7\u6c42</li> <li>\u83b7\u53d6\u56fe\u50cf\u6570\u636e\u548c\u5904\u7406\u53c2\u6570</li> <li> <p>\u8fd4\u56de OCR \u5904\u7406\u7ed3\u679c</p> </li> <li> <p>OCR \u5904\u7406\u6a21\u5757 \u2192 \u5916\u90e8 OCR \u670d\u52a1\uff1a</p> </li> <li>\u53d1\u9001\u56fe\u50cf\u5230 OCR \u670d\u52a1</li> <li>\u63a5\u6536 OCR \u8bc6\u522b\u7ed3\u679c</li> <li>\u5904\u7406\u670d\u52a1\u54cd\u5e94\u548c\u9519\u8bef</li> </ol>"},{"location":"core-modules/relationships/#llm","title":"LLM \u5904\u7406\u6a21\u5757\u4e0e\u5176\u4ed6\u6a21\u5757\u7684\u4ea4\u4e92","text":"<p>LLM \u5904\u7406\u6a21\u5757\u4e3b\u8981\u4e0e\u4efb\u52a1\u5904\u7406\u6a21\u5757\u548c\u5916\u90e8 LLM \u670d\u52a1\u4ea4\u4e92\u3002</p> <ol> <li>LLM \u5904\u7406\u6a21\u5757 \u2190 \u4efb\u52a1\u5904\u7406\u6a21\u5757\uff1a</li> <li>\u63a5\u6536\u6587\u672c\u5206\u6790\u8bf7\u6c42</li> <li>\u83b7\u53d6 OCR \u7ed3\u679c\u548c\u4efb\u52a1\u7c7b\u578b</li> <li> <p>\u8fd4\u56de LLM \u5904\u7406\u7ed3\u679c</p> </li> <li> <p>LLM \u5904\u7406\u6a21\u5757 \u2192 \u5916\u90e8 LLM \u670d\u52a1\uff1a</p> </li> <li>\u53d1\u9001\u63d0\u793a\u5230 LLM \u670d\u52a1</li> <li>\u63a5\u6536 LLM \u54cd\u5e94</li> <li>\u5904\u7406\u670d\u52a1\u54cd\u5e94\u548c\u9519\u8bef</li> </ol>"},{"location":"core-modules/relationships/#_5","title":"\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u4e0e\u5176\u4ed6\u6a21\u5757\u7684\u4ea4\u4e92","text":"<p>\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u4e3a\u7cfb\u7edf\u63d0\u4f9b\u5b89\u5168\u670d\u52a1\uff0c\u4e3b\u8981\u4e0e\u4efb\u52a1\u5904\u7406\u6a21\u5757\u4ea4\u4e92\u3002</p> <ol> <li>\u5b89\u5168\u52a0\u5bc6\u6a21\u5757 \u2190 \u4efb\u52a1\u5904\u7406\u6a21\u5757\uff1a</li> <li>\u63a5\u6536\u89e3\u5bc6\u8bf7\u6c42</li> <li>\u63a5\u6536\u52a0\u5bc6\u8bf7\u6c42</li> <li> <p>\u8fd4\u56de\u89e3\u5bc6/\u52a0\u5bc6\u7ed3\u679c</p> </li> <li> <p>\u5b89\u5168\u52a0\u5bc6\u6a21\u5757 \u2192 \u4efb\u52a1\u5904\u7406\u6a21\u5757\uff1a</p> </li> <li>\u63d0\u4f9b\u89e3\u5bc6\u540e\u7684\u8bf7\u6c42\u6570\u636e</li> <li>\u63d0\u4f9b\u52a0\u5bc6\u540e\u7684\u54cd\u5e94\u6570\u636e</li> <li>\u62a5\u544a\u5b89\u5168\u9a8c\u8bc1\u7ed3\u679c</li> </ol>"},{"location":"core-modules/relationships/#_6","title":"\u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757\u4e0e\u5176\u4ed6\u6a21\u5757\u7684\u4ea4\u4e92","text":"<p>\u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757\u4e3a\u7cfb\u7edf\u63d0\u4f9b\u6570\u636e\u5b58\u50a8\u548c\u68c0\u7d22\u670d\u52a1\uff0c\u4e3b\u8981\u4e0e\u4efb\u52a1\u5904\u7406\u6a21\u5757\u4ea4\u4e92\u3002</p> <ol> <li>\u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757 \u2190 \u4efb\u52a1\u5904\u7406\u6a21\u5757\uff1a</li> <li>\u63a5\u6536\u4efb\u52a1\u521b\u5efa\u8bf7\u6c42</li> <li>\u63a5\u6536\u4efb\u52a1\u72b6\u6001\u66f4\u65b0\u8bf7\u6c42</li> <li>\u63a5\u6536\u4efb\u52a1\u7ed3\u679c\u5b58\u50a8\u8bf7\u6c42</li> <li> <p>\u63a5\u6536\u4efb\u52a1\u67e5\u8be2\u8bf7\u6c42</p> </li> <li> <p>\u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757 \u2192 \u4efb\u52a1\u5904\u7406\u6a21\u5757\uff1a</p> </li> <li>\u63d0\u4f9b\u4efb\u52a1\u72b6\u6001\u4fe1\u606f</li> <li>\u63d0\u4f9b\u7f13\u5b58\u7684\u4efb\u52a1\u7ed3\u679c</li> <li>\u62a5\u544a\u5b58\u50a8\u64cd\u4f5c\u7ed3\u679c</li> </ol>"},{"location":"core-modules/relationships/#_7","title":"\u6570\u636e\u6d41\u5411","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u4e2d\u7684\u6570\u636e\u6d41\u5411\u53ef\u4ee5\u6982\u62ec\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u4e3b\u8981\u8def\u5f84\uff1a</p>"},{"location":"core-modules/relationships/#1","title":"1. \u8bf7\u6c42\u5904\u7406\u8def\u5f84","text":"<pre><code>\u5ba2\u6237\u7aef \u2192 \u5b89\u5168\u52a0\u5bc6\u6a21\u5757(\u89e3\u5bc6) \u2192 \u4efb\u52a1\u5904\u7406\u6a21\u5757 \u2192 \u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757(\u67e5\u8be2\u7f13\u5b58)\n</code></pre>"},{"location":"core-modules/relationships/#2","title":"2. \u4efb\u52a1\u6267\u884c\u8def\u5f84","text":"<pre><code>\u4efb\u52a1\u5904\u7406\u6a21\u5757 \u2192 OCR \u5904\u7406\u6a21\u5757 \u2192 \u5916\u90e8 OCR \u670d\u52a1 \u2192 OCR \u5904\u7406\u6a21\u5757 \u2192 \u4efb\u52a1\u5904\u7406\u6a21\u5757 \u2192 LLM \u5904\u7406\u6a21\u5757 \u2192 \u5916\u90e8 LLM \u670d\u52a1 \u2192 LLM \u5904\u7406\u6a21\u5757 \u2192 \u4efb\u52a1\u5904\u7406\u6a21\u5757\n</code></pre>"},{"location":"core-modules/relationships/#3","title":"3. \u7ed3\u679c\u5b58\u50a8\u8def\u5f84","text":"<pre><code>\u4efb\u52a1\u5904\u7406\u6a21\u5757 \u2192 \u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757(\u5b58\u50a8\u7ed3\u679c)\n</code></pre>"},{"location":"core-modules/relationships/#4","title":"4. \u54cd\u5e94\u5904\u7406\u8def\u5f84","text":"<pre><code>\u4efb\u52a1\u5904\u7406\u6a21\u5757 \u2192 \u5b89\u5168\u52a0\u5bc6\u6a21\u5757(\u52a0\u5bc6) \u2192 \u5ba2\u6237\u7aef\n</code></pre>"},{"location":"core-modules/relationships/#5","title":"5. \u72b6\u6001\u67e5\u8be2\u8def\u5f84","text":"<pre><code>\u5ba2\u6237\u7aef \u2192 \u5b89\u5168\u52a0\u5bc6\u6a21\u5757(\u89e3\u5bc6) \u2192 \u4efb\u52a1\u5904\u7406\u6a21\u5757 \u2192 \u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757(\u67e5\u8be2\u72b6\u6001) \u2192 \u4efb\u52a1\u5904\u7406\u6a21\u5757 \u2192 \u5b89\u5168\u52a0\u5bc6\u6a21\u5757(\u52a0\u5bc6) \u2192 \u5ba2\u6237\u7aef\n</code></pre>"},{"location":"core-modules/relationships/#_8","title":"\u63a5\u53e3\u5b9a\u4e49","text":"<p>\u6a21\u5757\u4e4b\u95f4\u901a\u8fc7\u660e\u786e\u5b9a\u4e49\u7684\u63a5\u53e3\u8fdb\u884c\u4ea4\u4e92\uff0c\u4ee5\u4e0b\u662f\u4e3b\u8981\u63a5\u53e3\u7684\u5b9a\u4e49\uff1a</p>"},{"location":"core-modules/relationships/#_9","title":"\u4efb\u52a1\u5904\u7406\u6a21\u5757\u5bf9\u5916\u63a5\u53e3","text":"<ol> <li>\u5904\u7406\u8bf7\u6c42\u63a5\u53e3\uff1a</li> <li><code>process_document(images)</code>\uff1a\u5904\u7406\u6587\u6863\u8bf7\u6c42</li> <li><code>process_form(images)</code>\uff1a\u5904\u7406\u8868\u5355\u8bf7\u6c42</li> <li> <p><code>process_form_filling(images, user_data)</code>\uff1a\u5904\u7406\u8868\u5355\u586b\u5145\u8bf7\u6c42</p> </li> <li> <p>\u72b6\u6001\u67e5\u8be2\u63a5\u53e3\uff1a</p> </li> <li><code>get_task_status(task_id)</code>\uff1a\u67e5\u8be2\u4efb\u52a1\u72b6\u6001</li> <li><code>get_task_result(task_id)</code>\uff1a\u67e5\u8be2\u4efb\u52a1\u7ed3\u679c</li> </ol>"},{"location":"core-modules/relationships/#ocr_1","title":"OCR \u5904\u7406\u6a21\u5757\u63a5\u53e3","text":"<ol> <li>\u56fe\u50cf\u5904\u7406\u63a5\u53e3\uff1a</li> <li><code>process_images(images)</code>\uff1a\u5904\u7406\u591a\u4e2a\u56fe\u50cf\u5e76\u8fd4\u56de\u6587\u672c\u7ed3\u679c</li> <li><code>process_single_image(image, semaphore)</code>\uff1a\u5904\u7406\u5355\u4e2a\u56fe\u50cf</li> </ol>"},{"location":"core-modules/relationships/#llm_1","title":"LLM \u5904\u7406\u6a21\u5757\u63a5\u53e3","text":"<ol> <li>\u6587\u672c\u5904\u7406\u63a5\u53e3\uff1a</li> <li><code>process_with_llm(ocr_text, task_type, user_data=None)</code>\uff1a\u4f7f\u7528 LLM \u5904\u7406\u6587\u672c</li> <li><code>build_prompt(ocr_text, task_type, user_data=None)</code>\uff1a\u6784\u5efa\u63d0\u793a</li> </ol>"},{"location":"core-modules/relationships/#_10","title":"\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u63a5\u53e3","text":"<ol> <li>\u52a0\u5bc6\u89e3\u5bc6\u63a5\u53e3\uff1a</li> <li><code>decrypt_request(encrypted_data, encrypted_key, signature)</code>\uff1a\u89e3\u5bc6\u8bf7\u6c42</li> <li><code>encrypt_response(data, aes_key)</code>\uff1a\u52a0\u5bc6\u54cd\u5e94</li> </ol>"},{"location":"core-modules/relationships/#_11","title":"\u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757\u63a5\u53e3","text":"<ol> <li>\u6570\u636e\u5b58\u50a8\u63a5\u53e3\uff1a</li> <li><code>create_task_record(task_id, task_type)</code>\uff1a\u521b\u5efa\u4efb\u52a1\u8bb0\u5f55</li> <li> <p><code>update_task_result(task_id, status, result=None)</code>\uff1a\u66f4\u65b0\u4efb\u52a1\u7ed3\u679c</p> </li> <li> <p>\u6570\u636e\u67e5\u8be2\u63a5\u53e3\uff1a</p> </li> <li><code>get_task_status(task_id)</code>\uff1a\u83b7\u53d6\u4efb\u52a1\u72b6\u6001</li> <li><code>get_task_result(task_id)</code>\uff1a\u83b7\u53d6\u4efb\u52a1\u7ed3\u679c</li> </ol>"},{"location":"core-modules/relationships/#_12","title":"\u6a21\u5757\u4f9d\u8d56\u5173\u7cfb","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u7684\u6a21\u5757\u4f9d\u8d56\u5173\u7cfb\u5982\u4e0b\uff1a</p> <ol> <li>\u4efb\u52a1\u5904\u7406\u6a21\u5757\uff1a</li> <li>\u4f9d\u8d56 OCR \u5904\u7406\u6a21\u5757\u8fdb\u884c\u56fe\u50cf\u5904\u7406</li> <li>\u4f9d\u8d56 LLM \u5904\u7406\u6a21\u5757\u8fdb\u884c\u6587\u672c\u5206\u6790</li> <li>\u4f9d\u8d56\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u8fdb\u884c\u8bf7\u6c42\u89e3\u5bc6\u548c\u54cd\u5e94\u52a0\u5bc6</li> <li> <p>\u4f9d\u8d56\u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757\u8fdb\u884c\u6570\u636e\u5b58\u50a8\u548c\u68c0\u7d22</p> </li> <li> <p>OCR \u5904\u7406\u6a21\u5757\uff1a</p> </li> <li>\u4f9d\u8d56\u5916\u90e8 OCR \u670d\u52a1\u8fdb\u884c\u6587\u672c\u8bc6\u522b</li> <li> <p>\u4e0d\u76f4\u63a5\u4f9d\u8d56\u5176\u4ed6\u5185\u90e8\u6a21\u5757</p> </li> <li> <p>LLM \u5904\u7406\u6a21\u5757\uff1a</p> </li> <li>\u4f9d\u8d56\u5916\u90e8 LLM \u670d\u52a1\u8fdb\u884c\u6587\u672c\u5206\u6790</li> <li> <p>\u4e0d\u76f4\u63a5\u4f9d\u8d56\u5176\u4ed6\u5185\u90e8\u6a21\u5757</p> </li> <li> <p>\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\uff1a</p> </li> <li> <p>\u4e0d\u4f9d\u8d56\u5176\u4ed6\u5185\u90e8\u6a21\u5757</p> </li> <li> <p>\u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757\uff1a</p> </li> <li>\u4e0d\u4f9d\u8d56\u5176\u4ed6\u5185\u90e8\u6a21\u5757</li> </ol> <p>\u8fd9\u79cd\u4f9d\u8d56\u5173\u7cfb\u8bbe\u8ba1\u51cf\u5c11\u4e86\u6a21\u5757\u95f4\u7684\u8026\u5408\uff0c\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u53ef\u7ef4\u62a4\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002</p>"},{"location":"core-modules/relationships/#_13","title":"\u901a\u4fe1\u673a\u5236","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u7684\u6a21\u5757\u95f4\u901a\u4fe1\u4e3b\u8981\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u548c\u8fd4\u56de\u503c\u8fdb\u884c\uff0c\u5177\u4f53\u673a\u5236\u5982\u4e0b\uff1a</p> <ol> <li>\u540c\u6b65\u51fd\u6570\u8c03\u7528\uff1a</li> <li>\u6a21\u5757\u95f4\u901a\u8fc7\u76f4\u63a5\u7684\u51fd\u6570\u8c03\u7528\u8fdb\u884c\u901a\u4fe1</li> <li> <p>\u8c03\u7528\u65b9\u7b49\u5f85\u88ab\u8c03\u7528\u65b9\u5b8c\u6210\u5904\u7406\u5e76\u8fd4\u56de\u7ed3\u679c</p> </li> <li> <p>\u5f02\u6b65\u4efb\u52a1\u5904\u7406\uff1a</p> </li> <li>\u4efb\u52a1\u5904\u7406\u6a21\u5757\u901a\u8fc7\u4efb\u52a1\u961f\u5217\u548c\u5de5\u4f5c\u7ebf\u7a0b\u5b9e\u73b0\u5f02\u6b65\u5904\u7406</li> <li> <p>\u5ba2\u6237\u7aef\u53ef\u4ee5\u5f02\u6b65\u67e5\u8be2\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c</p> </li> <li> <p>\u9519\u8bef\u4f20\u9012\uff1a</p> </li> <li>\u6a21\u5757\u95f4\u901a\u8fc7\u5f02\u5e38\u673a\u5236\u4f20\u9012\u9519\u8bef\u4fe1\u606f</li> <li> <p>\u4e0a\u5c42\u6a21\u5757\u6355\u83b7\u5e76\u5904\u7406\u4e0b\u5c42\u6a21\u5757\u629b\u51fa\u7684\u5f02\u5e38</p> </li> <li> <p>\u6570\u636e\u5e8f\u5217\u5316\uff1a</p> </li> <li>\u6a21\u5757\u95f4\u4f20\u9012\u590d\u6742\u6570\u636e\u7ed3\u6784\u65f6\uff0c\u901a\u8fc7 JSON \u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316</li> <li>\u786e\u4fdd\u6570\u636e\u683c\u5f0f\u7684\u4e00\u81f4\u6027\u548c\u53ef\u9760\u6027</li> </ol>"},{"location":"core-modules/relationships/#_14","title":"\u534f\u4f5c\u6a21\u5f0f","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u7684\u6a21\u5757\u534f\u4f5c\u4f53\u73b0\u4e86\u4ee5\u4e0b\u8bbe\u8ba1\u6a21\u5f0f\u548c\u534f\u4f5c\u6a21\u5f0f\uff1a</p> <ol> <li>\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u5f0f\uff1a</li> <li>\u4efb\u52a1\u5904\u7406\u6a21\u5757\u4f5c\u4e3a\u534f\u8c03\u8005\uff0c\u7ba1\u7406\u4efb\u52a1\u7684\u751f\u4ea7\u548c\u6d88\u8d39</li> <li>API \u7aef\u70b9\u4f5c\u4e3a\u751f\u4ea7\u8005\uff0c\u751f\u6210\u4efb\u52a1</li> <li> <p>\u5de5\u4f5c\u7ebf\u7a0b\u4f5c\u4e3a\u6d88\u8d39\u8005\uff0c\u5904\u7406\u4efb\u52a1</p> </li> <li> <p>\u7ba1\u9053\u5904\u7406\u6a21\u5f0f\uff1a</p> </li> <li>\u6587\u6863\u548c\u8868\u5355\u5904\u7406\u5f62\u6210\u4e00\u4e2a\u5904\u7406\u7ba1\u9053\uff1a\u56fe\u50cf \u2192 OCR \u2192 LLM \u2192 \u7ed3\u6784\u5316\u7ed3\u679c</li> <li> <p>\u6bcf\u4e2a\u6a21\u5757\u8d1f\u8d23\u7ba1\u9053\u4e2d\u7684\u4e00\u4e2a\u5904\u7406\u9636\u6bb5</p> </li> <li> <p>\u670d\u52a1\u63d0\u4f9b\u8005\u6a21\u5f0f\uff1a</p> </li> <li>\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u548c\u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757\u4f5c\u4e3a\u670d\u52a1\u63d0\u4f9b\u8005</li> <li> <p>\u4e3a\u5176\u4ed6\u6a21\u5757\u63d0\u4f9b\u901a\u7528\u7684\u5b89\u5168\u548c\u6570\u636e\u670d\u52a1</p> </li> <li> <p>\u5916\u89c2\u6a21\u5f0f\uff1a</p> </li> <li>\u4efb\u52a1\u5904\u7406\u6a21\u5757\u4f5c\u4e3a\u5916\u89c2\uff0c\u4e3a\u5ba2\u6237\u7aef\u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3</li> <li>\u9690\u85cf\u4e86\u5185\u90e8\u6a21\u5757\u7684\u590d\u6742\u6027\u548c\u4ea4\u4e92\u7ec6\u8282</li> </ol> <p>\u901a\u8fc7\u8fd9\u4e9b\u8bbe\u8ba1\u548c\u5b9e\u73b0\uff0cDocuSnap-Backend \u7cfb\u7edf\u5b9e\u73b0\u4e86\u6a21\u5757\u95f4\u7684\u9ad8\u6548\u534f\u4f5c\uff0c\u5f62\u6210\u4e86\u4e00\u4e2a\u529f\u80fd\u5b8c\u6574\u3001\u7ed3\u6784\u6e05\u6670\u7684\u6574\u4f53\u3002</p>"},{"location":"core-modules/security-encryption/","title":"\u5b89\u5168\u52a0\u5bc6\u6a21\u5757","text":"<p>\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u662f DocuSnap-Backend \u7cfb\u7edf\u7684\u5173\u952e\u5b89\u5168\u7ec4\u4ef6\uff0c\u8d1f\u8d23\u5b9e\u73b0\u7aef\u5230\u7aef\u52a0\u5bc6\u548c\u8bf7\u6c42\u9a8c\u8bc1\uff0c\u4fdd\u62a4\u654f\u611f\u6587\u6863\u548c\u8868\u5355\u6570\u636e\u7684\u4f20\u8f93\u5b89\u5168\u3002\u8be5\u6a21\u5757\u91c7\u7528 RSA \u548c AES \u6df7\u5408\u52a0\u5bc6\u65b9\u6848\uff0c\u7ed3\u5408\u54c8\u5e0c\u9a8c\u8bc1\u673a\u5236\uff0c\u63d0\u4f9b\u5168\u9762\u7684\u6570\u636e\u5b89\u5168\u4fdd\u969c\u3002</p>"},{"location":"core-modules/security-encryption/#_2","title":"\u6a21\u5757\u804c\u8d23","text":"<p>\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u7684\u4e3b\u8981\u804c\u8d23\u5305\u62ec\uff1a</p> <ol> <li>\u5bc6\u94a5\u7ba1\u7406\uff1a\u751f\u6210\u3001\u5b58\u50a8\u548c\u7ba1\u7406 RSA \u5bc6\u94a5\u5bf9</li> <li>\u8bf7\u6c42\u89e3\u5bc6\uff1a\u89e3\u5bc6\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u52a0\u5bc6\u8bf7\u6c42</li> <li>\u54cd\u5e94\u52a0\u5bc6\uff1a\u52a0\u5bc6\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u7684\u54cd\u5e94\u6570\u636e</li> <li>\u8bf7\u6c42\u9a8c\u8bc1\uff1a\u9a8c\u8bc1\u8bf7\u6c42\u7684\u5b8c\u6574\u6027\u548c\u771f\u5b9e\u6027</li> <li>\u5b89\u5168\u914d\u7f6e\uff1a\u7ba1\u7406\u7cfb\u7edf\u7684\u5b89\u5168\u76f8\u5173\u914d\u7f6e</li> </ol>"},{"location":"core-modules/security-encryption/#_3","title":"\u6838\u5fc3\u7ec4\u4ef6","text":""},{"location":"core-modules/security-encryption/#1-rsa","title":"1. RSA \u52a0\u5bc6/\u89e3\u5bc6\u5668","text":"<p>RSA \u52a0\u5bc6/\u89e3\u5bc6\u5668\u8d1f\u8d23\u5904\u7406\u975e\u5bf9\u79f0\u52a0\u5bc6\u64cd\u4f5c\uff0c\u4e3b\u8981\u7528\u4e8e\u5bc6\u94a5\u4ea4\u6362\u3002\u7cfb\u7edf\u4f7f\u7528 RSA \u52a0\u5bc6\u4fdd\u62a4 AES \u5bc6\u94a5\u7684\u4f20\u8f93\u5b89\u5168\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def load_private_key():\n    \"\"\"\u52a0\u8f7d RSA \u79c1\u94a5\"\"\"\n    try:\n        with open(PRIVATE_KEY_PATH, 'rb') as f:\n            private_key = RSA.import_key(f.read())\n        return private_key\n    except Exception as e:\n        raise Exception(f\"\u52a0\u8f7d\u79c1\u94a5\u5931\u8d25: {str(e)}\")\n\ndef rsa_decrypt(encrypted_data, private_key):\n    \"\"\"\u4f7f\u7528 RSA \u79c1\u94a5\u89e3\u5bc6\u6570\u636e\"\"\"\n    try:\n        cipher = PKCS1_OAEP.new(private_key)\n        decrypted_data = cipher.decrypt(base64.b64decode(encrypted_data))\n        return decrypted_data\n    except Exception as e:\n        raise Exception(f\"RSA \u89e3\u5bc6\u5931\u8d25: {str(e)}\")\n</code></pre>"},{"location":"core-modules/security-encryption/#2-aes","title":"2. AES \u52a0\u5bc6/\u89e3\u5bc6\u5668","text":"<p>AES \u52a0\u5bc6/\u89e3\u5bc6\u5668\u8d1f\u8d23\u5904\u7406\u5bf9\u79f0\u52a0\u5bc6\u64cd\u4f5c\uff0c\u7528\u4e8e\u52a0\u5bc6\u548c\u89e3\u5bc6\u5b9e\u9645\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\u6570\u636e\u3002\u7cfb\u7edf\u4f7f\u7528 AES \u52a0\u5bc6\u63d0\u4f9b\u9ad8\u6548\u7684\u6570\u636e\u52a0\u5bc6\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def aes_decrypt(encrypted_data, key):\n    \"\"\"\u4f7f\u7528 AES \u5bc6\u94a5\u89e3\u5bc6\u6570\u636e\"\"\"\n    try:\n        # \u4ece Base64 \u89e3\u7801\u52a0\u5bc6\u6570\u636e\n        encrypted_data_bytes = base64.b64decode(encrypted_data)\n\n        # \u63d0\u53d6 IV\uff08\u524d 16 \u5b57\u8282\uff09\n        iv = encrypted_data_bytes[:16]\n        ciphertext = encrypted_data_bytes[16:]\n\n        # \u521b\u5efa AES \u89e3\u5bc6\u5668\n        cipher = AES.new(key, AES.MODE_CBC, iv)\n\n        # \u89e3\u5bc6\u6570\u636e\n        padded_data = cipher.decrypt(ciphertext)\n\n        # \u79fb\u9664\u586b\u5145\n        unpadder = padding.PKCS7(AES.block_size).unpadder()\n        data = unpadder.update(padded_data) + unpadder.finalize()\n\n        return data.decode('utf-8')\n    except Exception as e:\n        raise Exception(f\"AES \u89e3\u5bc6\u5931\u8d25: {str(e)}\")\n\ndef aes_encrypt(data, key):\n    \"\"\"\u4f7f\u7528 AES \u5bc6\u94a5\u52a0\u5bc6\u6570\u636e\"\"\"\n    try:\n        # \u751f\u6210\u968f\u673a IV\n        iv = get_random_bytes(16)\n\n        # \u521b\u5efa AES \u52a0\u5bc6\u5668\n        cipher = AES.new(key, AES.MODE_CBC, iv)\n\n        # \u6dfb\u52a0\u586b\u5145\n        padder = padding.PKCS7(AES.block_size).padder()\n        padded_data = padder.update(data.encode('utf-8')) + padder.finalize()\n\n        # \u52a0\u5bc6\u6570\u636e\n        ciphertext = cipher.encrypt(padded_data)\n\n        # \u7ec4\u5408 IV \u548c\u5bc6\u6587\uff0c\u5e76\u8fdb\u884c Base64 \u7f16\u7801\n        encrypted_data = base64.b64encode(iv + ciphertext).decode('utf-8')\n\n        return encrypted_data\n    except Exception as e:\n        raise Exception(f\"AES \u52a0\u5bc6\u5931\u8d25: {str(e)}\")\n</code></pre>"},{"location":"core-modules/security-encryption/#3","title":"3. \u54c8\u5e0c\u9a8c\u8bc1\u5668","text":"<p>\u54c8\u5e0c\u9a8c\u8bc1\u5668\u8d1f\u8d23\u751f\u6210\u548c\u9a8c\u8bc1\u6570\u636e\u7684\u54c8\u5e0c\u503c\uff0c\u786e\u4fdd\u6570\u636e\u7684\u5b8c\u6574\u6027\u548c\u771f\u5b9e\u6027\u3002\u7cfb\u7edf\u4f7f\u7528 SHA256 \u54c8\u5e0c\u7b97\u6cd5\u8fdb\u884c\u9a8c\u8bc1\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def sha256_hash(data):\n    \"\"\"\u8ba1\u7b97\u6570\u636e\u7684 SHA256 \u54c8\u5e0c\u503c\"\"\"\n    try:\n        if isinstance(data, str):\n            data = data.encode('utf-8')\n        return hashlib.sha256(data).hexdigest()\n    except Exception as e:\n        raise Exception(f\"\u8ba1\u7b97\u54c8\u5e0c\u5931\u8d25: {str(e)}\")\n\ndef verify_signature(data, signature):\n    \"\"\"\u9a8c\u8bc1\u6570\u636e\u7684\u7b7e\u540d\uff08\u54c8\u5e0c\u503c\uff09\"\"\"\n    computed_hash = sha256_hash(data)\n    return computed_hash == signature\n</code></pre>"},{"location":"core-modules/security-encryption/#4","title":"4. \u8bf7\u6c42\u5904\u7406\u5668","text":"<p>\u8bf7\u6c42\u5904\u7406\u5668\u8d1f\u8d23\u89e3\u5bc6\u548c\u9a8c\u8bc1\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u4ee5\u53ca\u52a0\u5bc6\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u7684\u54cd\u5e94\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def decrypt_request(encrypted_data, encrypted_key, signature):\n    \"\"\"\u89e3\u5bc6\u8bf7\u6c42\u6570\u636e\u5e76\u9a8c\u8bc1\u5b8c\u6574\u6027\"\"\"\n    try:\n        # \u4f7f\u7528\u79c1\u94a5\u89e3\u5bc6 AES \u5bc6\u94a5\n        private_key = load_private_key()\n        aes_key = rsa_decrypt(encrypted_key, private_key)\n\n        # \u4f7f\u7528 AES \u5bc6\u94a5\u89e3\u5bc6\u6570\u636e\n        data = aes_decrypt(encrypted_data, aes_key)\n\n        # \u9a8c\u8bc1\u7b7e\u540d\n        if not verify_signature(data, signature):\n            raise Exception(\"\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25\")\n\n        return json.loads(data), aes_key\n    except Exception as e:\n        raise Exception(f\"\u8bf7\u6c42\u89e3\u5bc6\u5931\u8d25: {str(e)}\")\n\ndef encrypt_response(data, aes_key):\n    \"\"\"\u52a0\u5bc6\u54cd\u5e94\u6570\u636e\"\"\"\n    try:\n        # \u5c06\u6570\u636e\u8f6c\u6362\u4e3a JSON \u5b57\u7b26\u4e32\n        json_data = json.dumps(data, ensure_ascii=False)\n\n        # \u4f7f\u7528 AES \u5bc6\u94a5\u52a0\u5bc6\u6570\u636e\n        encrypted_data = aes_encrypt(json_data, aes_key)\n\n        # \u8ba1\u7b97\u7b7e\u540d\n        signature = sha256_hash(json_data)\n\n        return {\n            \"encrypted_data\": encrypted_data,\n            \"signature\": signature\n        }\n    except Exception as e:\n        raise Exception(f\"\u54cd\u5e94\u52a0\u5bc6\u5931\u8d25: {str(e)}\")\n</code></pre>"},{"location":"core-modules/security-encryption/#_4","title":"\u52a0\u5bc6\u65b9\u6848\u8bbe\u8ba1","text":"<p>DocuSnap-Backend \u91c7\u7528 RSA \u548c AES \u6df7\u5408\u52a0\u5bc6\u65b9\u6848\uff0c\u7ed3\u5408\u4e86\u4e24\u79cd\u52a0\u5bc6\u6280\u672f\u7684\u4f18\u52bf\uff1a</p> <ol> <li>RSA \u975e\u5bf9\u79f0\u52a0\u5bc6\uff1a</li> <li>\u7528\u4e8e\u5b89\u5168\u4f20\u8f93 AES \u5bc6\u94a5</li> <li>\u670d\u52a1\u5668\u6301\u6709\u79c1\u94a5\uff0c\u5ba2\u6237\u7aef\u4f7f\u7528\u516c\u94a5\u52a0\u5bc6</li> <li> <p>\u89e3\u51b3\u4e86\u5bc6\u94a5\u5206\u53d1\u95ee\u9898</p> </li> <li> <p>AES \u5bf9\u79f0\u52a0\u5bc6\uff1a</p> </li> <li>\u7528\u4e8e\u52a0\u5bc6\u5b9e\u9645\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\u6570\u636e</li> <li>\u63d0\u4f9b\u9ad8\u6548\u7684\u6570\u636e\u52a0\u5bc6</li> <li> <p>\u652f\u6301\u5927\u91cf\u6570\u636e\u7684\u52a0\u5bc6</p> </li> <li> <p>SHA256 \u54c8\u5e0c\u9a8c\u8bc1\uff1a</p> </li> <li>\u9a8c\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027</li> <li>\u9632\u6b62\u6570\u636e\u88ab\u7be1\u6539</li> <li>\u63d0\u4f9b\u989d\u5916\u7684\u5b89\u5168\u4fdd\u969c</li> </ol> <p>\u8fd9\u79cd\u6df7\u5408\u52a0\u5bc6\u65b9\u6848\u5e73\u8861\u4e86\u5b89\u5168\u6027\u548c\u6027\u80fd\uff0c\u9002\u5408\u5904\u7406\u654f\u611f\u6587\u6863\u548c\u8868\u5355\u6570\u636e\u7684\u4f20\u8f93\u5b89\u5168\u9700\u6c42\u3002</p>"},{"location":"core-modules/security-encryption/#_5","title":"\u5de5\u4f5c\u6d41\u7a0b","text":"<p>\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u7684\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a</p>"},{"location":"core-modules/security-encryption/#_6","title":"\u8bf7\u6c42\u5904\u7406\u6d41\u7a0b","text":"<ol> <li>\u63a5\u6536\u52a0\u5bc6\u8bf7\u6c42\uff1a</li> <li>\u5ba2\u6237\u7aef\u4f7f\u7528\u670d\u52a1\u5668\u7684 RSA \u516c\u94a5\u52a0\u5bc6 AES \u5bc6\u94a5</li> <li>\u5ba2\u6237\u7aef\u4f7f\u7528 AES \u5bc6\u94a5\u52a0\u5bc6\u8bf7\u6c42\u6570\u636e</li> <li>\u5ba2\u6237\u7aef\u8ba1\u7b97\u8bf7\u6c42\u6570\u636e\u7684 SHA256 \u54c8\u5e0c\u503c\u4f5c\u4e3a\u7b7e\u540d</li> <li> <p>\u5ba2\u6237\u7aef\u53d1\u9001\u52a0\u5bc6\u7684 AES \u5bc6\u94a5\u3001\u52a0\u5bc6\u7684\u8bf7\u6c42\u6570\u636e\u548c\u7b7e\u540d</p> </li> <li> <p>\u89e3\u5bc6\u548c\u9a8c\u8bc1\uff1a</p> </li> <li>\u670d\u52a1\u5668\u4f7f\u7528 RSA \u79c1\u94a5\u89e3\u5bc6 AES \u5bc6\u94a5</li> <li>\u670d\u52a1\u5668\u4f7f\u7528 AES \u5bc6\u94a5\u89e3\u5bc6\u8bf7\u6c42\u6570\u636e</li> <li>\u670d\u52a1\u5668\u8ba1\u7b97\u89e3\u5bc6\u540e\u6570\u636e\u7684 SHA256 \u54c8\u5e0c\u503c</li> <li> <p>\u670d\u52a1\u5668\u9a8c\u8bc1\u8ba1\u7b97\u7684\u54c8\u5e0c\u503c\u4e0e\u7b7e\u540d\u662f\u5426\u5339\u914d</p> </li> <li> <p>\u5904\u7406\u8bf7\u6c42\uff1a</p> </li> <li>\u5982\u679c\u9a8c\u8bc1\u901a\u8fc7\uff0c\u670d\u52a1\u5668\u5904\u7406\u89e3\u5bc6\u540e\u7684\u8bf7\u6c42</li> <li>\u5982\u679c\u9a8c\u8bc1\u5931\u8d25\uff0c\u670d\u52a1\u5668\u8fd4\u56de\u9519\u8bef\u54cd\u5e94</li> </ol>"},{"location":"core-modules/security-encryption/#_7","title":"\u54cd\u5e94\u5904\u7406\u6d41\u7a0b","text":"<ol> <li>\u51c6\u5907\u54cd\u5e94\uff1a</li> <li>\u670d\u52a1\u5668\u51c6\u5907\u54cd\u5e94\u6570\u636e</li> <li> <p>\u670d\u52a1\u5668\u5c06\u54cd\u5e94\u6570\u636e\u8f6c\u6362\u4e3a JSON \u683c\u5f0f</p> </li> <li> <p>\u52a0\u5bc6\u54cd\u5e94\uff1a</p> </li> <li>\u670d\u52a1\u5668\u4f7f\u7528\u4e4b\u524d\u89e3\u5bc6\u5f97\u5230\u7684 AES \u5bc6\u94a5\u52a0\u5bc6\u54cd\u5e94\u6570\u636e</li> <li> <p>\u670d\u52a1\u5668\u8ba1\u7b97\u54cd\u5e94\u6570\u636e\u7684 SHA256 \u54c8\u5e0c\u503c\u4f5c\u4e3a\u7b7e\u540d</p> </li> <li> <p>\u53d1\u9001\u52a0\u5bc6\u54cd\u5e94\uff1a</p> </li> <li>\u670d\u52a1\u5668\u53d1\u9001\u52a0\u5bc6\u7684\u54cd\u5e94\u6570\u636e\u548c\u7b7e\u540d\u7ed9\u5ba2\u6237\u7aef</li> <li>\u5ba2\u6237\u7aef\u4f7f\u7528 AES \u5bc6\u94a5\u89e3\u5bc6\u54cd\u5e94\u6570\u636e</li> <li>\u5ba2\u6237\u7aef\u9a8c\u8bc1\u54cd\u5e94\u6570\u636e\u7684\u5b8c\u6574\u6027</li> </ol>"},{"location":"core-modules/security-encryption/#_8","title":"\u5bc6\u94a5\u7ba1\u7406","text":"<p>\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u5b9e\u73b0\u4e86\u4ee5\u4e0b\u5bc6\u94a5\u7ba1\u7406\u673a\u5236\uff1a</p> <ol> <li>RSA \u5bc6\u94a5\u5bf9\u751f\u6210\uff1a</li> <li>\u4f7f\u7528 <code>genKeyPairs.sh</code> \u811a\u672c\u751f\u6210 RSA \u5bc6\u94a5\u5bf9</li> <li> <p>\u79c1\u94a5\u4fdd\u5b58\u5728\u670d\u52a1\u5668\uff0c\u516c\u94a5\u5206\u53d1\u7ed9\u5ba2\u6237\u7aef</p> </li> <li> <p>\u5bc6\u94a5\u5b58\u50a8\uff1a</p> </li> <li>\u79c1\u94a5\u5b58\u50a8\u5728\u670d\u52a1\u5668\u7684\u5b89\u5168\u4f4d\u7f6e</li> <li> <p>\u8bbf\u95ee\u6743\u9650\u53d7\u5230\u4e25\u683c\u63a7\u5236</p> </li> <li> <p>AES \u5bc6\u94a5\u751f\u6210\uff1a</p> </li> <li>\u6bcf\u4e2a\u8bf7\u6c42\u4f7f\u7528\u65b0\u7684\u968f\u673a AES \u5bc6\u94a5</li> <li>\u589e\u5f3a\u5b89\u5168\u6027\uff0c\u9632\u6b62\u91cd\u653e\u653b\u51fb</li> </ol>"},{"location":"core-modules/security-encryption/#_9","title":"\u5b89\u5168\u63aa\u65bd","text":"<p>\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u5b9e\u73b0\u4e86\u591a\u5c42\u5b89\u5168\u63aa\u65bd\uff1a</p> <ol> <li>\u7aef\u5230\u7aef\u52a0\u5bc6\uff1a</li> <li>\u6570\u636e\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u59cb\u7ec8\u4fdd\u6301\u52a0\u5bc6\u72b6\u6001</li> <li> <p>\u53ea\u6709\u5408\u6cd5\u7684\u63a5\u6536\u65b9\u53ef\u4ee5\u89e3\u5bc6\u6570\u636e</p> </li> <li> <p>\u5b8c\u6574\u6027\u9a8c\u8bc1\uff1a</p> </li> <li>\u4f7f\u7528 SHA256 \u54c8\u5e0c\u9a8c\u8bc1\u6570\u636e\u5b8c\u6574\u6027</li> <li> <p>\u9632\u6b62\u6570\u636e\u88ab\u7be1\u6539\u6216\u635f\u574f</p> </li> <li> <p>\u53c2\u6570\u9a8c\u8bc1\uff1a</p> </li> <li>\u9a8c\u8bc1\u8bf7\u6c42\u53c2\u6570\u7684\u683c\u5f0f\u548c\u5185\u5bb9</li> <li> <p>\u9632\u6b62\u6076\u610f\u8f93\u5165\u548c\u6ce8\u5165\u653b\u51fb</p> </li> <li> <p>\u9519\u8bef\u5904\u7406\uff1a</p> </li> <li>\u5b89\u5168\u7684\u9519\u8bef\u5904\u7406\u673a\u5236</li> <li>\u4e0d\u6cc4\u9732\u654f\u611f\u4fe1\u606f\u7684\u9519\u8bef\u6d88\u606f</li> </ol>"},{"location":"core-modules/security-encryption/#_10","title":"\u6a21\u5757\u63a5\u53e3","text":"<p>\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u63d0\u4f9b\u4ee5\u4e0b\u4e3b\u8981\u63a5\u53e3\uff1a</p> <ol> <li>\u5bf9\u5916\u63a5\u53e3\uff1a</li> <li><code>decrypt_request</code>\uff1a\u89e3\u5bc6\u548c\u9a8c\u8bc1\u5ba2\u6237\u7aef\u8bf7\u6c42</li> <li> <p><code>encrypt_response</code>\uff1a\u52a0\u5bc6\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u7684\u54cd\u5e94</p> </li> <li> <p>\u5bf9\u5185\u63a5\u53e3\uff1a</p> </li> <li><code>load_private_key</code>\uff1a\u52a0\u8f7d RSA \u79c1\u94a5</li> <li><code>rsa_decrypt</code>\uff1a\u4f7f\u7528 RSA \u79c1\u94a5\u89e3\u5bc6\u6570\u636e</li> <li><code>aes_decrypt</code>\uff1a\u4f7f\u7528 AES \u5bc6\u94a5\u89e3\u5bc6\u6570\u636e</li> <li><code>aes_encrypt</code>\uff1a\u4f7f\u7528 AES \u5bc6\u94a5\u52a0\u5bc6\u6570\u636e</li> <li><code>sha256_hash</code>\uff1a\u8ba1\u7b97\u6570\u636e\u7684 SHA256 \u54c8\u5e0c\u503c</li> <li><code>verify_signature</code>\uff1a\u9a8c\u8bc1\u6570\u636e\u7684\u7b7e\u540d</li> </ol>"},{"location":"core-modules/security-encryption/#_11","title":"\u5b89\u5168\u6700\u4f73\u5b9e\u8df5","text":"<p>\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u9075\u5faa\u4ee5\u4e0b\u5b89\u5168\u6700\u4f73\u5b9e\u8df5\uff1a</p> <ol> <li>\u4f7f\u7528\u6807\u51c6\u52a0\u5bc6\u7b97\u6cd5\uff1a</li> <li>RSA \u7528\u4e8e\u975e\u5bf9\u79f0\u52a0\u5bc6</li> <li>AES \u7528\u4e8e\u5bf9\u79f0\u52a0\u5bc6</li> <li> <p>SHA256 \u7528\u4e8e\u54c8\u5e0c\u9a8c\u8bc1</p> </li> <li> <p>\u5b89\u5168\u7684\u5bc6\u94a5\u7ba1\u7406\uff1a</p> </li> <li>\u79c1\u94a5\u5b89\u5168\u5b58\u50a8</li> <li>\u6bcf\u4e2a\u8bf7\u6c42\u4f7f\u7528\u65b0\u7684 AES \u5bc6\u94a5</li> <li> <p>\u5bc6\u94a5\u957f\u5ea6\u7b26\u5408\u5b89\u5168\u6807\u51c6</p> </li> <li> <p>\u5b8c\u6574\u7684\u9a8c\u8bc1\u673a\u5236\uff1a</p> </li> <li>\u9a8c\u8bc1\u8bf7\u6c42\u7684\u5b8c\u6574\u6027\u548c\u771f\u5b9e\u6027</li> <li> <p>\u591a\u5c42\u9a8c\u8bc1\u786e\u4fdd\u5b89\u5168\u6027</p> </li> <li> <p>\u5b89\u5168\u7684\u9519\u8bef\u5904\u7406\uff1a</p> </li> <li>\u4e0d\u6cc4\u9732\u654f\u611f\u4fe1\u606f</li> <li>\u63d0\u4f9b\u9002\u5f53\u7684\u9519\u8bef\u6d88\u606f</li> </ol>"},{"location":"core-modules/security-encryption/#_12","title":"\u6269\u5c55\u6027","text":"<p>\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u7684\u6269\u5c55\u6027\u4f53\u73b0\u5728\uff1a</p> <ol> <li>\u652f\u6301\u591a\u79cd\u52a0\u5bc6\u7b97\u6cd5\uff1a</li> <li>\u8bbe\u8ba1\u652f\u6301\u672a\u6765\u5347\u7ea7\u6216\u66f4\u6362\u52a0\u5bc6\u7b97\u6cd5</li> <li> <p>\u53ef\u4ee5\u6839\u636e\u5b89\u5168\u9700\u6c42\u8c03\u6574\u53c2\u6570</p> </li> <li> <p>\u53ef\u914d\u7f6e\u7684\u5b89\u5168\u7b56\u7565\uff1a</p> </li> <li>\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u8c03\u6574\u5b89\u5168\u7ea7\u522b</li> <li> <p>\u652f\u6301\u6dfb\u52a0\u65b0\u7684\u5b89\u5168\u63aa\u65bd</p> </li> <li> <p>\u5bc6\u94a5\u8f6e\u6362\u673a\u5236\uff1a</p> </li> <li>\u652f\u6301\u5b9a\u671f\u8f6e\u6362 RSA \u5bc6\u94a5\u5bf9</li> <li>\u589e\u5f3a\u957f\u671f\u5b89\u5168\u6027</li> </ol> <p>\u901a\u8fc7\u8fd9\u4e9b\u8bbe\u8ba1\u548c\u5b9e\u73b0\uff0c\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u4e3a DocuSnap-Backend \u7cfb\u7edf\u63d0\u4f9b\u4e86\u5168\u9762\u7684\u6570\u636e\u5b89\u5168\u4fdd\u969c\uff0c\u786e\u4fdd\u654f\u611f\u6587\u6863\u548c\u8868\u5355\u6570\u636e\u7684\u4f20\u8f93\u5b89\u5168\u3002</p>"},{"location":"core-modules/task-processing/","title":"Task Processing Module","text":"<p>The Task Processing Module is the core coordinator of the DocuSnap-Backend system, responsible for managing the lifecycle and workflow of tasks. This module implements an asynchronous task processing mechanism, enhancing the system's concurrent processing capability through task queues and worker thread pools.</p>"},{"location":"core-modules/task-processing/#module-responsibilities","title":"Module Responsibilities","text":"<p>The main responsibilities of the Task Processing Module include:</p> <ol> <li>Task Reception and Validation: Receiving client requests, validating request parameters and formats</li> <li>Task Queue Management: Adding tasks to the queue, managing task priorities and statuses</li> <li>Worker Thread Coordination: Allocating and managing worker threads to process tasks in the queue</li> <li>Processing Strategy Selection: Selecting appropriate processing strategies based on task types</li> <li>Task Status Tracking: Tracking and updating the processing status and results of tasks</li> <li>Inter-module Coordination: Coordinating the work between the OCR Processing Module and the LLM Processing Module</li> </ol>"},{"location":"core-modules/task-processing/#core-components","title":"Core Components","text":""},{"location":"core-modules/task-processing/#1-task-queue","title":"1. Task Queue","text":"<p>The task queue is a thread-safe queue used to store pending tasks. The system uses the <code>Queue</code> class from the Python standard library to implement the task queue, ensuring safe operations in a multi-threaded environment.</p> <p>Code Example:</p> <pre><code># Initialize task queue\ntask_queue = Queue()\n\ndef add_task_to_queue(task):\n    \"\"\"Add a task to the queue\"\"\"\n    task_queue.put(task)\n    return task['id']\n</code></pre>"},{"location":"core-modules/task-processing/#2-worker-thread-pool","title":"2. Worker Thread Pool","text":"<p>The worker thread pool consists of multiple worker threads responsible for retrieving tasks from the task queue and executing them. The system uses Python's <code>threading</code> module to create and manage worker threads.</p> <p>Code Example:</p> <pre><code># Initialize worker threads\ndef init_worker_threads(num_threads=4):\n    \"\"\"Initialize worker thread pool\"\"\"\n    for _ in range(num_threads):\n        thread = threading.Thread(target=worker, daemon=True)\n        thread.start()\n\n# Worker thread function\ndef worker():\n    \"\"\"Worker thread function, gets tasks from the queue and processes them\"\"\"\n    while True:\n        task = task_queue.get()\n        try:\n            # Select processing strategy based on task type\n            if task['type'] == 'document':\n                process_document_task(task)\n            elif task['type'] == 'form':\n                process_form_task(task)\n            elif task['type'] == 'form_filling':\n                process_form_filling_task(task)\n        except Exception as e:\n            # Error handling\n            update_task_status(task['id'], 'error', str(e))\n        finally:\n            task_queue.task_done()\n</code></pre>"},{"location":"core-modules/task-processing/#3-task-status-management","title":"3. Task Status Management","text":"<p>Task status management is responsible for tracking and updating the processing status and results of tasks, including creating task records, updating task status, and storing processing results.</p> <p>Code Example:</p> <pre><code>def create_task(task_type, task_data):\n    \"\"\"Create a new task and record it in the database\"\"\"\n    task_id = str(uuid.uuid4())\n\n    conn = get_db_connection()\n    cursor = conn.cursor()\n\n    cursor.execute(\n        \"INSERT INTO tasks (id, type, status, created_at) VALUES (?, ?, ?, ?)\",\n        (task_id, task_type, 'pending', int(time.time()))\n    )\n\n    conn.commit()\n    conn.close()\n\n    # Build task object\n    task = {\n        'id': task_id,\n        'type': task_type,\n        'data': task_data\n    }\n\n    return task\n\ndef update_task_status(task_id, status, result=None):\n    \"\"\"Update task status and result\"\"\"\n    conn = get_db_connection()\n    cursor = conn.cursor()\n\n    if result:\n        cursor.execute(\n            \"UPDATE tasks SET status = ?, result = ? WHERE id = ?\",\n            (status, json.dumps(result), task_id)\n        )\n    else:\n        cursor.execute(\n            \"UPDATE tasks SET status = ? WHERE id = ?\",\n            (status, task_id)\n        )\n\n    conn.commit()\n    conn.close()\n</code></pre>"},{"location":"core-modules/task-processing/#4-processing-strategy-selector","title":"4. Processing Strategy Selector","text":"<p>The processing strategy selector is responsible for selecting the appropriate processing strategy based on the task type, implementing the strategy pattern design concept.</p> <p>Code Example:</p> <pre><code>def process_document_task(task):\n    \"\"\"Process document type tasks\"\"\"\n    update_task_status(task['id'], 'processing')\n\n    try:\n        # Process images\n        ocr_results = process_images(task['data']['images'])\n\n        # Build prompt and call LLM\n        prompt = build_document_prompt(ocr_results)\n        llm_result = call_llm_api(prompt)\n\n        # Parse results and update task status\n        parsed_result = parse_document_result(llm_result)\n        update_task_status(task['id'], 'completed', parsed_result)\n    except Exception as e:\n        update_task_status(task['id'], 'error', str(e))\n        raise\n\ndef process_form_task(task):\n    \"\"\"Process form type tasks\"\"\"\n    # Similar to process_document_task, but using form processing strategy\n    # ...\n\ndef process_form_filling_task(task):\n    \"\"\"Process form filling type tasks\"\"\"\n    # Similar to process_document_task, but using form filling strategy\n    # ...\n</code></pre>"},{"location":"core-modules/task-processing/#workflow","title":"Workflow","text":"<p>The workflow of the Task Processing Module is as follows:</p> <ol> <li>Task Creation:</li> <li>Client sends a request</li> <li>System validates request parameters and format</li> <li>Creates task record and generates task ID</li> <li> <p>Adds task to the task queue</p> </li> <li> <p>Task Assignment:</p> </li> <li>Worker thread retrieves task from queue</li> <li>Selects processing strategy based on task type</li> <li> <p>Updates task status to \"processing\"</p> </li> <li> <p>Task Execution:</p> </li> <li>Calls OCR Processing Module to process images</li> <li>Calls LLM Processing Module to analyze text</li> <li> <p>Processes and integrates results</p> </li> <li> <p>Task Completion:</p> </li> <li>Updates task status to \"completed\" or \"error\"</li> <li>Stores processing results</li> <li> <p>Prepares response data</p> </li> <li> <p>Result Query:</p> </li> <li>Client queries task status</li> <li>System returns task status and results (if available)</li> </ol>"},{"location":"core-modules/task-processing/#design-pattern-application","title":"Design Pattern Application","text":"<p>The Task Processing Module applies the following design patterns:</p> <ol> <li>Producer-Consumer Pattern:</li> <li>API endpoints act as producers, generating tasks and adding them to the queue</li> <li>Worker threads act as consumers, retrieving tasks from the queue and processing them</li> <li> <p>The task queue decouples task generation and execution</p> </li> <li> <p>Strategy Pattern:</p> </li> <li>Different processing strategies are selected based on task type</li> <li>Each task type corresponds to a processing function</li> <li> <p>Facilitates adding new task types and processing strategies</p> </li> <li> <p>Command Pattern:</p> </li> <li>Task objects encapsulate all execution information</li> <li>Worker threads execute tasks without needing to know specific details</li> <li>Supports asynchronous execution and status tracking of tasks</li> </ol>"},{"location":"core-modules/task-processing/#concurrency-control","title":"Concurrency Control","text":"<p>The Task Processing Module implements the following concurrency control mechanisms:</p> <ol> <li>Thread-safe Queue: Uses Python's <code>Queue</code> class to ensure thread safety of the task queue</li> <li>Worker Thread Pool: Limits the number of concurrent worker threads to avoid excessive resource consumption</li> <li>Task Status Locks: Uses database transactions to ensure atomicity of task status updates</li> <li>Semaphore Control: Uses semaphores to control concurrent access to external services</li> </ol>"},{"location":"core-modules/task-processing/#error-handling","title":"Error Handling","text":"<p>The Task Processing Module implements comprehensive error handling mechanisms:</p> <ol> <li>Exception Catching: Catches and logs exceptions during task processing</li> <li>Status Updates: Updates task status to \"error\" and records error information</li> <li>Error Recovery: Worker threads continue processing other tasks even if a task fails</li> <li>Error Notification: Reports errors to clients through the task status API</li> </ol>"},{"location":"core-modules/task-processing/#module-interfaces","title":"Module Interfaces","text":"<p>The Task Processing Module provides the following main interfaces:</p> <ol> <li>External Interfaces:</li> <li><code>process_document</code>: API endpoint for processing document tasks</li> <li><code>process_form</code>: API endpoint for processing form tasks</li> <li><code>process_form_filling</code>: API endpoint for processing form filling tasks</li> <li> <p><code>get_task_status</code>: API endpoint for querying task status</p> </li> <li> <p>Internal Interfaces:</p> </li> <li><code>add_task_to_queue</code>: Adds tasks to the queue</li> <li><code>create_task</code>: Creates task records</li> <li><code>update_task_status</code>: Updates task status and results</li> <li><code>get_task_result</code>: Retrieves task results</li> </ol>"},{"location":"core-modules/task-processing/#performance-considerations","title":"Performance Considerations","text":"<p>Performance optimization measures in the Task Processing Module include:</p> <ol> <li>Asynchronous Processing: Uses task queues and worker threads for asynchronous processing, improving response speed</li> <li>Parallel Execution: Multiple worker threads process tasks in parallel, improving throughput</li> <li>Resource Control: Limits the number of concurrent worker threads to avoid excessive resource consumption</li> <li>Cache Utilization: Uses caching to store and retrieve task results, avoiding repeated computation</li> </ol>"},{"location":"core-modules/task-processing/#extensibility","title":"Extensibility","text":"<p>The extensibility of the Task Processing Module is reflected in:</p> <ol> <li>Adding New Task Types: Can easily add new task types and processing strategies</li> <li>Adjusting Concurrency: Can adjust the number of worker threads based on requirements</li> <li>Optimizing Scheduling Strategies: Can implement more complex task scheduling and priority strategies</li> <li>Distributed Extension: Design supports future extension to a distributed task processing system</li> </ol> <p>Through these designs and implementations, the Task Processing Module serves as the core coordinator of the DocuSnap-Backend system, effectively managing task processing workflows and improving the system's concurrent processing capability and response speed.</p>"},{"location":"deployment/diagrams/","title":"\u90e8\u7f72\u56fe","text":"<p>\u672c\u9875\u9762\u8be6\u7ec6\u4ecb\u7ecd DocuSnap-Backend \u7cfb\u7edf\u7684\u90e8\u7f72\u67b6\u6784\u56fe\uff0c\u5305\u62ec\u7ec4\u4ef6\u5173\u7cfb\u3001\u7f51\u7edc\u62d3\u6251\u548c\u6570\u636e\u6d41\u5411\u3002</p>"},{"location":"deployment/diagrams/#_2","title":"\u6574\u4f53\u90e8\u7f72\u67b6\u6784\u56fe","text":"<p>\u4e0b\u56fe\u5c55\u793a\u4e86 DocuSnap-Backend \u7cfb\u7edf\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u6574\u4f53\u90e8\u7f72\u67b6\u6784\uff1a</p> <p></p>"},{"location":"deployment/diagrams/#_3","title":"\u56fe\u89e3\u8bf4\u660e","text":"<ol> <li>\u5ba2\u6237\u7aef\u5c42\uff1a</li> <li>\u4f4d\u4e8e\u6700\u5de6\u4fa7\uff0c\u5305\u62ec Web \u5ba2\u6237\u7aef\u3001\u79fb\u52a8\u5ba2\u6237\u7aef\u548c\u7b2c\u4e09\u65b9\u5e94\u7528</li> <li>\u901a\u8fc7 HTTPS \u534f\u8bae\u4e0e\u7cfb\u7edf\u4ea4\u4e92</li> <li> <p>\u4f7f\u7528\u7aef\u5230\u7aef\u52a0\u5bc6\u4fdd\u62a4\u6570\u636e\u4f20\u8f93\u5b89\u5168</p> </li> <li> <p>\u8d1f\u8f7d\u5747\u8861\u5c42\uff1a</p> </li> <li>\u4f4d\u4e8e\u5ba2\u6237\u7aef\u548c\u5e94\u7528\u670d\u52a1\u5c42\u4e4b\u95f4</li> <li>\u4f7f\u7528 Nginx \u5b9e\u73b0\u53cd\u5411\u4ee3\u7406\u548c\u8d1f\u8f7d\u5747\u8861</li> <li>\u5206\u53d1\u8bf7\u6c42\u5230\u591a\u4e2a\u5e94\u7528\u670d\u52a1\u5b9e\u4f8b</li> <li> <p>\u63d0\u4f9b SSL \u7ec8\u7ed3\u3001\u8bf7\u6c42\u8fc7\u6ee4\u548c\u57fa\u672c\u5b89\u5168\u9632\u62a4</p> </li> <li> <p>\u5e94\u7528\u670d\u52a1\u5c42\uff1a</p> </li> <li>\u4f4d\u4e8e\u7cfb\u7edf\u7684\u6838\u5fc3\u4f4d\u7f6e</li> <li>\u5305\u542b\u591a\u4e2a Flask \u5e94\u7528\u5b9e\u4f8b</li> <li>\u6bcf\u4e2a\u5b9e\u4f8b\u4f7f\u7528 Gunicorn \u4f5c\u4e3a WSGI \u670d\u52a1\u5668</li> <li> <p>\u5904\u7406\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u534f\u8c03\u4efb\u52a1\u5904\u7406</p> </li> <li> <p>OCR \u670d\u52a1\u5c42\uff1a</p> </li> <li>\u4f4d\u4e8e\u5e94\u7528\u670d\u52a1\u5c42\u53f3\u4fa7</li> <li>\u5305\u542b\u591a\u4e2a CnOCR \u670d\u52a1\u5b9e\u4f8b</li> <li>\u63d0\u4f9b\u56fe\u50cf\u6587\u672c\u8bc6\u522b\u529f\u80fd</li> <li> <p>\u53ef\u4ee5\u72ec\u7acb\u6269\u5c55\uff0c\u6ee1\u8db3\u4e0d\u540c\u7684\u5904\u7406\u9700\u6c42</p> </li> <li> <p>\u6570\u636e\u5b58\u50a8\u5c42\uff1a</p> </li> <li>\u4f4d\u4e8e\u5e95\u90e8\uff0c\u4e3a\u5e94\u7528\u670d\u52a1\u5c42\u63d0\u4f9b\u6570\u636e\u5b58\u50a8</li> <li>\u5305\u62ec SQLite \u6570\u636e\u5e93\u548c\u6587\u4ef6\u5b58\u50a8</li> <li>\u5b58\u50a8\u4efb\u52a1\u72b6\u6001\u3001\u5904\u7406\u7ed3\u679c\u548c\u4e34\u65f6\u6570\u636e</li> <li> <p>\u652f\u6301\u6570\u636e\u5907\u4efd\u548c\u6062\u590d</p> </li> <li> <p>\u5916\u90e8\u670d\u52a1\u5c42\uff1a</p> </li> <li>\u4f4d\u4e8e\u53f3\u4fa7\uff0c\u5305\u62ec\u667a\u8c31 AI LLM \u670d\u52a1</li> <li>\u901a\u8fc7 API \u4e0e\u5e94\u7528\u670d\u52a1\u5c42\u4ea4\u4e92</li> <li>\u63d0\u4f9b\u6587\u672c\u5206\u6790\u548c\u4fe1\u606f\u63d0\u53d6\u80fd\u529b</li> </ol>"},{"location":"deployment/diagrams/#_4","title":"\u7ec4\u4ef6\u8fde\u63a5","text":"<p>\u56fe\u4e2d\u7684\u8fde\u63a5\u7ebf\u8868\u793a\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1\u5173\u7cfb\uff1a</p> <ul> <li>\u5ba2\u6237\u7aef \u2192 \u8d1f\u8f7d\u5747\u8861\u5c42\uff1aHTTPS \u534f\u8bae\uff0c\u7aef\u53e3 443</li> <li>\u8d1f\u8f7d\u5747\u8861\u5c42 \u2192 \u5e94\u7528\u670d\u52a1\u5c42\uff1aHTTP \u534f\u8bae\uff0c\u7aef\u53e3 8000\uff08Gunicorn\uff09</li> <li>\u5e94\u7528\u670d\u52a1\u5c42 \u2192 OCR \u670d\u52a1\u5c42\uff1aHTTP \u534f\u8bae\uff0c\u7aef\u53e3 5001</li> <li>\u5e94\u7528\u670d\u52a1\u5c42 \u2192 \u6570\u636e\u5b58\u50a8\u5c42\uff1aSQLite \u6587\u4ef6\u8bbf\u95ee</li> <li>\u5e94\u7528\u670d\u52a1\u5c42 \u2192 \u5916\u90e8\u670d\u52a1\u5c42\uff1aHTTPS \u534f\u8bae\uff0c\u667a\u8c31 AI API</li> </ul>"},{"location":"deployment/diagrams/#_5","title":"\u6269\u5c55\u6027\u8bbe\u8ba1","text":"<p>\u56fe\u4e2d\u7684\u865a\u7ebf\u6846\u548c\u91cd\u590d\u7ec4\u4ef6\u8868\u793a\u7cfb\u7edf\u7684\u6269\u5c55\u6027\u8bbe\u8ba1\uff1a</p> <ul> <li>\u5e94\u7528\u670d\u52a1\u5b9e\u4f8b\uff1a\u53ef\u4ee5\u6c34\u5e73\u6269\u5c55\uff0c\u589e\u52a0\u5b9e\u4f8b\u6570\u91cf</li> <li>OCR \u670d\u52a1\u5b9e\u4f8b\uff1a\u53ef\u4ee5\u72ec\u7acb\u6269\u5c55\uff0c\u6ee1\u8db3\u4e0d\u540c\u7684\u5904\u7406\u9700\u6c42</li> <li>\u8d1f\u8f7d\u5747\u8861\uff1a\u652f\u6301\u52a8\u6001\u6dfb\u52a0\u548c\u79fb\u9664\u540e\u7aef\u670d\u52a1\u5b9e\u4f8b</li> </ul>"},{"location":"deployment/diagrams/#_6","title":"\u5355\u673a\u90e8\u7f72\u56fe","text":"<p>\u4ee5\u4e0b\u662f DocuSnap-Backend \u7cfb\u7edf\u7684\u5355\u673a\u90e8\u7f72\u67b6\u6784\u56fe\uff0c\u9002\u5408\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u5c0f\u89c4\u6a21\u4f7f\u7528\u573a\u666f\uff1a</p> <pre><code>graph TD\n    Client[\"\u5ba2\u6237\u7aef\"] --&gt;|HTTPS| Nginx[\"Nginx \u53cd\u5411\u4ee3\u7406\"]\n    Nginx --&gt;|HTTP| Gunicorn[\"Gunicorn WSGI \u670d\u52a1\u5668\"]\n    Gunicorn --&gt;|WSGI| Flask[\"Flask \u5e94\u7528\"]\n    Flask --&gt;|HTTP| CnOCR[\"CnOCR \u670d\u52a1\"]\n    Flask --&gt;|\u6587\u4ef6\u8bbf\u95ee| SQLite[\"SQLite \u6570\u636e\u5e93\"]\n    Flask --&gt;|HTTPS API| ZhipuAI[\"\u667a\u8c31 AI LLM \u670d\u52a1\"]\n\n    subgraph \"\u5355\u4e00\u670d\u52a1\u5668\"\n        Nginx\n        Gunicorn\n        Flask\n        CnOCR\n        SQLite\n    end</code></pre>"},{"location":"deployment/diagrams/#_7","title":"\u56fe\u89e3\u8bf4\u660e","text":"<ol> <li>\u5355\u4e00\u670d\u52a1\u5668\uff1a</li> <li>\u6240\u6709\u7ec4\u4ef6\uff08\u9664\u5916\u90e8 LLM \u670d\u52a1\u5916\uff09\u90e8\u7f72\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\u4e0a</li> <li>\u7b80\u5316\u4e86\u90e8\u7f72\u548c\u7ef4\u62a4\uff0c\u4f46\u9650\u5236\u4e86\u6269\u5c55\u6027\u548c\u5bb9\u9519\u6027</li> <li> <p>\u9002\u5408\u4f4e\u5e76\u53d1\u3001\u4f4e\u8d1f\u8f7d\u573a\u666f</p> </li> <li> <p>\u7ec4\u4ef6\u5173\u7cfb\uff1a</p> </li> <li>Nginx \u4f5c\u4e3a\u53cd\u5411\u4ee3\u7406\uff0c\u5904\u7406\u5ba2\u6237\u7aef\u8bf7\u6c42</li> <li>Gunicorn \u4f5c\u4e3a WSGI \u670d\u52a1\u5668\uff0c\u8fd0\u884c Flask \u5e94\u7528</li> <li>Flask \u5e94\u7528\u5b9e\u73b0\u6838\u5fc3\u4e1a\u52a1\u903b\u8f91</li> <li>CnOCR \u670d\u52a1\u63d0\u4f9b\u56fe\u50cf\u6587\u672c\u8bc6\u522b</li> <li>SQLite \u6570\u636e\u5e93\u5b58\u50a8\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c</li> <li>\u667a\u8c31 AI LLM \u670d\u52a1\u4f5c\u4e3a\u5916\u90e8\u670d\u52a1\u63d0\u4f9b\u6587\u672c\u5206\u6790\u80fd\u529b</li> </ol>"},{"location":"deployment/diagrams/#_8","title":"\u5bb9\u5668\u5316\u90e8\u7f72\u56fe","text":"<p>\u4ee5\u4e0b\u662f DocuSnap-Backend \u7cfb\u7edf\u7684\u5bb9\u5668\u5316\u90e8\u7f72\u67b6\u6784\u56fe\uff0c\u4f7f\u7528 Docker \u548c Kubernetes \u7b49\u5bb9\u5668\u6280\u672f\uff1a</p> <pre><code>graph TD\n    Client[\"\u5ba2\u6237\u7aef\"] --&gt;|HTTPS| Ingress[\"Kubernetes Ingress\"]\n    Ingress --&gt;|HTTP| AppService[\"\u5e94\u7528\u670d\u52a1 Pod\"]\n    AppService --&gt;|HTTP| OCRService[\"OCR \u670d\u52a1 Pod\"]\n    AppService --&gt;|\u6587\u4ef6\u8bbf\u95ee| PVC[\"\u6301\u4e45\u5377\u58f0\u660e\"]\n    AppService --&gt;|HTTPS API| ZhipuAI[\"\u667a\u8c31 AI LLM \u670d\u52a1\"]\n\n    subgraph \"Kubernetes \u96c6\u7fa4\"\n        Ingress\n        subgraph \"\u5e94\u7528\u670d\u52a1\u90e8\u7f72\"\n            AppService\n        end\n        subgraph \"OCR \u670d\u52a1\u90e8\u7f72\"\n            OCRService\n        end\n        PVC --&gt;|\u6302\u8f7d| PV[\"\u6301\u4e45\u5377\"]\n    end</code></pre>"},{"location":"deployment/diagrams/#_9","title":"\u56fe\u89e3\u8bf4\u660e","text":"<ol> <li>Kubernetes \u96c6\u7fa4\uff1a</li> <li>\u4f7f\u7528\u5bb9\u5668\u7f16\u6392\u7cfb\u7edf\u7ba1\u7406\u5e94\u7528\u7ec4\u4ef6</li> <li>\u652f\u6301\u81ea\u52a8\u6269\u5c55\u3001\u81ea\u6108\u548c\u6eda\u52a8\u66f4\u65b0</li> <li> <p>\u63d0\u9ad8\u7cfb\u7edf\u53ef\u9760\u6027\u548c\u53ef\u7ef4\u62a4\u6027</p> </li> <li> <p>\u7ec4\u4ef6\u5173\u7cfb\uff1a</p> </li> <li>Kubernetes Ingress \u4f5c\u4e3a\u5165\u53e3\u70b9\uff0c\u5904\u7406\u5916\u90e8\u6d41\u91cf</li> <li>\u5e94\u7528\u670d\u52a1\u548c OCR \u670d\u52a1\u4f5c\u4e3a\u72ec\u7acb\u7684\u90e8\u7f72</li> <li>\u6301\u4e45\u5377\u63d0\u4f9b\u6570\u636e\u5b58\u50a8\uff0c\u786e\u4fdd\u6570\u636e\u6301\u4e45\u6027</li> <li> <p>\u5916\u90e8 LLM \u670d\u52a1\u901a\u8fc7 API \u96c6\u6210</p> </li> <li> <p>\u6269\u5c55\u6027\u8bbe\u8ba1\uff1a</p> </li> <li>\u53ef\u4ee5\u72ec\u7acb\u6269\u5c55\u5e94\u7528\u670d\u52a1\u548c OCR \u670d\u52a1</li> <li>\u4f7f\u7528\u6c34\u5e73 Pod \u81ea\u52a8\u7f29\u653e\uff08HPA\uff09\u6839\u636e\u8d1f\u8f7d\u81ea\u52a8\u8c03\u6574\u5b9e\u4f8b\u6570\u91cf</li> <li>\u652f\u6301\u8de8\u8282\u70b9\u90e8\u7f72\uff0c\u63d0\u9ad8\u53ef\u7528\u6027</li> </ol>"},{"location":"deployment/diagrams/#_10","title":"\u9ad8\u53ef\u7528\u90e8\u7f72\u56fe","text":"<p>\u4ee5\u4e0b\u662f DocuSnap-Backend \u7cfb\u7edf\u7684\u9ad8\u53ef\u7528\u90e8\u7f72\u67b6\u6784\u56fe\uff0c\u9002\u5408\u751f\u4ea7\u73af\u5883\u548c\u5927\u89c4\u6a21\u4f7f\u7528\u573a\u666f\uff1a</p> <pre><code>graph TD\n    Client[\"\u5ba2\u6237\u7aef\"] --&gt;|HTTPS| LB[\"\u8d1f\u8f7d\u5747\u8861\u5668\"]\n    LB --&gt;|HTTP| AS1[\"\u5e94\u7528\u670d\u52a1\u5668 1\"]\n    LB --&gt;|HTTP| AS2[\"\u5e94\u7528\u670d\u52a1\u5668 2\"]\n    LB --&gt;|HTTP| AS3[\"\u5e94\u7528\u670d\u52a1\u5668 3\"]\n    AS1 --&gt;|HTTP| OCRS1[\"OCR \u670d\u52a1\u5668 1\"]\n    AS2 --&gt;|HTTP| OCRS1\n    AS3 --&gt;|HTTP| OCRS1\n    AS1 --&gt;|HTTP| OCRS2[\"OCR \u670d\u52a1\u5668 2\"]\n    AS2 --&gt;|HTTP| OCRS2\n    AS3 --&gt;|HTTP| OCRS2\n    AS1 --&gt;|SQL| DB[\"\u4e3b\u6570\u636e\u5e93\"]\n    AS2 --&gt;|SQL| DB\n    AS3 --&gt;|SQL| DB\n    DB --&gt;|\u590d\u5236| DBS[\"\u5907\u4efd\u6570\u636e\u5e93\"]\n    AS1 --&gt;|HTTPS API| ZhipuAI[\"\u667a\u8c31 AI LLM \u670d\u52a1\"]\n    AS2 --&gt;|HTTPS API| ZhipuAI\n    AS3 --&gt;|HTTPS API| ZhipuAI</code></pre>"},{"location":"deployment/diagrams/#_11","title":"\u56fe\u89e3\u8bf4\u660e","text":"<ol> <li>\u591a\u670d\u52a1\u5668\u90e8\u7f72\uff1a</li> <li>\u5e94\u7528\u670d\u52a1\u5668\u3001OCR \u670d\u52a1\u5668\u548c\u6570\u636e\u5e93\u670d\u52a1\u5668\u5206\u79bb\u90e8\u7f72</li> <li>\u6bcf\u79cd\u670d\u52a1\u90fd\u6709\u591a\u4e2a\u5b9e\u4f8b\uff0c\u63d0\u9ad8\u53ef\u7528\u6027\u548c\u5bb9\u9519\u6027</li> <li> <p>\u652f\u6301\u5927\u89c4\u6a21\u5e76\u53d1\u5904\u7406</p> </li> <li> <p>\u8d1f\u8f7d\u5747\u8861\uff1a</p> </li> <li>\u4f7f\u7528\u8d1f\u8f7d\u5747\u8861\u5668\u5206\u53d1\u5ba2\u6237\u7aef\u8bf7\u6c42</li> <li>\u652f\u6301\u4f1a\u8bdd\u4fdd\u6301\u548c\u5065\u5eb7\u68c0\u67e5</li> <li> <p>\u63d0\u4f9b\u6545\u969c\u8f6c\u79fb\u548c\u81ea\u52a8\u6062\u590d</p> </li> <li> <p>\u6570\u636e\u5e93\u9ad8\u53ef\u7528\uff1a</p> </li> <li>\u4e3b\u6570\u636e\u5e93\u5904\u7406\u8bfb\u5199\u64cd\u4f5c</li> <li>\u5907\u4efd\u6570\u636e\u5e93\u901a\u8fc7\u590d\u5236\u4fdd\u6301\u6570\u636e\u540c\u6b65</li> <li> <p>\u652f\u6301\u6545\u969c\u8f6c\u79fb\u548c\u6570\u636e\u6062\u590d</p> </li> <li> <p>\u6269\u5c55\u6027\u8bbe\u8ba1\uff1a</p> </li> <li>\u53ef\u4ee5\u72ec\u7acb\u6269\u5c55\u5e94\u7528\u670d\u52a1\u5668\u548c OCR \u670d\u52a1\u5668</li> <li>\u6839\u636e\u8d1f\u8f7d\u52a8\u6001\u8c03\u6574\u5b9e\u4f8b\u6570\u91cf</li> <li>\u652f\u6301\u8de8\u533a\u57df\u90e8\u7f72\uff0c\u63d0\u9ad8\u53ef\u7528\u6027</li> </ol>"},{"location":"deployment/diagrams/#_12","title":"\u7f51\u7edc\u62d3\u6251\u56fe","text":"<p>\u4ee5\u4e0b\u662f DocuSnap-Backend \u7cfb\u7edf\u7684\u7f51\u7edc\u62d3\u6251\u56fe\uff0c\u5c55\u793a\u4e86\u4e0d\u540c\u7f51\u7edc\u533a\u57df\u548c\u5b89\u5168\u8fb9\u754c\uff1a</p> <pre><code>graph TD\n    Internet[\"\u4e92\u8054\u7f51\"] --&gt;|HTTPS| FW[\"\u9632\u706b\u5899\"]\n    FW --&gt;|HTTP| DMZ[\"DMZ \u533a\u57df\"]\n    DMZ --&gt;|HTTP| APP[\"\u5e94\u7528\u533a\u57df\"]\n    APP --&gt;|HTTP| SVC[\"\u670d\u52a1\u533a\u57df\"]\n    APP --&gt;|SQL| DATA[\"\u6570\u636e\u533a\u57df\"]\n    APP --&gt;|HTTPS API| EXT[\"\u5916\u90e8\u670d\u52a1\"]\n\n    subgraph \"DMZ \u533a\u57df\"\n        LB[\"\u8d1f\u8f7d\u5747\u8861\u5668\"]\n    end\n\n    subgraph \"\u5e94\u7528\u533a\u57df\"\n        AS[\"\u5e94\u7528\u670d\u52a1\u5668\"]\n    end\n\n    subgraph \"\u670d\u52a1\u533a\u57df\"\n        OCRS[\"OCR \u670d\u52a1\u5668\"]\n    end\n\n    subgraph \"\u6570\u636e\u533a\u57df\"\n        DB[\"\u6570\u636e\u5e93\u670d\u52a1\u5668\"]\n    end\n\n    FW --&gt; LB\n    LB --&gt; AS\n    AS --&gt; OCRS\n    AS --&gt; DB\n    AS --&gt; EXT</code></pre>"},{"location":"deployment/diagrams/#_13","title":"\u56fe\u89e3\u8bf4\u660e","text":"<ol> <li>\u7f51\u7edc\u5206\u533a\uff1a</li> <li>DMZ \u533a\u57df\uff1a\u9762\u5411\u5916\u90e8\uff0c\u5305\u542b\u8d1f\u8f7d\u5747\u8861\u5668</li> <li>\u5e94\u7528\u533a\u57df\uff1a\u5305\u542b\u5e94\u7528\u670d\u52a1\u5668</li> <li>\u670d\u52a1\u533a\u57df\uff1a\u5305\u542b OCR \u670d\u52a1\u5668</li> <li> <p>\u6570\u636e\u533a\u57df\uff1a\u5305\u542b\u6570\u636e\u5e93\u670d\u52a1\u5668</p> </li> <li> <p>\u5b89\u5168\u8fb9\u754c\uff1a</p> </li> <li>\u9632\u706b\u5899\u63a7\u5236\u5916\u90e8\u8bbf\u95ee</li> <li>\u4e0d\u540c\u533a\u57df\u4e4b\u95f4\u6709\u7f51\u7edc\u9694\u79bb</li> <li> <p>\u53ea\u5141\u8bb8\u5fc5\u8981\u7684\u901a\u4fe1\u8def\u5f84</p> </li> <li> <p>\u901a\u4fe1\u8def\u5f84\uff1a</p> </li> <li>\u5ba2\u6237\u7aef\u53ea\u80fd\u901a\u8fc7 HTTPS \u8bbf\u95ee\u8d1f\u8f7d\u5747\u8861\u5668</li> <li>\u5e94\u7528\u670d\u52a1\u5668\u53ef\u4ee5\u8bbf\u95ee OCR \u670d\u52a1\u5668\u3001\u6570\u636e\u5e93\u670d\u52a1\u5668\u548c\u5916\u90e8\u670d\u52a1</li> <li>\u6570\u636e\u5e93\u670d\u52a1\u5668\u53ea\u63a5\u53d7\u6765\u81ea\u5e94\u7528\u670d\u52a1\u5668\u7684\u8fde\u63a5</li> </ol>"},{"location":"deployment/diagrams/#_14","title":"\u90e8\u7f72\u6d41\u7a0b\u56fe","text":"<p>\u4ee5\u4e0b\u662f DocuSnap-Backend \u7cfb\u7edf\u7684\u90e8\u7f72\u6d41\u7a0b\u56fe\uff0c\u5c55\u793a\u4e86\u4ece\u4ee3\u7801\u5230\u751f\u4ea7\u73af\u5883\u7684\u5b8c\u6574\u6d41\u7a0b\uff1a</p> <pre><code>graph TD\n    Code[\"\u4ee3\u7801\u5e93\"] --&gt;|\u63d0\u4ea4| CI[\"CI \u6d41\u7a0b\"]\n    CI --&gt;|\u6784\u5efa| Build[\"\u6784\u5efa\u9636\u6bb5\"]\n    Build --&gt;|\u751f\u6210| Artifact[\"\u6784\u5efa\u4ea7\u7269\"]\n    Artifact --&gt;|\u90e8\u7f72| Dev[\"\u5f00\u53d1\u73af\u5883\"]\n    Dev --&gt;|\u6d4b\u8bd5\u901a\u8fc7| Test[\"\u6d4b\u8bd5\u73af\u5883\"]\n    Test --&gt;|\u6d4b\u8bd5\u901a\u8fc7| Staging[\"\u9884\u53d1\u5e03\u73af\u5883\"]\n    Staging --&gt;|\u9a8c\u8bc1\u901a\u8fc7| Prod[\"\u751f\u4ea7\u73af\u5883\"]\n\n    subgraph \"CI/CD \u6d41\u7a0b\"\n        CI\n        Build\n        Artifact\n    end\n\n    subgraph \"\u73af\u5883\u90e8\u7f72\"\n        Dev\n        Test\n        Staging\n        Prod\n    end</code></pre>"},{"location":"deployment/diagrams/#_15","title":"\u56fe\u89e3\u8bf4\u660e","text":"<ol> <li>CI/CD \u6d41\u7a0b\uff1a</li> <li>\u4ee3\u7801\u63d0\u4ea4\u89e6\u53d1 CI \u6d41\u7a0b</li> <li>\u6784\u5efa\u9636\u6bb5\u751f\u6210\u90e8\u7f72\u4ea7\u7269</li> <li> <p>\u81ea\u52a8\u5316\u6d4b\u8bd5\u9a8c\u8bc1\u4ee3\u7801\u8d28\u91cf</p> </li> <li> <p>\u73af\u5883\u90e8\u7f72\uff1a</p> </li> <li>\u5f00\u53d1\u73af\u5883\uff1a\u7528\u4e8e\u5f00\u53d1\u548c\u521d\u6b65\u6d4b\u8bd5</li> <li>\u6d4b\u8bd5\u73af\u5883\uff1a\u7528\u4e8e\u529f\u80fd\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5</li> <li>\u9884\u53d1\u5e03\u73af\u5883\uff1a\u7528\u4e8e\u6027\u80fd\u6d4b\u8bd5\u548c\u9a8c\u6536\u6d4b\u8bd5</li> <li> <p>\u751f\u4ea7\u73af\u5883\uff1a\u9762\u5411\u6700\u7ec8\u7528\u6237</p> </li> <li> <p>\u90e8\u7f72\u7b56\u7565\uff1a</p> </li> <li>\u9010\u7ea7\u90e8\u7f72\uff0c\u786e\u4fdd\u6bcf\u4e2a\u73af\u5883\u90fd\u7ecf\u8fc7\u9a8c\u8bc1</li> <li>\u81ea\u52a8\u5316\u90e8\u7f72\u51cf\u5c11\u4eba\u4e3a\u9519\u8bef</li> <li>\u652f\u6301\u56de\u6eda\u673a\u5236\uff0c\u786e\u4fdd\u7cfb\u7edf\u7a33\u5b9a\u6027</li> </ol>"},{"location":"deployment/diagrams/#_16","title":"\u603b\u7ed3","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u7684\u90e8\u7f72\u67b6\u6784\u8bbe\u8ba1\u8003\u8651\u4e86\u53ef\u6269\u5c55\u6027\u3001\u53ef\u9760\u6027\u548c\u5b89\u5168\u6027\u7b49\u591a\u65b9\u9762\u56e0\u7d20\u3002\u6839\u636e\u4e0d\u540c\u7684\u4f7f\u7528\u573a\u666f\u548c\u9700\u6c42\uff0c\u53ef\u4ee5\u9009\u62e9\u5355\u673a\u90e8\u7f72\u3001\u5206\u5e03\u5f0f\u90e8\u7f72\u6216\u5bb9\u5668\u5316\u90e8\u7f72\u7b49\u4e0d\u540c\u6a21\u5f0f\u3002\u901a\u8fc7\u5408\u7406\u7684\u7ec4\u4ef6\u5206\u79bb\u548c\u7f51\u7edc\u8bbe\u8ba1\uff0c\u7cfb\u7edf\u80fd\u591f\u652f\u6301\u4ece\u5c0f\u89c4\u6a21\u6d4b\u8bd5\u5230\u5927\u89c4\u6a21\u751f\u4ea7\u7684\u5404\u79cd\u90e8\u7f72\u573a\u666f\uff0c\u63d0\u4f9b\u9ad8\u6548\u3001\u53ef\u9760\u7684\u6587\u6863\u548c\u8868\u5355\u5904\u7406\u670d\u52a1\u3002</p>"},{"location":"deployment/overview/","title":"Deployment Overview","text":"<p>This page provides an overview of the DocuSnap-Backend system deployment in a production environment, including deployment architecture, component relationships, and key considerations.</p>"},{"location":"deployment/overview/#deployment-architecture","title":"Deployment Architecture","text":"<p>The DocuSnap-Backend system adopts a layered deployment architecture, separating different functional components to improve system scalability, reliability, and maintainability. The overall deployment architecture is shown in the following diagram:</p> <p></p> <p>This deployment architecture includes the following main components:</p> <ol> <li>Client Layer:</li> <li>Web clients</li> <li>Mobile clients</li> <li> <p>Third-party applications</p> </li> <li> <p>Load Balancing Layer:</p> </li> <li>Nginx reverse proxy</li> <li> <p>Load balancer</p> </li> <li> <p>Application Service Layer:</p> </li> <li>Flask application instances</li> <li> <p>Gunicorn WSGI server</p> </li> <li> <p>OCR Service Layer:</p> </li> <li> <p>CnOCR service instances</p> </li> <li> <p>Data Storage Layer:</p> </li> <li>SQLite database</li> <li> <p>File storage</p> </li> <li> <p>External Service Layer:</p> </li> <li>Zhipu AI LLM service</li> </ol>"},{"location":"deployment/overview/#deployment-modes","title":"Deployment Modes","text":"<p>The DocuSnap-Backend system supports the following deployment modes:</p>"},{"location":"deployment/overview/#1-single-server-deployment","title":"1. Single-Server Deployment","text":"<p>Suitable for development, testing, and small-scale usage scenarios.</p> <p>Characteristics: - All components deployed on a single server - Simple to deploy and maintain - Shared resources, low cost - Suitable for low concurrency, low load scenarios</p> <p>Deployment Steps: 1. Install necessary dependencies (Python, Flask, SQLite, etc.) 2. Clone the repository and configure the environment 3. Start the Flask application and OCR service 4. Configure Nginx as a reverse proxy (optional)</p>"},{"location":"deployment/overview/#2-distributed-deployment","title":"2. Distributed Deployment","text":"<p>Suitable for production environments and large-scale usage scenarios.</p> <p>Characteristics: - Components distributed across multiple servers - Can scale each component independently - Improves system reliability and fault tolerance - Suitable for high concurrency, high load scenarios</p> <p>Deployment Steps: 1. Deploy load balancing layer (Nginx) 2. Deploy multiple application service instances 3. Deploy multiple OCR service instances 4. Configure data storage layer 5. Configure external service connections</p>"},{"location":"deployment/overview/#3-containerized-deployment","title":"3. Containerized Deployment","text":"<p>Using container technologies such as Docker and Kubernetes for deployment.</p> <p>Characteristics: - Environment consistency and isolation - Facilitates automated deployment and scaling - High resource utilization - Suitable for cloud environments and microservice architectures</p> <p>Deployment Steps: 1. Create Docker images (application service, OCR service) 2. Write Docker Compose or Kubernetes configurations 3. Deploy container orchestration system 4. Configure service discovery and load balancing</p>"},{"location":"deployment/overview/#deployment-requirements","title":"Deployment Requirements","text":""},{"location":"deployment/overview/#hardware-requirements","title":"Hardware Requirements","text":"<p>Minimum Configuration (Single-server deployment): - CPU: 4 cores - Memory: 8 GB - Storage: 50 GB SSD - Network: 100 Mbps</p> <p>Recommended Configuration (Distributed deployment): - Application Server:   - CPU: 8+ cores   - Memory: 16+ GB   - Storage: 100+ GB SSD   - Network: 1+ Gbps - OCR Server:   - CPU: 8+ cores   - Memory: 16+ GB (GPU version requires GPU support)   - Storage: 100+ GB SSD   - Network: 1+ Gbps</p>"},{"location":"deployment/overview/#software-requirements","title":"Software Requirements","text":"<p>Operating System: - Linux (recommended Ubuntu 20.04+ or CentOS 8+) - Windows Server supported, but not recommended for production environments</p> <p>Runtime Environment: - Python 3.8+ - pip 20.0+ - virtualenv or conda (recommended)</p> <p>Web Server: - Nginx 1.18+ - Gunicorn 20.0+</p> <p>Database: - SQLite 3.30+ (default) - Optional: PostgreSQL 12+ (recommended for large-scale deployments)</p> <p>Container Platform (optional): - Docker 19.0+ - Docker Compose 1.25+ - Kubernetes 1.18+ (recommended for distributed deployments)</p>"},{"location":"deployment/overview/#network-configuration","title":"Network Configuration","text":""},{"location":"deployment/overview/#port-configuration","title":"Port Configuration","text":"<p>External Ports: - HTTP: 80 (redirects to HTTPS) - HTTPS: 443</p> <p>Internal Ports: - Flask application: 5000 (default) - Gunicorn: 8000 (default) - OCR service: 5001 (default)</p>"},{"location":"deployment/overview/#network-security","title":"Network Security","text":"<p>Recommended Configuration: - Enable HTTPS, using TLS 1.2+ - Configure appropriate CORS policies - Use Web Application Firewall (WAF) - Implement IP restrictions and access controls - Regularly update security patches</p>"},{"location":"deployment/overview/#scalability-considerations","title":"Scalability Considerations","text":"<p>The DocuSnap-Backend system design supports both horizontal and vertical scaling:</p>"},{"location":"deployment/overview/#horizontal-scaling","title":"Horizontal Scaling","text":"<ul> <li>Application Service Layer:</li> <li>Increase the number of application service instances</li> <li>Use load balancing to distribute requests</li> <li> <p>Stateless design facilitates scaling</p> </li> <li> <p>OCR Service Layer:</p> </li> <li>Increase the number of OCR service instances</li> <li>Use load balancing to distribute requests</li> <li>Can be scaled on demand</li> </ul>"},{"location":"deployment/overview/#vertical-scaling","title":"Vertical Scaling","text":"<ul> <li>Increase Single Machine Resources:</li> <li>Upgrade CPU, memory, and storage</li> <li>Suitable for low to medium load scenarios</li> <li>Simple to implement, but limited scalability</li> </ul>"},{"location":"deployment/overview/#database-scaling","title":"Database Scaling","text":"<ul> <li>SQLite Limitations:</li> <li>Suitable for small to medium-scale deployments</li> <li>Limited concurrent write performance</li> <li> <p>Does not support distributed deployment</p> </li> <li> <p>Upgrade to PostgreSQL (recommended for large-scale deployments):</p> </li> <li>Supports high concurrent read and write operations</li> <li>Supports master-slave replication and sharding</li> <li>Better data management and backup mechanisms</li> </ul>"},{"location":"deployment/overview/#monitoring-and-maintenance","title":"Monitoring and Maintenance","text":""},{"location":"deployment/overview/#monitoring-metrics","title":"Monitoring Metrics","text":"<p>System Metrics: - CPU usage - Memory usage - Disk I/O - Network traffic</p> <p>Application Metrics: - Request response time - Request success rate - Task queue length - Task processing time - OCR and LLM service response times</p>"},{"location":"deployment/overview/#log-management","title":"Log Management","text":"<p>Log Types: - Application logs - Access logs - Error logs - Security logs</p> <p>Log Configuration: - Use structured log formats (such as JSON) - Configure appropriate log levels - Implement log rotation policies - Consider using centralized log management systems (such as ELK stack)</p>"},{"location":"deployment/overview/#backup-strategy","title":"Backup Strategy","text":"<p>Backup Content: - Database files - Configuration files - Key files - Application code</p> <p>Backup Frequency: - Database: Daily incremental backups, weekly full backups - Configuration and keys: Backup after each modification - Application code: Backup before each deployment</p>"},{"location":"deployment/overview/#deployment-checklist","title":"Deployment Checklist","text":"<p>The following is a high-level checklist for deploying the DocuSnap-Backend system:</p> <ol> <li>Prepare Environment:</li> <li>Set up servers and network</li> <li>Install necessary software and dependencies</li> <li> <p>Configure firewall and security policies</p> </li> <li> <p>Deploy Application Service:</p> </li> <li>Clone the repository</li> <li>Configure environment variables and configuration files</li> <li>Install Python dependencies</li> <li> <p>Set up Gunicorn and Nginx</p> </li> <li> <p>Deploy OCR Service:</p> </li> <li>Install CnOCR and its dependencies</li> <li>Configure OCR service</li> <li> <p>Set up service auto-start</p> </li> <li> <p>Configure Database:</p> </li> <li>Initialize SQLite database</li> <li>Set database permissions</li> <li> <p>Configure backup strategy</p> </li> <li> <p>Configure External Services:</p> </li> <li>Set up Zhipu AI API keys</li> <li>Configure connection parameters</li> <li> <p>Test connections</p> </li> <li> <p>Set Up Monitoring:</p> </li> <li>Configure system monitoring</li> <li>Set up application monitoring</li> <li> <p>Configure alert mechanisms</p> </li> <li> <p>Test and Verify:</p> </li> <li>Functional testing</li> <li>Performance testing</li> <li> <p>Security testing</p> </li> <li> <p>Go Live:</p> </li> <li>Switch traffic</li> <li>Monitor system status</li> <li>Prepare rollback plan</li> </ol> <p>Through this layered deployment architecture and flexible deployment modes, the DocuSnap-Backend system can adapt to usage scenarios of different scales and requirements, providing efficient and reliable document and form processing services.</p>"},{"location":"deployment/scalability-fault-tolerance/","title":"\u53ef\u6269\u5c55\u6027\u4e0e\u5bb9\u9519\u6027","text":"<p>\u672c\u9875\u9762\u8be6\u7ec6\u4ecb\u7ecd DocuSnap-Backend \u7cfb\u7edf\u7684\u53ef\u6269\u5c55\u6027\u548c\u5bb9\u9519\u6027\u8bbe\u8ba1\uff0c\u5305\u62ec\u5982\u4f55\u5e94\u5bf9\u589e\u957f\u7684\u8d1f\u8f7d\u3001\u5904\u7406\u7ec4\u4ef6\u6545\u969c\u4ee5\u53ca\u786e\u4fdd\u7cfb\u7edf\u7684\u9ad8\u53ef\u7528\u6027\u3002</p>"},{"location":"deployment/scalability-fault-tolerance/#_2","title":"\u53ef\u6269\u5c55\u6027\u8bbe\u8ba1","text":"<p>\u53ef\u6269\u5c55\u6027\u662f\u6307\u7cfb\u7edf\u5904\u7406\u589e\u957f\u8d1f\u8f7d\u7684\u80fd\u529b\uff0c\u5305\u62ec\u7528\u6237\u6570\u91cf\u589e\u52a0\u3001\u5904\u7406\u8bf7\u6c42\u589e\u52a0\u6216\u6570\u636e\u91cf\u589e\u52a0\u7b49\u573a\u666f\u3002DocuSnap-Backend \u7cfb\u7edf\u7684\u53ef\u6269\u5c55\u6027\u8bbe\u8ba1\u5305\u62ec\u6c34\u5e73\u6269\u5c55\u548c\u5782\u76f4\u6269\u5c55\u4e24\u79cd\u65b9\u5f0f\u3002</p>"},{"location":"deployment/scalability-fault-tolerance/#_3","title":"\u6c34\u5e73\u6269\u5c55","text":"<p>\u6c34\u5e73\u6269\u5c55\u662f\u901a\u8fc7\u589e\u52a0\u7cfb\u7edf\u7ec4\u4ef6\u7684\u5b9e\u4f8b\u6570\u91cf\u6765\u63d0\u9ad8\u7cfb\u7edf\u5904\u7406\u80fd\u529b\u3002DocuSnap-Backend \u7cfb\u7edf\u652f\u6301\u4ee5\u4e0b\u7ec4\u4ef6\u7684\u6c34\u5e73\u6269\u5c55\uff1a</p>"},{"location":"deployment/scalability-fault-tolerance/#1","title":"1. \u5e94\u7528\u670d\u52a1\u5c42\u6269\u5c55","text":"<p>\u6269\u5c55\u65b9\u5f0f\uff1a - \u589e\u52a0 Flask \u5e94\u7528\u5b9e\u4f8b\u6570\u91cf - \u4f7f\u7528\u8d1f\u8f7d\u5747\u8861\u5668\u5206\u53d1\u8bf7\u6c42 - \u4fdd\u6301\u5e94\u7528\u65e0\u72b6\u6001\uff0c\u4fbf\u4e8e\u6269\u5c55</p> <p>\u5b9e\u65bd\u6b65\u9aa4\uff1a 1. \u51c6\u5907\u65b0\u7684\u5e94\u7528\u670d\u52a1\u5668\u6216\u5bb9\u5668 2. \u90e8\u7f72\u76f8\u540c\u7684\u5e94\u7528\u4ee3\u7801\u548c\u914d\u7f6e 3. \u5c06\u65b0\u5b9e\u4f8b\u6dfb\u52a0\u5230\u8d1f\u8f7d\u5747\u8861\u5668 4. \u9a8c\u8bc1\u8bf7\u6c42\u6b63\u786e\u5206\u53d1\u548c\u5904\u7406</p> <p>\u914d\u7f6e\u793a\u4f8b\uff08Nginx \u8d1f\u8f7d\u5747\u8861\uff09\uff1a <pre><code>upstream docusnap_backend {\n    server app1.example.com:8000 weight=1;\n    server app2.example.com:8000 weight=1;\n    server app3.example.com:8000 weight=1;\n    # \u53ef\u4ee5\u52a8\u6001\u6dfb\u52a0\u66f4\u591a\u670d\u52a1\u5668\n}\n\nserver {\n    listen 80;\n    server_name api.example.com;\n\n    location / {\n        proxy_pass http://docusnap_backend;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n}\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#2-ocr","title":"2. OCR \u670d\u52a1\u5c42\u6269\u5c55","text":"<p>\u6269\u5c55\u65b9\u5f0f\uff1a - \u589e\u52a0 OCR \u670d\u52a1\u5b9e\u4f8b\u6570\u91cf - \u4f7f\u7528\u670d\u52a1\u53d1\u73b0\u6216\u8d1f\u8f7d\u5747\u8861 - \u8003\u8651 GPU \u8d44\u6e90\u7684\u6709\u6548\u5229\u7528</p> <p>\u5b9e\u65bd\u6b65\u9aa4\uff1a 1. \u51c6\u5907\u65b0\u7684 OCR \u670d\u52a1\u5668\u6216\u5bb9\u5668 2. \u90e8\u7f72 OCR \u670d\u52a1\u548c\u6a21\u578b 3. \u66f4\u65b0\u5e94\u7528\u914d\u7f6e\uff0c\u6dfb\u52a0\u65b0\u7684 OCR \u670d\u52a1\u5730\u5740 4. \u5b9e\u73b0\u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861\u6216\u670d\u52a1\u53d1\u73b0</p> <p>\u4ee3\u7801\u793a\u4f8b\uff08\u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861\uff09\uff1a <pre><code># OCR \u670d\u52a1\u5730\u5740\u5217\u8868\nOCR_SERVERS = [\n    \"http://ocr1.example.com:5001\",\n    \"http://ocr2.example.com:5001\",\n    \"http://ocr3.example.com:5001\"\n]\n\n# \u7b80\u5355\u7684\u8f6e\u8be2\u8d1f\u8f7d\u5747\u8861\ncurrent_server_index = 0\n\ndef get_next_ocr_server():\n    global current_server_index\n    server = OCR_SERVERS[current_server_index]\n    current_server_index = (current_server_index + 1) % len(OCR_SERVERS)\n    return server\n\ndef call_ocr_service(image_data):\n    ocr_server = get_next_ocr_server()\n    try:\n        response = requests.post(\n            f\"{ocr_server}/process\",\n            files={\"image\": (\"image.png\", image_data, \"image/png\")},\n            timeout=OCR_TIMEOUT\n        )\n        # \u5904\u7406\u54cd\u5e94...\n    except requests.RequestException:\n        # \u5931\u8d25\u91cd\u8bd5\uff0c\u9009\u62e9\u4e0b\u4e00\u4e2a\u670d\u52a1\u5668\n        ocr_server = get_next_ocr_server()\n        response = requests.post(\n            f\"{ocr_server}/process\",\n            files={\"image\": (\"image.png\", image_data, \"image/png\")},\n            timeout=OCR_TIMEOUT\n        )\n        # \u5904\u7406\u54cd\u5e94...\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#3","title":"3. \u6570\u636e\u5e93\u6269\u5c55","text":"<p>\u5bf9\u4e8e\u4f7f\u7528 SQLite \u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u6c34\u5e73\u6269\u5c55\u53d7\u5230\u9650\u5236\u3002\u5bf9\u4e8e\u5927\u89c4\u6a21\u90e8\u7f72\uff0c\u5efa\u8bae\u8fc1\u79fb\u5230\u652f\u6301\u6c34\u5e73\u6269\u5c55\u7684\u6570\u636e\u5e93\u7cfb\u7edf\uff0c\u5982 PostgreSQL\uff1a</p> <p>\u8bfb\u5199\u5206\u79bb\uff1a - \u4e3b\u5e93\u5904\u7406\u5199\u64cd\u4f5c - \u591a\u4e2a\u4ece\u5e93\u5904\u7406\u8bfb\u64cd\u4f5c - \u4f7f\u7528\u8fde\u63a5\u6c60\u7ba1\u7406\u6570\u636e\u5e93\u8fde\u63a5</p> <p>\u5206\u7247\uff1a - \u6309\u4efb\u52a1 ID \u6216\u5176\u4ed6\u952e\u8fdb\u884c\u5206\u7247 - \u5c06\u6570\u636e\u5206\u5e03\u5230\u591a\u4e2a\u6570\u636e\u5e93\u5b9e\u4f8b - \u4f7f\u7528\u5206\u7247\u4ee3\u7406\u6216\u5e94\u7528\u5c42\u5206\u7247\u903b\u8f91</p> <p>\u8fc1\u79fb\u6b65\u9aa4\uff1a 1. \u8bbe\u7f6e PostgreSQL \u4e3b\u4ece\u590d\u5236 2. \u5f00\u53d1\u6570\u636e\u8fc1\u79fb\u811a\u672c\uff0c\u4ece SQLite \u8fc1\u79fb\u5230 PostgreSQL 3. \u66f4\u65b0\u5e94\u7528\u4ee3\u7801\uff0c\u4f7f\u7528 SQLAlchemy \u7b49 ORM \u9002\u914d\u4e0d\u540c\u6570\u636e\u5e93 4. \u5b9e\u65bd\u8bfb\u5199\u5206\u79bb\u548c\u8fde\u63a5\u6c60\u7ba1\u7406</p>"},{"location":"deployment/scalability-fault-tolerance/#_4","title":"\u5782\u76f4\u6269\u5c55","text":"<p>\u5782\u76f4\u6269\u5c55\u662f\u901a\u8fc7\u589e\u52a0\u5355\u4e2a\u7ec4\u4ef6\u7684\u8d44\u6e90\uff08\u5982 CPU\u3001\u5185\u5b58\u3001\u5b58\u50a8\u7b49\uff09\u6765\u63d0\u9ad8\u7cfb\u7edf\u5904\u7406\u80fd\u529b\u3002</p>"},{"location":"deployment/scalability-fault-tolerance/#1_1","title":"1. \u5e94\u7528\u670d\u52a1\u5668\u6269\u5c55","text":"<p>\u8d44\u6e90\u4f18\u5316\uff1a - \u589e\u52a0 CPU \u6838\u5fc3\u6570\u548c\u5185\u5b58 - \u4f18\u5316 Gunicorn \u5de5\u4f5c\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u914d\u7f6e - \u8c03\u6574\u7cfb\u7edf\u53c2\u6570\uff0c\u5982\u6587\u4ef6\u63cf\u8ff0\u7b26\u9650\u5236</p> <p>\u914d\u7f6e\u793a\u4f8b\uff08\u6839\u636e\u8d44\u6e90\u8c03\u6574 Gunicorn\uff09\uff1a <pre><code># 4 \u6838 CPU\uff0c16GB \u5185\u5b58\u7684\u670d\u52a1\u5668\ngunicorn --workers=9 --threads=4 --worker-class=gthread --worker-connections=1000 --max-requests=10000 --max-requests-jitter=1000 --timeout=120 app:app\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#2-ocr_1","title":"2. OCR \u670d\u52a1\u5668\u6269\u5c55","text":"<p>\u8d44\u6e90\u4f18\u5316\uff1a - \u4f7f\u7528\u66f4\u5f3a\u5927\u7684 GPU - \u589e\u52a0 CPU \u6838\u5fc3\u6570\u548c\u5185\u5b58 - \u4f18\u5316\u6a21\u578b\u52a0\u8f7d\u548c\u63a8\u7406\u914d\u7f6e</p> <p>GPU \u4f18\u5316\uff1a - \u4f7f\u7528 CUDA \u52a0\u901f - \u6279\u91cf\u5904\u7406\u56fe\u50cf - \u4f18\u5316\u6a21\u578b\u63a8\u7406\u53c2\u6570</p>"},{"location":"deployment/scalability-fault-tolerance/#3_1","title":"3. \u6570\u636e\u5e93\u4f18\u5316","text":"<p>SQLite \u4f18\u5316\uff1a - \u4f7f\u7528 WAL \u6a21\u5f0f\u63d0\u9ad8\u5e76\u53d1\u6027\u80fd - \u4f18\u5316\u7d22\u5f15\u548c\u67e5\u8be2 - \u5b9a\u671f\u7ef4\u62a4\u6570\u636e\u5e93\uff08VACUUM\uff09</p> <p>\u914d\u7f6e\u793a\u4f8b\uff08\u542f\u7528 WAL \u6a21\u5f0f\uff09\uff1a <pre><code>def get_db_connection():\n    conn = sqlite3.connect(DATABASE_PATH)\n    conn.execute(\"PRAGMA journal_mode=WAL\")  # \u542f\u7528 WAL \u6a21\u5f0f\n    conn.execute(\"PRAGMA synchronous=NORMAL\")  # \u964d\u4f4e\u540c\u6b65\u7ea7\u522b\uff0c\u63d0\u9ad8\u6027\u80fd\n    conn.row_factory = sqlite3.Row\n    return conn\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#_5","title":"\u81ea\u52a8\u6269\u5c55","text":"<p>\u5728\u5bb9\u5668\u5316\u73af\u5883\uff08\u5982 Kubernetes\uff09\u4e2d\uff0c\u53ef\u4ee5\u5b9e\u73b0\u57fa\u4e8e\u8d1f\u8f7d\u7684\u81ea\u52a8\u6269\u5c55\uff1a</p> <p>\u6c34\u5e73 Pod \u81ea\u52a8\u7f29\u653e\uff08HPA\uff09\uff1a - \u6839\u636e CPU \u4f7f\u7528\u7387\u3001\u5185\u5b58\u4f7f\u7528\u7387\u6216\u81ea\u5b9a\u4e49\u6307\u6807\u81ea\u52a8\u8c03\u6574 Pod \u6570\u91cf - \u8bbe\u7f6e\u6700\u5c0f\u548c\u6700\u5927\u5b9e\u4f8b\u6570\uff0c\u786e\u4fdd\u6027\u80fd\u548c\u6210\u672c\u5e73\u8861 - \u914d\u7f6e\u9002\u5f53\u7684\u51b7\u5374\u65f6\u95f4\uff0c\u907f\u514d\u9891\u7e41\u6269\u7f29</p> <p>\u914d\u7f6e\u793a\u4f8b\uff08Kubernetes HPA\uff09\uff1a <pre><code>apiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: docusnap-app-hpa\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: docusnap-app\n  minReplicas: 2\n  maxReplicas: 10\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 70\n  - type: Resource\n    resource:\n      name: memory\n      target:\n        type: Utilization\n        averageUtilization: 80\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#_6","title":"\u5bb9\u9519\u6027\u8bbe\u8ba1","text":"<p>\u5bb9\u9519\u6027\u662f\u6307\u7cfb\u7edf\u5728\u7ec4\u4ef6\u6545\u969c\u65f6\u4fdd\u6301\u529f\u80fd\u6b63\u5e38\u7684\u80fd\u529b\u3002DocuSnap-Backend \u7cfb\u7edf\u7684\u5bb9\u9519\u6027\u8bbe\u8ba1\u5305\u62ec\u4ee5\u4e0b\u65b9\u9762\uff1a</p>"},{"location":"deployment/scalability-fault-tolerance/#1_2","title":"1. \u670d\u52a1\u5197\u4f59","text":"<p>\u591a\u5b9e\u4f8b\u90e8\u7f72\uff1a - \u6bcf\u4e2a\u7ec4\u4ef6\u90e8\u7f72\u591a\u4e2a\u5b9e\u4f8b - \u907f\u514d\u5355\u70b9\u6545\u969c - \u652f\u6301\u6545\u969c\u8f6c\u79fb</p> <p>\u5b9e\u65bd\u65b9\u5f0f\uff1a - \u5e94\u7528\u670d\u52a1\uff1a\u90e8\u7f72\u591a\u4e2a\u5b9e\u4f8b\uff0c\u901a\u8fc7\u8d1f\u8f7d\u5747\u8861\u5206\u53d1\u8bf7\u6c42 - OCR \u670d\u52a1\uff1a\u90e8\u7f72\u591a\u4e2a\u5b9e\u4f8b\uff0c\u652f\u6301\u6545\u969c\u8f6c\u79fb - \u6570\u636e\u5e93\uff1a\u4e3b\u4ece\u590d\u5236\u6216\u96c6\u7fa4\u90e8\u7f72\uff08\u4f7f\u7528 PostgreSQL \u7b49\uff09</p>"},{"location":"deployment/scalability-fault-tolerance/#2","title":"2. \u6545\u969c\u68c0\u6d4b\u4e0e\u6062\u590d","text":"<p>\u5065\u5eb7\u68c0\u67e5\uff1a - \u5b9a\u671f\u68c0\u67e5\u7ec4\u4ef6\u5065\u5eb7\u72b6\u6001 - \u68c0\u6d4b\u5f02\u5e38\u548c\u6545\u969c - \u81ea\u52a8\u79fb\u9664\u4e0d\u5065\u5eb7\u7684\u5b9e\u4f8b</p> <p>\u914d\u7f6e\u793a\u4f8b\uff08Nginx \u5065\u5eb7\u68c0\u67e5\uff09\uff1a <pre><code>upstream docusnap_backend {\n    server app1.example.com:8000 max_fails=3 fail_timeout=30s;\n    server app2.example.com:8000 max_fails=3 fail_timeout=30s;\n    server app3.example.com:8000 max_fails=3 fail_timeout=30s;\n}\n</code></pre></p> <p>\u81ea\u52a8\u91cd\u542f\uff1a - \u4f7f\u7528 systemd \u6216 Kubernetes \u7b49\u76d1\u63a7\u670d\u52a1\u72b6\u6001 - \u68c0\u6d4b\u5230\u6545\u969c\u65f6\u81ea\u52a8\u91cd\u542f\u670d\u52a1 - \u8bbe\u7f6e\u9002\u5f53\u7684\u91cd\u542f\u7b56\u7565\u548c\u51b7\u5374\u65f6\u95f4</p> <p>\u914d\u7f6e\u793a\u4f8b\uff08systemd \u670d\u52a1\uff09\uff1a <pre><code>[Unit]\nDescription=DocuSnap Backend Service\nAfter=network.target\n\n[Service]\nUser=docusnap\nWorkingDirectory=/opt/docusnap\nExecStart=/opt/docusnap/venv/bin/gunicorn --workers=4 --bind=0.0.0.0:8000 app:app\nRestart=always\nRestartSec=10\nStartLimitIntervalSec=60\nStartLimitBurst=3\n\n[Install]\nWantedBy=multi-user.target\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#3_2","title":"3. \u8bf7\u6c42\u91cd\u8bd5\u4e0e\u8d85\u65f6","text":"<p>\u5ba2\u6237\u7aef\u91cd\u8bd5\uff1a - \u68c0\u6d4b\u8bf7\u6c42\u5931\u8d25 - \u5b9e\u65bd\u9000\u907f\u7b56\u7565\u91cd\u8bd5 - \u9650\u5236\u6700\u5927\u91cd\u8bd5\u6b21\u6570</p> <p>\u4ee3\u7801\u793a\u4f8b\uff08\u5e26\u9000\u907f\u7684\u91cd\u8bd5\uff09\uff1a <pre><code>def call_service_with_retry(service_url, data, max_retries=3, timeout=10):\n    retries = 0\n    while retries &lt; max_retries:\n        try:\n            response = requests.post(service_url, json=data, timeout=timeout)\n            response.raise_for_status()\n            return response.json()\n        except (requests.RequestException, ValueError) as e:\n            retries += 1\n            if retries &gt;= max_retries:\n                raise Exception(f\"Service call failed after {max_retries} retries: {str(e)}\")\n\n            # \u6307\u6570\u9000\u907f\n            wait_time = 2 ** retries\n            time.sleep(wait_time)\n</code></pre></p> <p>\u8d85\u65f6\u63a7\u5236\uff1a - \u8bbe\u7f6e\u9002\u5f53\u7684\u8fde\u63a5\u548c\u8bfb\u53d6\u8d85\u65f6 - \u907f\u514d\u957f\u65f6\u95f4\u963b\u585e - \u6839\u636e\u64cd\u4f5c\u7c7b\u578b\u8c03\u6574\u8d85\u65f6\u65f6\u95f4</p> <p>\u4ee3\u7801\u793a\u4f8b\uff08\u4e0d\u540c\u64cd\u4f5c\u7684\u8d85\u65f6\u8bbe\u7f6e\uff09\uff1a <pre><code># OCR \u670d\u52a1\u8c03\u7528\uff08\u53ef\u80fd\u9700\u8981\u8f83\u957f\u65f6\u95f4\uff09\nOCR_TIMEOUT = 60  # \u79d2\n\n# LLM \u670d\u52a1\u8c03\u7528\uff08\u53ef\u80fd\u9700\u8981\u8f83\u957f\u65f6\u95f4\uff09\nLLM_TIMEOUT = 120  # \u79d2\n\n# \u6570\u636e\u5e93\u64cd\u4f5c\uff08\u5e94\u8be5\u8f83\u5feb\uff09\nDB_TIMEOUT = 10  # \u79d2\n\ndef call_ocr_service(image_data):\n    try:\n        response = requests.post(\n            OCR_SERVICE_URL,\n            files={\"image\": (\"image.png\", image_data, \"image/png\")},\n            timeout=OCR_TIMEOUT\n        )\n        # \u5904\u7406\u54cd\u5e94...\n    except requests.Timeout:\n        # \u5904\u7406\u8d85\u65f6...\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#4","title":"4. \u65ad\u8def\u5668\u6a21\u5f0f","text":"<p>\u5b9e\u73b0\u65ad\u8def\u5668\u6a21\u5f0f\uff0c\u9632\u6b62\u7ea7\u8054\u6545\u969c\uff1a</p> <p>\u5de5\u4f5c\u539f\u7406\uff1a - \u76d1\u63a7\u670d\u52a1\u8c03\u7528\u5931\u8d25\u7387 - \u5f53\u5931\u8d25\u7387\u8d85\u8fc7\u9608\u503c\uff0c\u65ad\u8def\u5668\u6253\u5f00\uff0c\u5feb\u901f\u5931\u8d25 - \u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u65ad\u8def\u5668\u534a\u5f00\uff0c\u5c1d\u8bd5\u6062\u590d - \u5982\u679c\u8c03\u7528\u6210\u529f\uff0c\u65ad\u8def\u5668\u5173\u95ed\uff1b\u5426\u5219\u91cd\u65b0\u6253\u5f00</p> <p>\u4ee3\u7801\u793a\u4f8b\uff08\u7b80\u5355\u65ad\u8def\u5668\u5b9e\u73b0\uff09\uff1a <pre><code>class CircuitBreaker:\n    def __init__(self, failure_threshold=5, recovery_timeout=30, name=\"default\"):\n        self.failure_threshold = failure_threshold\n        self.recovery_timeout = recovery_timeout\n        self.name = name\n        self.failures = 0\n        self.state = \"CLOSED\"  # CLOSED, OPEN, HALF-OPEN\n        self.last_failure_time = 0\n\n    def execute(self, func, *args, **kwargs):\n        if self.state == \"OPEN\":\n            # \u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u5c1d\u8bd5\u6062\u590d\n            if time.time() - self.last_failure_time &gt; self.recovery_timeout:\n                self.state = \"HALF-OPEN\"\n                logging.info(f\"Circuit {self.name} changed from OPEN to HALF-OPEN\")\n            else:\n                raise Exception(f\"Circuit {self.name} is OPEN\")\n\n        try:\n            result = func(*args, **kwargs)\n\n            # \u5982\u679c\u662f\u534a\u5f00\u72b6\u6001\u4e14\u8c03\u7528\u6210\u529f\uff0c\u5173\u95ed\u65ad\u8def\u5668\n            if self.state == \"HALF-OPEN\":\n                self.state = \"CLOSED\"\n                self.failures = 0\n                logging.info(f\"Circuit {self.name} changed from HALF-OPEN to CLOSED\")\n\n            return result\n        except Exception as e:\n            self.failures += 1\n            self.last_failure_time = time.time()\n\n            # \u5982\u679c\u5931\u8d25\u6b21\u6570\u8fbe\u5230\u9608\u503c\uff0c\u6253\u5f00\u65ad\u8def\u5668\n            if self.failures &gt;= self.failure_threshold or self.state == \"HALF-OPEN\":\n                self.state = \"OPEN\"\n                logging.warning(f\"Circuit {self.name} changed to OPEN after {self.failures} failures\")\n\n            raise e\n\n# \u4f7f\u7528\u793a\u4f8b\nocr_circuit = CircuitBreaker(name=\"ocr-service\", failure_threshold=3, recovery_timeout=60)\n\ndef call_ocr_service_with_circuit_breaker(image_data):\n    try:\n        return ocr_circuit.execute(call_ocr_service, image_data)\n    except Exception as e:\n        # \u5904\u7406\u9519\u8bef\uff0c\u53ef\u80fd\u4f7f\u7528\u5907\u7528\u670d\u52a1\u6216\u8fd4\u56de\u7f13\u5b58\u7ed3\u679c\n        logging.error(f\"OCR service call failed: {str(e)}\")\n        return {\"error\": \"Service temporarily unavailable\"}\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#5","title":"5. \u6570\u636e\u6301\u4e45\u6027\u4e0e\u5907\u4efd","text":"<p>\u6570\u636e\u5907\u4efd\uff1a - \u5b9a\u671f\u5907\u4efd\u6570\u636e\u5e93 - \u5b58\u50a8\u591a\u4e2a\u5907\u4efd\u7248\u672c - \u4f7f\u7528\u4e0d\u540c\u7684\u5b58\u50a8\u4f4d\u7f6e</p> <p>\u5907\u4efd\u811a\u672c\u793a\u4f8b\uff1a <pre><code>#!/bin/bash\n# \u6570\u636e\u5e93\u5907\u4efd\u811a\u672c\n\n# \u8bbe\u7f6e\u53d8\u91cf\nBACKUP_DIR=\"/backup/docusnap\"\nDB_FILE=\"/opt/docusnap/data/docusnap.db\"\nDATE=$(date +\"%Y%m%d_%H%M%S\")\nBACKUP_FILE=\"$BACKUP_DIR/docusnap_$DATE.db\"\n\n# \u521b\u5efa\u5907\u4efd\u76ee\u5f55\uff08\u5982\u679c\u4e0d\u5b58\u5728\uff09\nmkdir -p $BACKUP_DIR\n\n# \u5907\u4efd\u6570\u636e\u5e93\necho \"Backing up database to $BACKUP_FILE\"\nsqlite3 $DB_FILE \".backup '$BACKUP_FILE'\"\n\n# \u538b\u7f29\u5907\u4efd\u6587\u4ef6\ngzip $BACKUP_FILE\n\n# \u5220\u9664\u8d85\u8fc7 30 \u5929\u7684\u5907\u4efd\nfind $BACKUP_DIR -name \"docusnap_*.db.gz\" -type f -mtime +30 -delete\n\necho \"Backup completed\"\n</code></pre></p> <p>\u6570\u636e\u4e00\u81f4\u6027\uff1a - \u4f7f\u7528\u4e8b\u52a1\u786e\u4fdd\u6570\u636e\u4e00\u81f4\u6027 - \u5b9e\u65bd\u6570\u636e\u9a8c\u8bc1\u548c\u5b8c\u6574\u6027\u68c0\u67e5 - \u5b9a\u671f\u68c0\u67e5\u548c\u4fee\u590d\u6570\u636e\u5e93</p> <p>\u4ee3\u7801\u793a\u4f8b\uff08\u4f7f\u7528\u4e8b\u52a1\uff09\uff1a <pre><code>def update_task_result(task_id, status, result=None):\n    \"\"\"\u66f4\u65b0\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c\uff0c\u4f7f\u7528\u4e8b\u52a1\u786e\u4fdd\u4e00\u81f4\u6027\"\"\"\n    conn = get_db_connection()\n    try:\n        conn.execute(\"BEGIN TRANSACTION\")\n\n        current_time = int(time.time())\n\n        if result:\n            # \u5982\u679c\u63d0\u4f9b\u4e86\u7ed3\u679c\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a JSON \u5b57\u7b26\u4e32\u5b58\u50a8\n            result_json = json.dumps(result, ensure_ascii=False)\n\n            conn.execute(\n                \"UPDATE tasks SET status = ?, result = ?, updated_at = ? WHERE id = ?\",\n                (status, result_json, current_time, task_id)\n            )\n        else:\n            conn.execute(\n                \"UPDATE tasks SET status = ?, updated_at = ? WHERE id = ?\",\n                (status, current_time, task_id)\n            )\n\n        conn.execute(\"COMMIT\")\n    except Exception as e:\n        conn.execute(\"ROLLBACK\")\n        raise Exception(f\"\u66f4\u65b0\u4efb\u52a1\u7ed3\u679c\u5931\u8d25: {str(e)}\")\n    finally:\n        conn.close()\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#_7","title":"\u9ad8\u53ef\u7528\u6027\u8bbe\u8ba1","text":"<p>\u9ad8\u53ef\u7528\u6027\u662f\u6307\u7cfb\u7edf\u80fd\u591f\u5728\u5404\u79cd\u6761\u4ef6\u4e0b\u6301\u7eed\u8fd0\u884c\u7684\u80fd\u529b\uff0c\u5305\u62ec\u786c\u4ef6\u6545\u969c\u3001\u8f6f\u4ef6\u9519\u8bef\u3001\u7f51\u7edc\u95ee\u9898\u7b49\u60c5\u51b5\u3002</p>"},{"location":"deployment/scalability-fault-tolerance/#1_3","title":"1. \u591a\u533a\u57df\u90e8\u7f72","text":"<p>\u533a\u57df\u5197\u4f59\uff1a - \u5728\u591a\u4e2a\u5730\u7406\u533a\u57df\u90e8\u7f72\u7cfb\u7edf - \u4f7f\u7528\u5168\u5c40\u8d1f\u8f7d\u5747\u8861\u5206\u53d1\u6d41\u91cf - \u652f\u6301\u533a\u57df\u6545\u969c\u8f6c\u79fb</p> <p>\u90e8\u7f72\u67b6\u6784\uff1a - \u4e3b\u533a\u57df\uff1a\u5904\u7406\u5927\u90e8\u5206\u8bf7\u6c42 - \u5907\u7528\u533a\u57df\uff1a\u5728\u4e3b\u533a\u57df\u6545\u969c\u65f6\u63a5\u7ba1\u6d41\u91cf - \u6570\u636e\u540c\u6b65\uff1a\u786e\u4fdd\u533a\u57df\u95f4\u6570\u636e\u4e00\u81f4\u6027</p>"},{"location":"deployment/scalability-fault-tolerance/#2_1","title":"2. \u8d1f\u8f7d\u5747\u8861\u4e0e\u6545\u969c\u8f6c\u79fb","text":"<p>\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\uff1a - \u8f6e\u8be2\uff1a\u5747\u5300\u5206\u914d\u8bf7\u6c42 - \u6700\u5c11\u8fde\u63a5\uff1a\u5206\u914d\u7ed9\u8d1f\u8f7d\u6700\u8f7b\u7684\u670d\u52a1\u5668 - IP \u54c8\u5e0c\uff1a\u57fa\u4e8e\u5ba2\u6237\u7aef IP \u7684\u4f1a\u8bdd\u4fdd\u6301 - \u52a0\u6743\u8f6e\u8be2\uff1a\u6839\u636e\u670d\u52a1\u5668\u80fd\u529b\u5206\u914d\u8bf7\u6c42</p> <p>\u914d\u7f6e\u793a\u4f8b\uff08HAProxy \u8d1f\u8f7d\u5747\u8861\uff09\uff1a <pre><code>frontend docusnap_frontend\n    bind *:80\n    bind *:443 ssl crt /etc/ssl/certs/docusnap.pem\n    mode http\n    option httplog\n\n    # \u6839\u636e URL \u8def\u5f84\u8f6c\u53d1\u8bf7\u6c42\n    acl is_api path_beg /api\n    use_backend docusnap_api if is_api\n    default_backend docusnap_web\n\nbackend docusnap_api\n    mode http\n    balance roundrobin\n    option httpchk GET /health\n    http-check expect status 200\n    server app1 app1.example.com:8000 check\n    server app2 app2.example.com:8000 check\n    server app3 app3.example.com:8000 check backup\n\n    # \u542f\u7528\u4f1a\u8bdd\u4fdd\u6301\uff08\u5982\u679c\u9700\u8981\uff09\n    # cookie SERVERID insert indirect nocache\n\n    # \u542f\u7528\u91cd\u8bd5\n    option redispatch\n    retries 3\n    timeout connect 5s\n    timeout server 30s\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#3_3","title":"3. \u670d\u52a1\u53d1\u73b0","text":"<p>\u5728\u52a8\u6001\u73af\u5883\uff08\u5982\u5bb9\u5668\u7f16\u6392\u5e73\u53f0\uff09\u4e2d\uff0c\u4f7f\u7528\u670d\u52a1\u53d1\u73b0\u673a\u5236\u52a8\u6001\u66f4\u65b0\u670d\u52a1\u5217\u8868\uff1a</p> <p>\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\uff1a - \u670d\u52a1\u542f\u52a8\u65f6\u6ce8\u518c\u5230\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3 - \u5ba2\u6237\u7aef\u901a\u8fc7\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u53d1\u73b0\u53ef\u7528\u670d\u52a1 - \u670d\u52a1\u5065\u5eb7\u72b6\u6001\u5b9e\u65f6\u76d1\u63a7\u548c\u66f4\u65b0</p> <p>\u6280\u672f\u9009\u62e9\uff1a - Kubernetes Service\uff1a\u5728 Kubernetes \u73af\u5883\u4e2d\u4f7f\u7528 - Consul\uff1a\u901a\u7528\u670d\u52a1\u53d1\u73b0\u548c\u914d\u7f6e\u7ba1\u7406 - etcd\uff1a\u5206\u5e03\u5f0f\u952e\u503c\u5b58\u50a8\uff0c\u7528\u4e8e\u670d\u52a1\u53d1\u73b0</p> <p>\u914d\u7f6e\u793a\u4f8b\uff08Kubernetes Service\uff09\uff1a <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: docusnap-app\nspec:\n  selector:\n    app: docusnap-app\n  ports:\n  - port: 8000\n    targetPort: 8000\n  type: ClusterIP\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#4_1","title":"4. \u72b6\u6001\u7ba1\u7406","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u8bbe\u8ba1\u4e3a\u65e0\u72b6\u6001\u5e94\u7528\uff0c\u4fbf\u4e8e\u6c34\u5e73\u6269\u5c55\u548c\u6545\u969c\u6062\u590d\uff1a</p> <p>\u65e0\u72b6\u6001\u8bbe\u8ba1\uff1a - \u4e0d\u5728\u5e94\u7528\u5185\u5b58\u4e2d\u5b58\u50a8\u4f1a\u8bdd\u72b6\u6001 - \u4f7f\u7528\u6570\u636e\u5e93\u6216\u7f13\u5b58\u5b58\u50a8\u5171\u4eab\u72b6\u6001 - \u4efb\u4f55\u5b9e\u4f8b\u90fd\u53ef\u4ee5\u5904\u7406\u4efb\u4f55\u8bf7\u6c42</p> <p>\u4efb\u52a1\u72b6\u6001\u7ba1\u7406\uff1a - \u4efb\u52a1\u72b6\u6001\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d - \u4efb\u4f55\u5e94\u7528\u5b9e\u4f8b\u90fd\u53ef\u4ee5\u67e5\u8be2\u548c\u66f4\u65b0\u4efb\u52a1\u72b6\u6001 - \u652f\u6301\u4efb\u52a1\u6062\u590d\u548c\u91cd\u8bd5</p> <p>\u4ee3\u7801\u793a\u4f8b\uff08\u65e0\u72b6\u6001\u4efb\u52a1\u5904\u7406\uff09\uff1a <pre><code>@app.route('/api/task_status', methods=['POST'])\ndef get_task_status():\n    # \u89e3\u6790\u8bf7\u6c42...\n\n    task_id = decrypted_data['task_id']\n\n    # \u4ece\u6570\u636e\u5e93\u67e5\u8be2\u4efb\u52a1\u72b6\u6001\uff0c\u4efb\u4f55\u5b9e\u4f8b\u90fd\u53ef\u4ee5\u5904\u7406\n    task_result = get_task_result(task_id)\n\n    if not task_result:\n        return jsonify({\"error\": \"\u4efb\u52a1\u4e0d\u5b58\u5728\"}), 404\n\n    # \u8fd4\u56de\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c\n    response = encrypt_response(task_result, aes_key)\n    return jsonify(response), 200\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#_8","title":"\u6027\u80fd\u4f18\u5316","text":"<p>\u9664\u4e86\u53ef\u6269\u5c55\u6027\u548c\u5bb9\u9519\u6027\uff0c\u6027\u80fd\u4f18\u5316\u4e5f\u662f\u786e\u4fdd\u7cfb\u7edf\u5728\u9ad8\u8d1f\u8f7d\u4e0b\u4fdd\u6301\u54cd\u5e94\u80fd\u529b\u7684\u91cd\u8981\u56e0\u7d20\uff1a</p>"},{"location":"deployment/scalability-fault-tolerance/#1_4","title":"1. \u7f13\u5b58\u4f18\u5316","text":"<p>\u591a\u7ea7\u7f13\u5b58\uff1a - \u5185\u5b58\u7f13\u5b58\uff1a\u4f7f\u7528 Redis \u6216 Memcached \u7f13\u5b58\u70ed\u70b9\u6570\u636e - \u6570\u636e\u5e93\u7f13\u5b58\uff1a\u7f13\u5b58\u67e5\u8be2\u7ed3\u679c - \u5e94\u7528\u7f13\u5b58\uff1a\u7f13\u5b58\u8ba1\u7b97\u7ed3\u679c</p> <p>\u7f13\u5b58\u7b56\u7565\uff1a - \u65f6\u95f4\u57fa\u7f13\u5b58\uff1a\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4 - LRU \u7f13\u5b58\uff1a\u6dd8\u6c70\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u9879 - \u5199\u900f\u7f13\u5b58\uff1a\u66f4\u65b0\u6570\u636e\u65f6\u540c\u65f6\u66f4\u65b0\u7f13\u5b58</p> <p>\u4ee3\u7801\u793a\u4f8b\uff08Redis \u7f13\u5b58\uff09\uff1a <pre><code>import redis\n\n# \u521d\u59cb\u5316 Redis \u5ba2\u6237\u7aef\nredis_client = redis.Redis(host='localhost', port=6379, db=0)\n\ndef get_task_result_with_cache(task_id):\n    # \u5c1d\u8bd5\u4ece Redis \u7f13\u5b58\u83b7\u53d6\n    cache_key = f\"task_result:{task_id}\"\n    cached_result = redis_client.get(cache_key)\n\n    if cached_result:\n        return json.loads(cached_result)\n\n    # \u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u4ece\u6570\u636e\u5e93\u83b7\u53d6\n    result = get_task_result_from_db(task_id)\n\n    if result:\n        # \u5b58\u5165\u7f13\u5b58\uff0c\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\n        redis_client.setex(cache_key, 3600, json.dumps(result))\n\n    return result\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#2_2","title":"2. \u8fde\u63a5\u6c60\u7ba1\u7406","text":"<p>\u6570\u636e\u5e93\u8fde\u63a5\u6c60\uff1a - \u9884\u521b\u5efa\u548c\u590d\u7528\u6570\u636e\u5e93\u8fde\u63a5 - \u907f\u514d\u9891\u7e41\u5efa\u7acb\u548c\u5173\u95ed\u8fde\u63a5 - \u63a7\u5236\u6700\u5927\u8fde\u63a5\u6570\uff0c\u9632\u6b62\u8d44\u6e90\u8017\u5c3d</p> <p>HTTP \u8fde\u63a5\u6c60\uff1a - \u590d\u7528 HTTP \u8fde\u63a5 - \u51cf\u5c11 TCP \u63e1\u624b\u5f00\u9500 - \u63a7\u5236\u5e76\u53d1\u8fde\u63a5\u6570</p> <p>\u4ee3\u7801\u793a\u4f8b\uff08requests \u4f1a\u8bdd\uff09\uff1a <pre><code>import requests\n\n# \u521b\u5efa\u4f1a\u8bdd\u5bf9\u8c61\uff0c\u590d\u7528\u8fde\u63a5\nsession = requests.Session()\nadapter = requests.adapters.HTTPAdapter(\n    pool_connections=10,\n    pool_maxsize=100,\n    max_retries=3\n)\nsession.mount('http://', adapter)\nsession.mount('https://', adapter)\n\ndef call_ocr_service(image_data):\n    try:\n        # \u4f7f\u7528\u4f1a\u8bdd\u53d1\u9001\u8bf7\u6c42\uff0c\u590d\u7528\u8fde\u63a5\n        response = session.post(\n            OCR_SERVICE_URL,\n            files={\"image\": (\"image.png\", image_data, \"image/png\")},\n            timeout=OCR_TIMEOUT\n        )\n        # \u5904\u7406\u54cd\u5e94...\n    except requests.RequestException as e:\n        # \u5904\u7406\u5f02\u5e38...\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#3_4","title":"3. \u5f02\u6b65\u5904\u7406\u4f18\u5316","text":"<p>\u4efb\u52a1\u4f18\u5148\u7ea7\uff1a - \u5b9e\u73b0\u4f18\u5148\u7ea7\u961f\u5217 - \u4f18\u5148\u5904\u7406\u91cd\u8981\u4efb\u52a1 - \u907f\u514d\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u963b\u585e\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1</p> <p>\u6279\u91cf\u5904\u7406\uff1a - \u5408\u5e76\u5c0f\u4efb\u52a1\u4e3a\u6279\u91cf\u4efb\u52a1 - \u51cf\u5c11\u5904\u7406\u548c\u901a\u4fe1\u5f00\u9500 - \u63d0\u9ad8\u6574\u4f53\u541e\u5410\u91cf</p> <p>\u4ee3\u7801\u793a\u4f8b\uff08\u4f18\u5148\u7ea7\u961f\u5217\uff09\uff1a <pre><code>import queue\n\n# \u521b\u5efa\u4f18\u5148\u7ea7\u961f\u5217\ntask_queue = queue.PriorityQueue()\n\n# \u6dfb\u52a0\u4efb\u52a1\u5230\u961f\u5217\uff0c\u4f18\u5148\u7ea7\u4e3a 1\uff08\u9ad8\u4f18\u5148\u7ea7\uff09\ndef add_high_priority_task(task):\n    task_queue.put((1, task))\n\n# \u6dfb\u52a0\u4efb\u52a1\u5230\u961f\u5217\uff0c\u4f18\u5148\u7ea7\u4e3a 2\uff08\u4e2d\u4f18\u5148\u7ea7\uff09\ndef add_medium_priority_task(task):\n    task_queue.put((2, task))\n\n# \u6dfb\u52a0\u4efb\u52a1\u5230\u961f\u5217\uff0c\u4f18\u5148\u7ea7\u4e3a 3\uff08\u4f4e\u4f18\u5148\u7ea7\uff09\ndef add_low_priority_task(task):\n    task_queue.put((3, task))\n\n# \u5de5\u4f5c\u7ebf\u7a0b\u51fd\u6570\ndef worker():\n    while True:\n        # \u83b7\u53d6\u4efb\u52a1\uff0c\u4f18\u5148\u7ea7\u9ad8\u7684\u5148\u5904\u7406\n        priority, task = task_queue.get()\n        try:\n            # \u6839\u636e\u4efb\u52a1\u7c7b\u578b\u9009\u62e9\u5904\u7406\u7b56\u7565\n            process_task(task)\n        except Exception as e:\n            # \u9519\u8bef\u5904\u7406\n            update_task_status(task['id'], 'error', str(e))\n        finally:\n            task_queue.task_done()\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#_9","title":"\u76d1\u63a7\u4e0e\u544a\u8b66","text":"<p>\u6709\u6548\u7684\u76d1\u63a7\u548c\u544a\u8b66\u7cfb\u7edf\u662f\u786e\u4fdd\u9ad8\u53ef\u7528\u6027\u7684\u5173\u952e\u7ec4\u6210\u90e8\u5206\uff1a</p>"},{"location":"deployment/scalability-fault-tolerance/#1_5","title":"1. \u76d1\u63a7\u6307\u6807","text":"<p>\u7cfb\u7edf\u6307\u6807\uff1a - CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u4f7f\u7528\u7387 - \u7f51\u7edc\u6d41\u91cf\u548c\u8fde\u63a5\u6570 - \u8fdb\u7a0b\u72b6\u6001\u548c\u8d44\u6e90\u4f7f\u7528</p> <p>\u5e94\u7528\u6307\u6807\uff1a - \u8bf7\u6c42\u54cd\u5e94\u65f6\u95f4 - \u8bf7\u6c42\u6210\u529f\u7387\u548c\u9519\u8bef\u7387 - \u4efb\u52a1\u961f\u5217\u957f\u5ea6\u548c\u5904\u7406\u65f6\u95f4 - \u7f13\u5b58\u547d\u4e2d\u7387</p> <p>\u4e1a\u52a1\u6307\u6807\uff1a - \u4efb\u52a1\u5b8c\u6210\u7387 - OCR \u548c LLM \u670d\u52a1\u8c03\u7528\u6210\u529f\u7387 - \u5904\u7406\u5ef6\u8fdf\u548c\u541e\u5410\u91cf</p>"},{"location":"deployment/scalability-fault-tolerance/#2_3","title":"2. \u544a\u8b66\u7b56\u7565","text":"<p>\u544a\u8b66\u7ea7\u522b\uff1a - \u4fe1\u606f\uff1a\u9700\u8981\u5173\u6ce8\u4f46\u4e0d\u7d27\u6025\u7684\u4e8b\u4ef6 - \u8b66\u544a\uff1a\u53ef\u80fd\u5bfc\u81f4\u95ee\u9898\u7684\u4e8b\u4ef6 - \u9519\u8bef\uff1a\u5f71\u54cd\u529f\u80fd\u4f46\u4e0d\u5f71\u54cd\u6574\u4f53\u670d\u52a1\u7684\u4e8b\u4ef6 - \u4e25\u91cd\uff1a\u5f71\u54cd\u6574\u4f53\u670d\u52a1\u53ef\u7528\u6027\u7684\u4e8b\u4ef6</p> <p>\u544a\u8b66\u6e20\u9053\uff1a - \u7535\u5b50\u90ae\u4ef6\uff1a\u975e\u7d27\u6025\u544a\u8b66 - \u77ed\u4fe1/\u7535\u8bdd\uff1a\u7d27\u6025\u544a\u8b66 - \u804a\u5929\u5de5\u5177\uff08\u5982 Slack\uff09\uff1a\u56e2\u961f\u534f\u4f5c\u544a\u8b66 - \u544a\u8b66\u4eea\u8868\u677f\uff1a\u96c6\u4e2d\u67e5\u770b\u548c\u7ba1\u7406\u544a\u8b66</p> <p>\u544a\u8b66\u89c4\u5219\u793a\u4f8b\uff1a <pre><code># Prometheus \u544a\u8b66\u89c4\u5219\ngroups:\n- name: docusnap_alerts\n  rules:\n  - alert: HighCPUUsage\n    expr: avg(rate(process_cpu_seconds_total{job=\"docusnap-app\"}[5m])) * 100 &gt; 80\n    for: 5m\n    labels:\n      severity: warning\n    annotations:\n      summary: \"High CPU usage detected\"\n      description: \"CPU usage is above 80% for 5 minutes on {{ $labels.instance }}\"\n\n  - alert: HighErrorRate\n    expr: rate(http_requests_total{job=\"docusnap-app\",status=~\"5..\"}[5m]) / rate(http_requests_total{job=\"docusnap-app\"}[5m]) * 100 &gt; 5\n    for: 2m\n    labels:\n      severity: error\n    annotations:\n      summary: \"High error rate detected\"\n      description: \"Error rate is above 5% for 2 minutes on {{ $labels.instance }}\"\n\n  - alert: ServiceDown\n    expr: up{job=\"docusnap-app\"} == 0\n    for: 1m\n    labels:\n      severity: critical\n    annotations:\n      summary: \"Service is down\"\n      description: \"Service {{ $labels.job }} is down on {{ $labels.instance }}\"\n</code></pre></p>"},{"location":"deployment/scalability-fault-tolerance/#_10","title":"\u707e\u96be\u6062\u590d","text":"<p>\u707e\u96be\u6062\u590d\u8ba1\u5212\u662f\u786e\u4fdd\u7cfb\u7edf\u5728\u4e25\u91cd\u6545\u969c\u6216\u707e\u96be\u60c5\u51b5\u4e0b\u80fd\u591f\u6062\u590d\u6b63\u5e38\u8fd0\u884c\u7684\u5173\u952e\uff1a</p>"},{"location":"deployment/scalability-fault-tolerance/#1_6","title":"1. \u6062\u590d\u7b56\u7565","text":"<p>\u5907\u4efd\u6062\u590d\uff1a - \u5b9a\u671f\u5907\u4efd\u6570\u636e\u548c\u914d\u7f6e - \u6d4b\u8bd5\u5907\u4efd\u7684\u6709\u6548\u6027 - \u5236\u5b9a\u6062\u590d\u6d41\u7a0b\u548c\u65f6\u95f4\u76ee\u6807</p> <p>\u51b7\u5907\u4efd\uff1a - \u51c6\u5907\u5907\u7528\u73af\u5883\u548c\u8d44\u6e90 - \u5728\u4e3b\u73af\u5883\u4e0d\u53ef\u7528\u65f6\u624b\u52a8\u6fc0\u6d3b - \u6210\u672c\u4f4e\u4f46\u6062\u590d\u65f6\u95f4\u957f</p> <p>\u70ed\u5907\u4efd\uff1a - \u4fdd\u6301\u5907\u7528\u73af\u5883\u8fd0\u884c - \u5b9e\u65f6\u6216\u8fd1\u5b9e\u65f6\u6570\u636e\u540c\u6b65 - \u5feb\u901f\u6545\u969c\u8f6c\u79fb\uff0c\u6062\u590d\u65f6\u95f4\u77ed</p>"},{"location":"deployment/scalability-fault-tolerance/#2_4","title":"2. \u6062\u590d\u6d41\u7a0b","text":"<p>\u6062\u590d\u6b65\u9aa4\uff1a 1. \u786e\u8ba4\u4e3b\u73af\u5883\u4e0d\u53ef\u7528 2. \u6fc0\u6d3b\u5907\u7528\u73af\u5883 3. \u9a8c\u8bc1\u6570\u636e\u5b8c\u6574\u6027 4. \u5207\u6362\u6d41\u91cf\u5230\u5907\u7528\u73af\u5883 5. \u76d1\u63a7\u5907\u7528\u73af\u5883\u8fd0\u884c\u72b6\u51b5 6. \u4fee\u590d\u4e3b\u73af\u5883\u95ee\u9898 7. \u540c\u6b65\u6570\u636e\u56de\u4e3b\u73af\u5883 8. \u5207\u6362\u6d41\u91cf\u56de\u4e3b\u73af\u5883</p> <p>\u6062\u590d\u65f6\u95f4\u76ee\u6807\uff08RTO\uff09\uff1a - \u5173\u952e\u670d\u52a1\uff1a&lt; 1 \u5c0f\u65f6 - \u975e\u5173\u952e\u670d\u52a1\uff1a&lt; 4 \u5c0f\u65f6</p> <p>\u6062\u590d\u70b9\u76ee\u6807\uff08RPO\uff09\uff1a - \u6570\u636e\u5e93\uff1a&lt; 15 \u5206\u949f - \u914d\u7f6e\u6587\u4ef6\uff1a&lt; 24 \u5c0f\u65f6</p>"},{"location":"deployment/scalability-fault-tolerance/#_11","title":"\u603b\u7ed3","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u7684\u53ef\u6269\u5c55\u6027\u548c\u5bb9\u9519\u6027\u8bbe\u8ba1\u8003\u8651\u4e86\u591a\u65b9\u9762\u56e0\u7d20\uff0c\u5305\u62ec\u6c34\u5e73\u6269\u5c55\u3001\u5782\u76f4\u6269\u5c55\u3001\u670d\u52a1\u5197\u4f59\u3001\u6545\u969c\u68c0\u6d4b\u4e0e\u6062\u590d\u3001\u6570\u636e\u6301\u4e45\u6027\u4e0e\u5907\u4efd\u3001\u9ad8\u53ef\u7528\u6027\u8bbe\u8ba1\u3001\u6027\u80fd\u4f18\u5316\u3001\u76d1\u63a7\u4e0e\u544a\u8b66\u4ee5\u53ca\u707e\u96be\u6062\u590d\u7b49\u3002</p> <p>\u901a\u8fc7\u8fd9\u4e9b\u8bbe\u8ba1\uff0c\u7cfb\u7edf\u80fd\u591f\u5e94\u5bf9\u589e\u957f\u7684\u8d1f\u8f7d\u3001\u5904\u7406\u7ec4\u4ef6\u6545\u969c\uff0c\u5e76\u786e\u4fdd\u670d\u52a1\u7684\u9ad8\u53ef\u7528\u6027\u3002\u6839\u636e\u4e0d\u540c\u7684\u90e8\u7f72\u89c4\u6a21\u548c\u9700\u6c42\uff0c\u53ef\u4ee5\u9009\u62e9\u9002\u5f53\u7684\u7b56\u7565\u548c\u6280\u672f\uff0c\u6784\u5efa\u4e00\u4e2a\u53ef\u9760\u3001\u9ad8\u6548\u7684\u751f\u4ea7\u73af\u5883\u3002</p> <p>\u5728\u5b9e\u65bd\u8fd9\u4e9b\u8bbe\u8ba1\u65f6\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u6743\u8861\uff0c\u8003\u8651\u6210\u672c\u3001\u590d\u6742\u6027\u548c\u6536\u76ca\uff0c\u9009\u62e9\u6700\u9002\u5408\u5f53\u524d\u9700\u6c42\u548c\u672a\u6765\u53d1\u5c55\u7684\u89e3\u51b3\u65b9\u6848\u3002</p>"},{"location":"deployment/tech-stack/","title":"\u6280\u672f\u6808","text":"<p>\u672c\u9875\u9762\u8be6\u7ec6\u4ecb\u7ecd DocuSnap-Backend \u7cfb\u7edf\u90e8\u7f72\u4e2d\u4f7f\u7528\u7684\u6280\u672f\u6808\uff0c\u5305\u62ec\u670d\u52a1\u5668\u73af\u5883\u3001\u8fd0\u884c\u65f6\u73af\u5883\u3001Web \u670d\u52a1\u5668\u3001\u6570\u636e\u5e93\u3001\u5bb9\u5668\u6280\u672f\u548c\u76d1\u63a7\u5de5\u5177\u7b49\u3002</p>"},{"location":"deployment/tech-stack/#_2","title":"\u670d\u52a1\u5668\u73af\u5883","text":""},{"location":"deployment/tech-stack/#_3","title":"\u64cd\u4f5c\u7cfb\u7edf","text":"<p>\u63a8\u8350\u9009\u62e9\uff1a - Ubuntu Server 20.04 LTS \u6216\u66f4\u9ad8\u7248\u672c   - \u5e7f\u6cdb\u7684\u793e\u533a\u652f\u6301   - \u957f\u671f\u652f\u6301\uff08LTS\uff09\u63d0\u4f9b\u7a33\u5b9a\u6027   - \u4e30\u5bcc\u7684\u8f6f\u4ef6\u5305\u8d44\u6e90   - \u826f\u597d\u7684\u5b89\u5168\u6027\u548c\u6027\u80fd</p> <p>\u5176\u4ed6\u9009\u9879\uff1a - CentOS 8 / Rocky Linux 8   - \u4f01\u4e1a\u7ea7\u7a33\u5b9a\u6027   - \u957f\u671f\u652f\u6301   - \u4e0e RHEL \u517c\u5bb9 - Debian 11 \u6216\u66f4\u9ad8\u7248\u672c   - \u6781\u9ad8\u7684\u7a33\u5b9a\u6027   - \u8f7b\u91cf\u7ea7   - \u9002\u5408\u8d44\u6e90\u53d7\u9650\u73af\u5883</p>"},{"location":"deployment/tech-stack/#_4","title":"\u786c\u4ef6\u914d\u7f6e","text":"<p>\u5e94\u7528\u670d\u52a1\u5668\uff1a - CPU\uff1a8+ \u6838\u5fc3\uff0c\u652f\u6301 AVX2 \u6307\u4ee4\u96c6 - \u5185\u5b58\uff1a16+ GB RAM - \u5b58\u50a8\uff1a100+ GB SSD\uff08\u63a8\u8350 NVMe\uff09 - \u7f51\u7edc\uff1a1+ Gbps \u7f51\u7edc\u63a5\u53e3</p> <p>OCR \u670d\u52a1\u5668\uff1a - CPU\uff1a8+ \u6838\u5fc3\uff0c\u652f\u6301 AVX2 \u6307\u4ee4\u96c6 - GPU\uff08\u63a8\u8350\uff09\uff1aNVIDIA GPU\uff0c8+ GB \u663e\u5b58 - \u5185\u5b58\uff1a16+ GB RAM - \u5b58\u50a8\uff1a100+ GB SSD - \u7f51\u7edc\uff1a1+ Gbps \u7f51\u7edc\u63a5\u53e3</p> <p>\u6570\u636e\u5e93\u670d\u52a1\u5668\uff08\u5927\u89c4\u6a21\u90e8\u7f72\uff09\uff1a - CPU\uff1a8+ \u6838\u5fc3 - \u5185\u5b58\uff1a16+ GB RAM - \u5b58\u50a8\uff1a200+ GB SSD\uff08\u63a8\u8350 RAID \u914d\u7f6e\uff09 - \u7f51\u7edc\uff1a1+ Gbps \u7f51\u7edc\u63a5\u53e3</p>"},{"location":"deployment/tech-stack/#_5","title":"\u8fd0\u884c\u65f6\u73af\u5883","text":""},{"location":"deployment/tech-stack/#python","title":"Python \u73af\u5883","text":"<p>Python \u7248\u672c\uff1a - Python 3.8 \u6216\u66f4\u9ad8\u7248\u672c\uff08\u63a8\u8350 3.9+\uff09</p> <p>\u865a\u62df\u73af\u5883\uff1a - virtualenv\uff1a\u8f7b\u91cf\u7ea7\u865a\u62df\u73af\u5883 - conda\uff08\u53ef\u9009\uff09\uff1a\u9002\u7528\u4e8e\u9700\u8981\u590d\u6742\u4f9d\u8d56\u7ba1\u7406\u7684\u573a\u666f</p> <p>\u5305\u7ba1\u7406\uff1a - pip\uff1a\u5b89\u88c5 Python \u4f9d\u8d56 - pip-tools\uff08\u63a8\u8350\uff09\uff1a\u9501\u5b9a\u4f9d\u8d56\u7248\u672c\uff0c\u786e\u4fdd\u73af\u5883\u4e00\u81f4\u6027</p> <p>\u4e3b\u8981\u4f9d\u8d56\uff1a <pre><code>Flask==3.1.1\ngunicorn==20.1.0\nzhipuai==2.1.5\nWerkzeug==3.0.1\nrequests==2.31.0\npycryptodome==3.19.0\n</code></pre></p>"},{"location":"deployment/tech-stack/#_6","title":"\u4f9d\u8d56\u7ba1\u7406","text":"<p>\u4f9d\u8d56\u6587\u4ef6\uff1a - requirements.txt\uff1a\u5217\u51fa\u6240\u6709\u4f9d\u8d56\u53ca\u5176\u7248\u672c - requirements-dev.txt\uff08\u53ef\u9009\uff09\uff1a\u5f00\u53d1\u73af\u5883\u7279\u5b9a\u4f9d\u8d56</p> <p>\u7248\u672c\u63a7\u5236\uff1a - \u9501\u5b9a\u6240\u6709\u4f9d\u8d56\u7684\u5177\u4f53\u7248\u672c\uff0c\u907f\u514d\u610f\u5916\u5347\u7ea7 - \u5b9a\u671f\u66f4\u65b0\u4f9d\u8d56\uff0c\u4fee\u590d\u5b89\u5168\u6f0f\u6d1e - \u4f7f\u7528 <code>pip-compile</code> \u751f\u6210\u4f9d\u8d56\u9501\u6587\u4ef6</p>"},{"location":"deployment/tech-stack/#web","title":"Web \u670d\u52a1\u5668","text":""},{"location":"deployment/tech-stack/#wsgi","title":"WSGI \u670d\u52a1\u5668","text":"<p>Gunicorn\uff1a - \u7248\u672c\uff1a20.1.0 \u6216\u66f4\u9ad8 - \u8f7b\u91cf\u7ea7\u3001\u9ad8\u6027\u80fd\u7684 WSGI \u670d\u52a1\u5668 - \u652f\u6301\u591a\u5de5\u4f5c\u8fdb\u7a0b\u548c\u591a\u7ebf\u7a0b - \u914d\u7f6e\u793a\u4f8b\uff1a   <pre><code>gunicorn --workers=4 --threads=2 --bind=0.0.0.0:8000 app:app\n</code></pre></p> <p>\u914d\u7f6e\u53c2\u6570\uff1a - workers\uff1a\u5de5\u4f5c\u8fdb\u7a0b\u6570\uff0c\u5efa\u8bae\u8bbe\u7f6e\u4e3a CPU \u6838\u5fc3\u6570\u7684 2-4 \u500d - threads\uff1a\u6bcf\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u7684\u7ebf\u7a0b\u6570 - timeout\uff1a\u8bf7\u6c42\u8d85\u65f6\u65f6\u95f4\uff0c\u5efa\u8bae\u8bbe\u7f6e\u4e3a 120 \u79d2\u6216\u66f4\u957f - max-requests\uff1a\u5de5\u4f5c\u8fdb\u7a0b\u5904\u7406\u7684\u6700\u5927\u8bf7\u6c42\u6570\uff0c\u7528\u4e8e\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f</p>"},{"location":"deployment/tech-stack/#_7","title":"\u53cd\u5411\u4ee3\u7406","text":"<p>Nginx\uff1a - \u7248\u672c\uff1a1.18.0 \u6216\u66f4\u9ad8 - \u9ad8\u6027\u80fd\u7684 HTTP \u548c\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668 - \u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u3001SSL \u7ec8\u7ed3\u548c\u9759\u6001\u6587\u4ef6\u670d\u52a1 - \u914d\u7f6e\u793a\u4f8b\uff1a   <pre><code>server {\n    listen 80;\n    server_name example.com;\n    return 301 https://$host$request_uri;\n}\n\nserver {\n    listen 443 ssl;\n    server_name example.com;\n\n    ssl_certificate /path/to/cert.pem;\n    ssl_certificate_key /path/to/key.pem;\n    ssl_protocols TLSv1.2 TLSv1.3;\n\n    location / {\n        proxy_pass http://127.0.0.1:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_read_timeout 120s;\n    }\n\n    location /static {\n        alias /path/to/static;\n        expires 30d;\n    }\n}\n</code></pre></p> <p>\u914d\u7f6e\u91cd\u70b9\uff1a - SSL/TLS \u914d\u7f6e\uff0c\u786e\u4fdd\u5b89\u5168\u901a\u4fe1 - \u4ee3\u7406\u8d85\u65f6\u8bbe\u7f6e\uff0c\u9002\u5e94\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u8bf7\u6c42 - \u8bf7\u6c42\u5934\u4f20\u9012\uff0c\u786e\u4fdd\u5e94\u7528\u80fd\u83b7\u53d6\u5ba2\u6237\u7aef\u4fe1\u606f - \u9759\u6001\u6587\u4ef6\u670d\u52a1\uff0c\u63d0\u9ad8\u6027\u80fd</p>"},{"location":"deployment/tech-stack/#_8","title":"\u6570\u636e\u5e93","text":""},{"location":"deployment/tech-stack/#sqlite","title":"SQLite","text":"<p>\u7248\u672c\uff1a - SQLite 3.30.0 \u6216\u66f4\u9ad8\u7248\u672c</p> <p>\u914d\u7f6e\uff1a - \u6570\u636e\u5e93\u6587\u4ef6\u8def\u5f84\uff1a<code>/path/to/docusnap.db</code> - \u6743\u9650\u8bbe\u7f6e\uff1a\u786e\u4fdd\u5e94\u7528\u670d\u52a1\u5668\u6709\u8bfb\u5199\u6743\u9650 - \u5b9a\u671f\u5907\u4efd\uff1a\u4f7f\u7528 <code>sqlite3_backup</code> API \u6216\u6587\u4ef6\u590d\u5236</p> <p>\u4f18\u5316\uff1a - \u542f\u7528 WAL \u6a21\u5f0f\uff0c\u63d0\u9ad8\u5e76\u53d1\u6027\u80fd - \u5b9a\u671f\u6267\u884c VACUUM\uff0c\u4f18\u5316\u6570\u636e\u5e93\u5927\u5c0f - \u6dfb\u52a0\u9002\u5f53\u7684\u7d22\u5f15\uff0c\u63d0\u9ad8\u67e5\u8be2\u6027\u80fd</p>"},{"location":"deployment/tech-stack/#postgresql","title":"PostgreSQL\uff08\u5927\u89c4\u6a21\u90e8\u7f72\u63a8\u8350\uff09","text":"<p>\u7248\u672c\uff1a - PostgreSQL 12 \u6216\u66f4\u9ad8\u7248\u672c</p> <p>\u914d\u7f6e\uff1a - \u8fde\u63a5\u6c60\uff1a\u4f7f\u7528 pgBouncer \u6216\u5e94\u7528\u5185\u8fde\u63a5\u6c60 - \u4e3b\u4ece\u590d\u5236\uff1a\u63d0\u9ad8\u53ef\u7528\u6027\u548c\u8bfb\u53d6\u6027\u80fd - \u5b9a\u671f\u5907\u4efd\uff1a\u4f7f\u7528 pg_dump \u6216\u8fde\u7eed\u5f52\u6863</p> <p>\u8fc1\u79fb\u65b9\u6848\uff1a - \u4ece SQLite \u8fc1\u79fb\u5230 PostgreSQL \u7684\u6b65\u9aa4 - \u4f7f\u7528 SQLAlchemy \u4f5c\u4e3a ORM\uff0c\u7b80\u5316\u8fc1\u79fb - \u6570\u636e\u9a8c\u8bc1\u548c\u4e00\u81f4\u6027\u68c0\u67e5</p>"},{"location":"deployment/tech-stack/#_9","title":"\u5bb9\u5668\u6280\u672f","text":""},{"location":"deployment/tech-stack/#docker","title":"Docker","text":"<p>\u7248\u672c\uff1a - Docker 19.03 \u6216\u66f4\u9ad8\u7248\u672c</p> <p>\u955c\u50cf\uff1a - \u5e94\u7528\u670d\u52a1\u955c\u50cf\uff1a\u57fa\u4e8e Python \u5b98\u65b9\u955c\u50cf - OCR \u670d\u52a1\u955c\u50cf\uff1a\u5305\u542b CnOCR \u548c\u4f9d\u8d56</p> <p>Dockerfile \u793a\u4f8b\uff08\u5e94\u7528\u670d\u52a1\uff09\uff1a <pre><code>FROM python:3.9-slim\n\nWORKDIR /app\n\n# \u5b89\u88c5\u4f9d\u8d56\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# \u590d\u5236\u5e94\u7528\u4ee3\u7801\nCOPY . .\n\n# \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\nENV PYTHONUNBUFFERED=1\nENV FLASK_APP=app.py\n\n# \u66b4\u9732\u7aef\u53e3\nEXPOSE 8000\n\n# \u542f\u52a8\u547d\u4ee4\nCMD [\"gunicorn\", \"--workers=4\", \"--threads=2\", \"--bind=0.0.0.0:8000\", \"app:app\"]\n</code></pre></p>"},{"location":"deployment/tech-stack/#docker-compose","title":"Docker Compose","text":"<p>\u7248\u672c\uff1a - Docker Compose 1.25 \u6216\u66f4\u9ad8\u7248\u672c</p> <p>\u914d\u7f6e\u793a\u4f8b\uff1a <pre><code>version: '3'\n\nservices:\n  app:\n    build: .\n    ports:\n      - \"8000:8000\"\n    volumes:\n      - ./data:/app/data\n    environment:\n      - FLASK_ENV=production\n    depends_on:\n      - ocr-service\n\n  ocr-service:\n    build: ./ocr-service\n    ports:\n      - \"5001:5001\"\n    volumes:\n      - ./models:/app/models\n\n  nginx:\n    image: nginx:latest\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./nginx/conf.d:/etc/nginx/conf.d\n      - ./nginx/ssl:/etc/nginx/ssl\n    depends_on:\n      - app\n</code></pre></p>"},{"location":"deployment/tech-stack/#kubernetes","title":"Kubernetes\uff08\u5927\u89c4\u6a21\u90e8\u7f72\uff09","text":"<p>\u7248\u672c\uff1a - Kubernetes 1.18 \u6216\u66f4\u9ad8\u7248\u672c</p> <p>\u7ec4\u4ef6\uff1a - Deployment\uff1a\u7ba1\u7406\u5e94\u7528\u548c OCR \u670d\u52a1\u7684 Pod - Service\uff1a\u63d0\u4f9b\u5185\u90e8\u670d\u52a1\u53d1\u73b0\u548c\u8d1f\u8f7d\u5747\u8861 - Ingress\uff1a\u7ba1\u7406\u5916\u90e8\u8bbf\u95ee\u8def\u7531 - ConfigMap\uff1a\u7ba1\u7406\u914d\u7f6e - Secret\uff1a\u7ba1\u7406\u654f\u611f\u4fe1\u606f - PersistentVolume\uff1a\u63d0\u4f9b\u6301\u4e45\u5316\u5b58\u50a8</p> <p>\u914d\u7f6e\u793a\u4f8b\uff08\u5e94\u7528\u670d\u52a1\u90e8\u7f72\uff09\uff1a <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: docusnap-app\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: docusnap-app\n  template:\n    metadata:\n      labels:\n        app: docusnap-app\n    spec:\n      containers:\n      - name: docusnap-app\n        image: docusnap-app:latest\n        ports:\n        - containerPort: 8000\n        resources:\n          requests:\n            memory: \"512Mi\"\n            cpu: \"500m\"\n          limits:\n            memory: \"1Gi\"\n            cpu: \"1000m\"\n        volumeMounts:\n        - name: data-volume\n          mountPath: /app/data\n      volumes:\n      - name: data-volume\n        persistentVolumeClaim:\n          claimName: docusnap-data-pvc\n</code></pre></p>"},{"location":"deployment/tech-stack/#_10","title":"\u76d1\u63a7\u4e0e\u65e5\u5fd7","text":""},{"location":"deployment/tech-stack/#_11","title":"\u76d1\u63a7\u5de5\u5177","text":"<p>Prometheus\uff1a - \u6536\u96c6\u548c\u5b58\u50a8\u6307\u6807\u6570\u636e - \u652f\u6301\u81ea\u5b9a\u4e49\u6307\u6807\u548c\u544a\u8b66\u89c4\u5219 - \u4e0e Grafana \u96c6\u6210\uff0c\u63d0\u4f9b\u53ef\u89c6\u5316\u754c\u9762</p> <p>\u914d\u7f6e\u793a\u4f8b\uff1a <pre><code>global:\n  scrape_interval: 15s\n\nscrape_configs:\n  - job_name: 'docusnap-app'\n    static_configs:\n      - targets: ['docusnap-app:8000']\n  - job_name: 'ocr-service'\n    static_configs:\n      - targets: ['ocr-service:5001']\n</code></pre></p>"},{"location":"deployment/tech-stack/#_12","title":"\u65e5\u5fd7\u7ba1\u7406","text":"<p>ELK \u6808\uff1a - Elasticsearch\uff1a\u5b58\u50a8\u548c\u7d22\u5f15\u65e5\u5fd7 - Logstash\uff1a\u5904\u7406\u548c\u8f6c\u6362\u65e5\u5fd7 - Kibana\uff1a\u53ef\u89c6\u5316\u548c\u5206\u6790\u65e5\u5fd7</p> <p>Fluentd/Fluent Bit\uff1a - \u6536\u96c6\u5bb9\u5668\u548c\u5e94\u7528\u65e5\u5fd7 - \u8f6c\u53d1\u5230 Elasticsearch \u6216\u5176\u4ed6\u5b58\u50a8</p> <p>\u65e5\u5fd7\u914d\u7f6e\uff08Flask \u5e94\u7528\uff09\uff1a <pre><code>import logging\nfrom logging.handlers import RotatingFileHandler\n\nhandler = RotatingFileHandler('app.log', maxBytes=10000000, backupCount=10)\nhandler.setFormatter(logging.Formatter(\n    '%(asctime)s %(levelname)s: %(message)s [in %(pathname)s:%(lineno)d]'\n))\nhandler.setLevel(logging.INFO)\napp.logger.addHandler(handler)\n</code></pre></p>"},{"location":"deployment/tech-stack/#_13","title":"\u5b89\u5168\u5de5\u5177","text":""},{"location":"deployment/tech-stack/#ssltls","title":"SSL/TLS","text":"<p>Let's Encrypt\uff1a - \u514d\u8d39\u7684 SSL/TLS \u8bc1\u4e66 - \u4f7f\u7528 Certbot \u81ea\u52a8\u66f4\u65b0\u8bc1\u4e66 - \u914d\u7f6e HTTPS \u91cd\u5b9a\u5411\u548c HSTS</p> <p>\u914d\u7f6e\u793a\u4f8b\uff1a <pre><code>certbot --nginx -d example.com -d www.example.com\n</code></pre></p>"},{"location":"deployment/tech-stack/#web_1","title":"Web \u5e94\u7528\u9632\u706b\u5899","text":"<p>ModSecurity\uff1a - \u5f00\u6e90 Web \u5e94\u7528\u9632\u706b\u5899 - \u4e0e Nginx \u96c6\u6210 - \u63d0\u4f9b OWASP \u6838\u5fc3\u89c4\u5219\u96c6</p> <p>\u914d\u7f6e\u793a\u4f8b\uff1a <pre><code># \u5728 Nginx \u914d\u7f6e\u4e2d\u52a0\u8f7d ModSecurity\nload_module modules/ngx_http_modsecurity_module.so;\n\nserver {\n    # ... \u5176\u4ed6\u914d\u7f6e ...\n\n    modsecurity on;\n    modsecurity_rules_file /etc/nginx/modsecurity/main.conf;\n\n    # ... \u5176\u4ed6\u914d\u7f6e ...\n}\n</code></pre></p>"},{"location":"deployment/tech-stack/#_14","title":"\u7f51\u7edc\u5b89\u5168","text":"<p>UFW/iptables\uff1a - \u914d\u7f6e\u9632\u706b\u5899\u89c4\u5219\uff0c\u9650\u5236\u7aef\u53e3\u8bbf\u95ee - \u53ea\u5f00\u653e\u5fc5\u8981\u7684\u7aef\u53e3\uff0880, 443, 22\uff09 - \u9650\u5236 SSH \u8bbf\u95ee\u6765\u6e90</p> <p>\u914d\u7f6e\u793a\u4f8b\uff1a <pre><code># \u5141\u8bb8 SSH, HTTP, HTTPS\nufw allow 22/tcp\nufw allow 80/tcp\nufw allow 443/tcp\n\n# \u62d2\u7edd\u5176\u4ed6\u6240\u6709\u5165\u7ad9\u8fde\u63a5\nufw default deny incoming\n\n# \u5141\u8bb8\u6240\u6709\u51fa\u7ad9\u8fde\u63a5\nufw default allow outgoing\n\n# \u542f\u7528\u9632\u706b\u5899\nufw enable\n</code></pre></p>"},{"location":"deployment/tech-stack/#_15","title":"\u81ea\u52a8\u5316\u90e8\u7f72","text":""},{"location":"deployment/tech-stack/#cicd","title":"CI/CD \u5de5\u5177","text":"<p>GitHub Actions / GitLab CI\uff1a - \u81ea\u52a8\u5316\u6784\u5efa\u3001\u6d4b\u8bd5\u548c\u90e8\u7f72\u6d41\u7a0b - \u652f\u6301\u591a\u73af\u5883\u90e8\u7f72 - \u96c6\u6210\u4ee3\u7801\u8d28\u91cf\u68c0\u67e5\u548c\u5b89\u5168\u626b\u63cf</p> <p>\u914d\u7f6e\u793a\u4f8b\uff08GitHub Actions\uff09\uff1a <pre><code>name: Deploy DocuSnap Backend\n\non:\n  push:\n    branches: [ main ]\n\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v2\n\n    - name: Set up Python\n      uses: actions/setup-python@v2\n      with:\n        python-version: '3.9'\n\n    - name: Install dependencies\n      run: |\n        python -m pip install --upgrade pip\n        pip install -r requirements.txt\n\n    - name: Run tests\n      run: |\n        pytest\n\n    - name: Build Docker image\n      run: |\n        docker build -t docusnap-app:latest .\n\n    - name: Deploy to production\n      if: github.ref == 'refs/heads/main'\n      run: |\n        # \u90e8\u7f72\u811a\u672c\n        ./deploy.sh\n</code></pre></p>"},{"location":"deployment/tech-stack/#_16","title":"\u914d\u7f6e\u7ba1\u7406","text":"<p>Ansible\uff1a - \u81ea\u52a8\u5316\u670d\u52a1\u5668\u914d\u7f6e\u548c\u5e94\u7528\u90e8\u7f72 - \u58f0\u660e\u5f0f\u914d\u7f6e\uff0c\u786e\u4fdd\u73af\u5883\u4e00\u81f4\u6027 - \u652f\u6301\u591a\u670d\u52a1\u5668\u5e76\u884c\u90e8\u7f72</p> <p>\u914d\u7f6e\u793a\u4f8b\uff08Ansible Playbook\uff09\uff1a <pre><code>---\n- name: Deploy DocuSnap Backend\n  hosts: app_servers\n  become: yes\n\n  tasks:\n    - name: Install required packages\n      apt:\n        name:\n          - python3\n          - python3-pip\n          - nginx\n        state: present\n        update_cache: yes\n\n    - name: Clone application repository\n      git:\n        repo: https://github.com/JI-DeepSleep/DocuSnap-Backend.git\n        dest: /opt/docusnap\n        version: main\n\n    - name: Install Python dependencies\n      pip:\n        requirements: /opt/docusnap/requirements.txt\n        virtualenv: /opt/docusnap/venv\n        virtualenv_command: python3 -m venv\n\n    - name: Configure Nginx\n      template:\n        src: templates/nginx.conf.j2\n        dest: /etc/nginx/sites-available/docusnap\n      notify: Restart Nginx\n\n    - name: Enable Nginx site\n      file:\n        src: /etc/nginx/sites-available/docusnap\n        dest: /etc/nginx/sites-enabled/docusnap\n        state: link\n      notify: Restart Nginx\n\n    - name: Start application service\n      systemd:\n        name: docusnap\n        state: started\n        enabled: yes\n\n  handlers:\n    - name: Restart Nginx\n      systemd:\n        name: nginx\n        state: restarted\n</code></pre></p>"},{"location":"deployment/tech-stack/#_17","title":"\u603b\u7ed3","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u7684\u90e8\u7f72\u6280\u672f\u6808\u6db5\u76d6\u4e86\u670d\u52a1\u5668\u73af\u5883\u3001\u8fd0\u884c\u65f6\u73af\u5883\u3001Web \u670d\u52a1\u5668\u3001\u6570\u636e\u5e93\u3001\u5bb9\u5668\u6280\u672f\u3001\u76d1\u63a7\u5de5\u5177\u548c\u81ea\u52a8\u5316\u90e8\u7f72\u7b49\u591a\u4e2a\u65b9\u9762\u3002\u6839\u636e\u4e0d\u540c\u7684\u90e8\u7f72\u89c4\u6a21\u548c\u9700\u6c42\uff0c\u53ef\u4ee5\u9009\u62e9\u9002\u5f53\u7684\u6280\u672f\u7ec4\u5408\uff0c\u4ece\u5355\u673a\u90e8\u7f72\u7684\u7b80\u5355\u914d\u7f6e\u5230\u57fa\u4e8e Kubernetes \u7684\u5927\u89c4\u6a21\u5206\u5e03\u5f0f\u90e8\u7f72\u3002</p> <p>\u901a\u8fc7\u5408\u7406\u9009\u62e9\u548c\u914d\u7f6e\u8fd9\u4e9b\u6280\u672f\uff0c\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u9ad8\u6548\u3001\u53ef\u9760\u3001\u5b89\u5168\u7684\u90e8\u7f72\u73af\u5883\uff0c\u4e3a DocuSnap-Backend \u7cfb\u7edf\u63d0\u4f9b\u7a33\u5b9a\u7684\u8fd0\u884c\u57fa\u7840\u3002\u540c\u65f6\uff0c\u81ea\u52a8\u5316\u90e8\u7f72\u548c\u76d1\u63a7\u5de5\u5177\u7684\u4f7f\u7528\uff0c\u53ef\u4ee5\u7b80\u5316\u7cfb\u7edf\u7684\u7ef4\u62a4\u548c\u8fd0\u8425\u5de5\u4f5c\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7684\u53ef\u7528\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002</p>"},{"location":"overview/background/","title":"Project Background","text":""},{"location":"overview/background/#project-origins","title":"Project Origins","text":"<p>DocuSnap-Backend is a university graduation project designed to provide a better document and form processing experience than current OCR tools. The project aims to combine OCR technology with the capabilities of Large Language Models (LLM) to achieve efficient and accurate document recognition and information extraction.</p>"},{"location":"overview/background/#project-positioning","title":"Project Positioning","text":"<p>DocuSnap-Backend is positioned as a backend service focused on OCR recognition and AI analysis of documents and forms. It provides document processing, form processing, and form auto-filling functions for frontend applications through REST API interfaces.</p>"},{"location":"overview/background/#project-objectives","title":"Project Objectives","text":"<ol> <li>Improve Document Processing Efficiency: Enhance the efficiency and accuracy of document recognition and information extraction by combining OCR and LLM technologies.</li> <li>Simplify Form Processing Workflow: Automatically recognize form structure and content, reducing manual input and processing time.</li> <li>Enhance Data Security: Protect the transmission security of sensitive documents and form data through end-to-end encryption.</li> <li>Provide Flexible Integration Methods: Facilitate integration with various frontend applications and systems through REST API interfaces.</li> </ol>"},{"location":"overview/background/#project-challenges","title":"Project Challenges","text":"<ol> <li>OCR Accuracy: Ensuring OCR recognition accuracy across various document qualities and formats.</li> <li>LLM Prompt Engineering: Designing effective prompts to guide LLM in accurately extracting and processing document information.</li> <li>Performance Optimization: Optimizing performance when handling large concurrent requests and large documents.</li> <li>Security Assurance: Ensuring secure transmission and processing of sensitive documents and form data.</li> </ol>"},{"location":"overview/background/#technology-selection-considerations","title":"Technology Selection Considerations","text":"<p>During the project development process, the team considered various technology options and ultimately chose the current technology stack based on the following factors:</p> <ol> <li>Flask Framework: Lightweight, flexible, and easily extensible, suitable for rapid API service development.</li> <li>SQLite Database: Lightweight, no need for a separate server, suitable for caching and task status storage.</li> <li>Zhipu AI: Provides high-quality Chinese LLM services, suitable for processing Chinese documents and forms.</li> <li>CnOCR: An OCR service optimized for Chinese, providing higher Chinese recognition accuracy.</li> <li>RSA and AES Encryption: Combining two encryption technologies to achieve efficient and secure end-to-end encryption.</li> </ol> <p>Through these technology choices, DocuSnap-Backend can effectively process documents and forms, providing high-quality OCR recognition and AI analysis services.</p>"},{"location":"overview/core-features/","title":"\u6838\u5fc3\u529f\u80fd","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u4e3b\u8981\u56f4\u7ed5\u6587\u6863\u5904\u7406\u3001\u8868\u5355\u5904\u7406\u548c\u8868\u5355\u81ea\u52a8\u586b\u5145\u4e09\u4e2a\u6838\u5fc3\u4e1a\u52a1\u573a\u666f\u3002\u4ee5\u4e0b\u662f\u7cfb\u7edf\u7684\u4e3b\u8981\u529f\u80fd\uff1a</p>"},{"location":"overview/core-features/#1","title":"1. \u6587\u6863\u5904\u7406","text":"<p>\u6587\u6863\u5904\u7406\u529f\u80fd\u5141\u8bb8\u7528\u6237\u5c06\u6587\u6863\u56fe\u50cf\u8f6c\u6362\u4e3a\u7ed3\u6784\u5316\u6587\u672c\uff0c\u5e76\u63d0\u53d6\u5173\u952e\u4fe1\u606f\u3002</p>"},{"location":"overview/core-features/#_2","title":"\u4e3b\u8981\u7279\u70b9","text":"<ul> <li>OCR \u6587\u672c\u8bc6\u522b\uff1a\u5c06\u6587\u6863\u56fe\u50cf\u8f6c\u6362\u4e3a\u6587\u672c</li> <li>\u6587\u6863\u7ed3\u6784\u5206\u6790\uff1a\u8bc6\u522b\u6587\u6863\u7684\u6807\u9898\u3001\u6bb5\u843d\u3001\u5217\u8868\u7b49\u7ed3\u6784</li> <li>\u5173\u952e\u4fe1\u606f\u63d0\u53d6\uff1a\u4ece\u6587\u6863\u4e2d\u63d0\u53d6\u91cd\u8981\u4fe1\u606f\uff0c\u5982\u65e5\u671f\u3001\u91d1\u989d\u3001\u540d\u79f0\u7b49</li> <li>\u591a\u8bed\u8a00\u652f\u6301\uff1a\u652f\u6301\u4e2d\u6587\u548c\u82f1\u6587\u6587\u6863\u5904\u7406</li> <li>\u6279\u91cf\u5904\u7406\uff1a\u652f\u6301\u540c\u65f6\u5904\u7406\u591a\u4e2a\u6587\u6863\u56fe\u50cf</li> </ul>"},{"location":"overview/core-features/#_3","title":"\u6280\u672f\u5b9e\u73b0","text":"<p>\u6587\u6863\u5904\u7406\u529f\u80fd\u901a\u8fc7\u4ee5\u4e0b\u6280\u672f\u5b9e\u73b0\uff1a</p> <ol> <li>\u4f7f\u7528 CnOCR \u670d\u52a1\u8fdb\u884c\u56fe\u50cf\u6587\u672c\u8bc6\u522b</li> <li>\u4f7f\u7528\u667a\u8c31 AI \u7684 LLM \u8fdb\u884c\u6587\u6863\u7ed3\u6784\u5206\u6790\u548c\u4fe1\u606f\u63d0\u53d6</li> <li>\u901a\u8fc7\u4e13\u95e8\u8bbe\u8ba1\u7684\u63d0\u793a\uff08Prompt\uff09\u5f15\u5bfc LLM \u51c6\u786e\u7406\u89e3\u6587\u6863\u5185\u5bb9</li> <li>\u4f7f\u7528\u7ebf\u7a0b\u6c60\u5e76\u884c\u5904\u7406\u591a\u4e2a\u56fe\u50cf\uff0c\u63d0\u9ad8\u5904\u7406\u6548\u7387</li> </ol>"},{"location":"overview/core-features/#2","title":"2. \u8868\u5355\u5904\u7406","text":"<p>\u8868\u5355\u5904\u7406\u529f\u80fd\u4e13\u6ce8\u4e8e\u4ece\u8868\u5355\u56fe\u50cf\u4e2d\u63d0\u53d6\u5b57\u6bb5\u548c\u503c\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u7ed3\u6784\u5316\u6570\u636e\u3002</p>"},{"location":"overview/core-features/#_4","title":"\u4e3b\u8981\u7279\u70b9","text":"<ul> <li>\u8868\u5355\u5b57\u6bb5\u8bc6\u522b\uff1a\u81ea\u52a8\u8bc6\u522b\u8868\u5355\u4e2d\u7684\u5b57\u6bb5\u540d\u79f0\u548c\u4f4d\u7f6e</li> <li>\u5b57\u6bb5\u503c\u63d0\u53d6\uff1a\u51c6\u786e\u63d0\u53d6\u5404\u5b57\u6bb5\u5bf9\u5e94\u7684\u503c</li> <li>\u8868\u5355\u7ed3\u6784\u6620\u5c04\uff1a\u5c06\u8868\u5355\u7ed3\u6784\u6620\u5c04\u4e3a JSON \u683c\u5f0f\u7684\u6570\u636e</li> <li>\u591a\u7c7b\u578b\u8868\u5355\u652f\u6301\uff1a\u652f\u6301\u5404\u79cd\u7c7b\u578b\u7684\u8868\u5355\uff0c\u5982\u7533\u8bf7\u8868\u3001\u8c03\u67e5\u95ee\u5377\u7b49</li> <li>\u6570\u636e\u9a8c\u8bc1\uff1a\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\u548c\u683c\u5f0f\u9a8c\u8bc1</li> </ul>"},{"location":"overview/core-features/#_5","title":"\u6280\u672f\u5b9e\u73b0","text":"<p>\u8868\u5355\u5904\u7406\u529f\u80fd\u901a\u8fc7\u4ee5\u4e0b\u6280\u672f\u5b9e\u73b0\uff1a</p> <ol> <li>\u4f7f\u7528 CnOCR \u670d\u52a1\u8fdb\u884c\u8868\u5355\u56fe\u50cf\u6587\u672c\u8bc6\u522b</li> <li>\u4f7f\u7528\u667a\u8c31 AI \u7684 LLM \u8fdb\u884c\u8868\u5355\u7ed3\u6784\u5206\u6790</li> <li>\u901a\u8fc7\u4e13\u95e8\u7684\u8868\u5355\u5904\u7406\u63d0\u793a\uff08Prompt\uff09\u5f15\u5bfc LLM \u8bc6\u522b\u5b57\u6bb5\u548c\u503c</li> <li>\u4f7f\u7528 JSON \u683c\u5f0f\u5b58\u50a8\u548c\u8fd4\u56de\u7ed3\u6784\u5316\u7684\u8868\u5355\u6570\u636e</li> </ol>"},{"location":"overview/core-features/#3","title":"3. \u8868\u5355\u81ea\u52a8\u586b\u5145","text":"<p>\u8868\u5355\u81ea\u52a8\u586b\u5145\u529f\u80fd\u5141\u8bb8\u7528\u6237\u6839\u636e\u5df2\u6709\u4fe1\u606f\u81ea\u52a8\u586b\u5145\u8868\u5355\uff0c\u63d0\u9ad8\u586b\u8868\u6548\u7387\u3002</p>"},{"location":"overview/core-features/#_6","title":"\u4e3b\u8981\u7279\u70b9","text":"<ul> <li>\u4fe1\u606f\u5339\u914d\uff1a\u5c06\u7528\u6237\u63d0\u4f9b\u7684\u4fe1\u606f\u4e0e\u8868\u5355\u5b57\u6bb5\u5339\u914d</li> <li>\u667a\u80fd\u586b\u5145\uff1a\u6839\u636e\u4e0a\u4e0b\u6587\u548c\u5b57\u6bb5\u7c7b\u578b\u667a\u80fd\u586b\u5145\u8868\u5355</li> <li>\u7f3a\u5931\u4fe1\u606f\u63d0\u793a\uff1a\u8bc6\u522b\u5e76\u63d0\u793a\u7528\u6237\u8865\u5145\u7f3a\u5931\u7684\u5fc5\u8981\u4fe1\u606f</li> <li>\u586b\u5145\u7ed3\u679c\u9884\u89c8\uff1a\u63d0\u4f9b\u586b\u5145\u7ed3\u679c\u7684\u9884\u89c8\u548c\u786e\u8ba4</li> <li>\u683c\u5f0f\u8f6c\u6362\uff1a\u652f\u6301\u4e0d\u540c\u683c\u5f0f\u7684\u8868\u5355\u8f93\u51fa</li> </ul>"},{"location":"overview/core-features/#_7","title":"\u6280\u672f\u5b9e\u73b0","text":"<p>\u8868\u5355\u81ea\u52a8\u586b\u5145\u529f\u80fd\u901a\u8fc7\u4ee5\u4e0b\u6280\u672f\u5b9e\u73b0\uff1a</p> <ol> <li>\u4f7f\u7528 CnOCR \u670d\u52a1\u8bc6\u522b\u7a7a\u767d\u8868\u5355\u7684\u7ed3\u6784</li> <li>\u4f7f\u7528\u667a\u8c31 AI \u7684 LLM \u5206\u6790\u8868\u5355\u7ed3\u6784\u548c\u7528\u6237\u63d0\u4f9b\u7684\u4fe1\u606f</li> <li>\u901a\u8fc7\u4e13\u95e8\u7684\u8868\u5355\u586b\u5145\u63d0\u793a\uff08Prompt\uff09\u5f15\u5bfc LLM \u8fdb\u884c\u667a\u80fd\u5339\u914d\u548c\u586b\u5145</li> <li>\u4f7f\u7528 JSON \u683c\u5f0f\u8fd4\u56de\u586b\u5145\u7ed3\u679c\uff0c\u4fbf\u4e8e\u524d\u7aef\u6e32\u67d3\u548c\u5c55\u793a</li> </ol>"},{"location":"overview/core-features/#4","title":"4. \u5b89\u5168\u4e0e\u9690\u79c1\u4fdd\u62a4","text":"<p>DocuSnap-Backend \u9ad8\u5ea6\u91cd\u89c6\u6570\u636e\u5b89\u5168\u548c\u7528\u6237\u9690\u79c1\u4fdd\u62a4\uff0c\u63d0\u4f9b\u4e86\u5168\u9762\u7684\u5b89\u5168\u673a\u5236\u3002</p>"},{"location":"overview/core-features/#_8","title":"\u4e3b\u8981\u7279\u70b9","text":"<ul> <li>\u7aef\u5230\u7aef\u52a0\u5bc6\uff1a\u4f7f\u7528 RSA \u548c AES \u6df7\u5408\u52a0\u5bc6\u4fdd\u62a4\u6570\u636e\u4f20\u8f93</li> <li>\u8bf7\u6c42\u9a8c\u8bc1\uff1a\u4f7f\u7528 SHA256 \u54c8\u5e0c\u9a8c\u8bc1\u8bf7\u6c42\u7684\u5b8c\u6574\u6027</li> <li>\u6570\u636e\u4e34\u65f6\u5b58\u50a8\uff1a\u5904\u7406\u5b8c\u6210\u540e\u81ea\u52a8\u6e05\u7406\u4e34\u65f6\u6570\u636e</li> <li>\u8bbf\u95ee\u63a7\u5236\uff1aAPI \u8bbf\u95ee\u6743\u9650\u63a7\u5236\u548c\u8ba4\u8bc1</li> <li>\u5b89\u5168\u65e5\u5fd7\uff1a\u8bb0\u5f55\u5173\u952e\u64cd\u4f5c\u65e5\u5fd7\uff0c\u4fbf\u4e8e\u5b89\u5168\u5ba1\u8ba1</li> </ul>"},{"location":"overview/core-features/#5","title":"5. \u7cfb\u7edf\u7ba1\u7406\u529f\u80fd","text":"<p>\u7cfb\u7edf\u8fd8\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7ba1\u7406\u529f\u80fd\uff0c\u4fbf\u4e8e\u7ef4\u62a4\u548c\u76d1\u63a7\u3002</p>"},{"location":"overview/core-features/#_9","title":"\u4e3b\u8981\u7279\u70b9","text":"<ul> <li>\u4efb\u52a1\u72b6\u6001\u67e5\u8be2\uff1a\u67e5\u8be2\u4efb\u52a1\u5904\u7406\u72b6\u6001\u548c\u7ed3\u679c</li> <li>\u7f13\u5b58\u7ba1\u7406\uff1a\u81ea\u52a8\u6e05\u7406\u8fc7\u671f\u7f13\u5b58\u6570\u636e</li> <li>\u7cfb\u7edf\u76d1\u63a7\uff1a\u57fa\u672c\u7684\u7cfb\u7edf\u72b6\u6001\u76d1\u63a7\u548c\u62a5\u544a</li> <li>\u9519\u8bef\u5904\u7406\uff1a\u5168\u9762\u7684\u9519\u8bef\u6355\u83b7\u548c\u5904\u7406\u673a\u5236</li> <li>\u914d\u7f6e\u7ba1\u7406\uff1a\u7075\u6d3b\u7684\u7cfb\u7edf\u914d\u7f6e\u548c\u53c2\u6570\u8c03\u6574</li> </ul> <p>\u901a\u8fc7\u8fd9\u4e9b\u6838\u5fc3\u529f\u80fd\uff0cDocuSnap-Backend \u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u5168\u9762\u3001\u9ad8\u6548\u3001\u5b89\u5168\u7684\u6587\u6863\u548c\u8868\u5355\u5904\u7406\u89e3\u51b3\u65b9\u6848\uff0c\u6ee1\u8db3\u4e0d\u540c\u573a\u666f\u4e0b\u7684\u9700\u6c42\u3002</p>"},{"location":"overview/target-users/","title":"\u76ee\u6807\u7528\u6237","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u8bbe\u8ba1\u9762\u5411\u591a\u79cd\u7c7b\u578b\u7684\u7528\u6237\u548c\u573a\u666f\uff0c\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u76ee\u6807\u7528\u6237\u7fa4\u4f53\uff1a</p>"},{"location":"overview/target-users/#_2","title":"\u4e3b\u8981\u7528\u6237\u7fa4\u4f53","text":""},{"location":"overview/target-users/#1","title":"1. \u5e94\u7528\u5f00\u53d1\u8005","text":"<p>\u63cf\u8ff0\uff1a\u5e0c\u671b\u5728\u5176\u5e94\u7528\u4e2d\u96c6\u6210\u6587\u6863\u548c\u8868\u5355\u5904\u7406\u529f\u80fd\u7684\u5f00\u53d1\u8005\u3002</p> <p>\u9700\u6c42\uff1a - \u7b80\u5355\u6613\u7528\u7684 API \u63a5\u53e3 - \u8be6\u7ec6\u7684\u63a5\u53e3\u6587\u6863 - \u7a33\u5b9a\u53ef\u9760\u7684\u670d\u52a1 - \u7075\u6d3b\u7684\u96c6\u6210\u9009\u9879</p> <p>\u4f7f\u7528\u573a\u666f\uff1a - \u5c06 DocuSnap-Backend \u96c6\u6210\u5230\u81ea\u5df1\u5f00\u53d1\u7684\u5e94\u7528\u4e2d - \u901a\u8fc7 API \u8c03\u7528\u5b9e\u73b0\u6587\u6863\u8bc6\u522b\u548c\u8868\u5355\u5904\u7406\u529f\u80fd - \u57fa\u4e8e DocuSnap-Backend \u7684\u80fd\u529b\u5f00\u53d1\u5b9a\u5236\u5316\u7684\u6587\u6863\u5904\u7406\u89e3\u51b3\u65b9\u6848</p>"},{"location":"overview/target-users/#2","title":"2. \u4f01\u4e1a\u7528\u6237","text":"<p>\u63cf\u8ff0\uff1a\u9700\u8981\u5904\u7406\u5927\u91cf\u6587\u6863\u548c\u8868\u5355\u7684\u4f01\u4e1a\u548c\u7ec4\u7ec7\u3002</p> <p>\u9700\u6c42\uff1a - \u9ad8\u6548\u51c6\u786e\u7684\u6587\u6863\u8bc6\u522b - \u6279\u91cf\u5904\u7406\u80fd\u529b - \u6570\u636e\u5b89\u5168\u4fdd\u969c - \u4e0e\u73b0\u6709\u7cfb\u7edf\u7684\u517c\u5bb9\u6027</p> <p>\u4f7f\u7528\u573a\u666f\uff1a - \u81ea\u52a8\u5316\u5904\u7406\u4f01\u4e1a\u5185\u90e8\u6587\u6863 - \u63d0\u53d6\u548c\u5f52\u6863\u8868\u5355\u6570\u636e - \u7b80\u5316\u6587\u6863\u7ba1\u7406\u5de5\u4f5c\u6d41\u7a0b</p>"},{"location":"overview/target-users/#3","title":"3. \u4e2a\u4eba\u7528\u6237","text":"<p>\u63cf\u8ff0\uff1a\u901a\u8fc7\u524d\u7aef\u5e94\u7528\u4f7f\u7528 DocuSnap \u670d\u52a1\u7684\u4e2a\u4eba\u7528\u6237\u3002</p> <p>\u9700\u6c42\uff1a - \u7b80\u5355\u76f4\u89c2\u7684\u7528\u6237\u754c\u9762 - \u5feb\u901f\u51c6\u786e\u7684\u6587\u6863\u5904\u7406 - \u4e2a\u4eba\u6570\u636e\u9690\u79c1\u4fdd\u62a4 - \u57fa\u672c\u7684\u6587\u6863\u7ba1\u7406\u529f\u80fd</p> <p>\u4f7f\u7528\u573a\u666f\uff1a - \u5904\u7406\u4e2a\u4eba\u6587\u6863\u548c\u8868\u5355 - \u63d0\u53d6\u6587\u6863\u4e2d\u7684\u5173\u952e\u4fe1\u606f - \u81ea\u52a8\u586b\u5145\u8868\u5355</p>"},{"location":"overview/target-users/#_3","title":"\u884c\u4e1a\u5e94\u7528\u573a\u666f","text":""},{"location":"overview/target-users/#1_1","title":"1. \u91d1\u878d\u670d\u52a1","text":"<ul> <li>\u81ea\u52a8\u5904\u7406\u8d37\u6b3e\u7533\u8bf7\u8868\u683c</li> <li>\u63d0\u53d6\u548c\u9a8c\u8bc1\u8d22\u52a1\u6587\u6863\u4e2d\u7684\u4fe1\u606f</li> <li>\u7b80\u5316\u5408\u89c4\u6027\u6587\u6863\u5904\u7406</li> </ul>"},{"location":"overview/target-users/#2_1","title":"2. \u533b\u7597\u5065\u5eb7","text":"<ul> <li>\u5904\u7406\u60a3\u8005\u8868\u5355\u548c\u533b\u7597\u8bb0\u5f55</li> <li>\u63d0\u53d6\u533b\u7597\u62a5\u544a\u4e2d\u7684\u5173\u952e\u4fe1\u606f</li> <li>\u81ea\u52a8\u586b\u5145\u533b\u7597\u4fdd\u9669\u8868\u683c</li> </ul>"},{"location":"overview/target-users/#3_1","title":"3. \u6559\u80b2\u673a\u6784","text":"<ul> <li>\u5904\u7406\u5b66\u751f\u7533\u8bf7\u8868\u548c\u8bb0\u5f55</li> <li>\u63d0\u53d6\u5b66\u672f\u6587\u6863\u4e2d\u7684\u4fe1\u606f</li> <li>\u7b80\u5316\u5b66\u751f\u6863\u6848\u7ba1\u7406</li> </ul>"},{"location":"overview/target-users/#4","title":"4. \u6cd5\u5f8b\u670d\u52a1","text":"<ul> <li>\u5206\u6790\u6cd5\u5f8b\u6587\u6863\u548c\u5408\u540c</li> <li>\u63d0\u53d6\u6cd5\u5f8b\u6587\u4ef6\u4e2d\u7684\u5173\u952e\u6761\u6b3e</li> <li>\u7b80\u5316\u6848\u4f8b\u6587\u6863\u7ba1\u7406</li> </ul>"},{"location":"overview/target-users/#_4","title":"\u7528\u6237\u4ef7\u503c\u4e3b\u5f20","text":"<p>DocuSnap-Backend \u4e3a\u7528\u6237\u63d0\u4f9b\u4ee5\u4e0b\u6838\u5fc3\u4ef7\u503c\uff1a</p> <ol> <li>\u6548\u7387\u63d0\u5347\uff1a\u51cf\u5c11\u624b\u52a8\u6587\u6863\u5904\u7406\u65f6\u95f4\uff0c\u63d0\u9ad8\u5de5\u4f5c\u6548\u7387</li> <li>\u51c6\u786e\u6027\uff1a\u7ed3\u5408 OCR \u548c LLM \u6280\u672f\uff0c\u63d0\u9ad8\u6587\u6863\u8bc6\u522b\u548c\u4fe1\u606f\u63d0\u53d6\u7684\u51c6\u786e\u6027</li> <li>\u7075\u6d3b\u6027\uff1a\u652f\u6301\u591a\u79cd\u6587\u6863\u548c\u8868\u5355\u7c7b\u578b\uff0c\u9002\u5e94\u4e0d\u540c\u7684\u4f7f\u7528\u573a\u666f</li> <li>\u5b89\u5168\u6027\uff1a\u901a\u8fc7\u7aef\u5230\u7aef\u52a0\u5bc6\u4fdd\u62a4\u654f\u611f\u6570\u636e\u7684\u4f20\u8f93\u5b89\u5168</li> <li>\u53ef\u6269\u5c55\u6027\uff1a\u6613\u4e8e\u96c6\u6210\u5230\u73b0\u6709\u7cfb\u7edf\u548c\u5de5\u4f5c\u6d41\u7a0b\u4e2d</li> </ol> <p>\u901a\u8fc7\u4e86\u89e3\u8fd9\u4e9b\u76ee\u6807\u7528\u6237\u548c\u5e94\u7528\u573a\u666f\uff0cDocuSnap-Backend \u7684\u67b6\u6784\u8bbe\u8ba1\u548c\u529f\u80fd\u5b9e\u73b0\u80fd\u591f\u66f4\u597d\u5730\u6ee1\u8db3\u7528\u6237\u9700\u6c42\uff0c\u63d0\u4f9b\u6709\u4ef7\u503c\u7684\u6587\u6863\u5904\u7406\u670d\u52a1\u3002</p>"},{"location":"tech-stack/selection-rationale/","title":"\u9009\u578b\u7406\u7531","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u7684\u6280\u672f\u6808\u9009\u62e9\u57fa\u4e8e\u591a\u65b9\u9762\u7684\u8003\u91cf\uff0c\u5305\u62ec\u9879\u76ee\u9700\u6c42\u3001\u6027\u80fd\u8981\u6c42\u3001\u5f00\u53d1\u6548\u7387\u3001\u5b89\u5168\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u7b49\u56e0\u7d20\u3002\u672c\u9875\u9762\u8be6\u7ec6\u89e3\u91ca\u5404\u9879\u6280\u672f\u9009\u62e9\u7684\u7406\u7531\u548c\u4f18\u52bf\u3002</p>"},{"location":"tech-stack/selection-rationale/#_2","title":"\u540e\u7aef\u6846\u67b6\u9009\u62e9","text":""},{"location":"tech-stack/selection-rationale/#flask","title":"\u4e3a\u4ec0\u4e48\u9009\u62e9 Flask\uff1f","text":"<p>\u5728\u4f17\u591a Python Web \u6846\u67b6\u4e2d\uff08\u5982 Django\u3001FastAPI\u3001Tornado \u7b49\uff09\uff0cFlask \u88ab\u9009\u4e3a DocuSnap-Backend \u7684\u6846\u67b6\uff0c\u4e3b\u8981\u57fa\u4e8e\u4ee5\u4e0b\u7406\u7531\uff1a</p> <ol> <li>\u8f7b\u91cf\u7ea7\u548c\u7075\u6d3b\u6027</li> <li>Flask \u662f\u4e00\u4e2a\u5fae\u6846\u67b6\uff0c\u6838\u5fc3\u7b80\u5355\u4f46\u53ef\u901a\u8fc7\u6269\u5c55\u589e\u52a0\u529f\u80fd</li> <li>\u9002\u5408\u6784\u5efa API \u670d\u52a1\uff0c\u4e0d\u5305\u542b\u4e0d\u5fc5\u8981\u7684\u7ec4\u4ef6</li> <li> <p>\u5141\u8bb8\u5f00\u53d1\u8005\u81ea\u7531\u9009\u62e9\u7ec4\u4ef6\u548c\u67b6\u6784\uff0c\u800c\u4e0d\u5f3a\u5236\u7279\u5b9a\u6a21\u5f0f</p> </li> <li> <p>\u5b66\u4e60\u66f2\u7ebf\u548c\u5f00\u53d1\u901f\u5ea6</p> </li> <li>\u76f8\u6bd4 Django \u7b49\u5168\u529f\u80fd\u6846\u67b6\uff0cFlask \u5b66\u4e60\u66f2\u7ebf\u8f83\u5e73\u7f13</li> <li>\u9002\u5408\u5feb\u901f\u5f00\u53d1\u539f\u578b\u548c\u4e2d\u5c0f\u578b\u5e94\u7528</li> <li> <p>\u4ee3\u7801\u7b80\u6d01\u76f4\u89c2\uff0c\u4fbf\u4e8e\u7406\u89e3\u548c\u7ef4\u62a4</p> </li> <li> <p>\u793e\u533a\u652f\u6301\u548c\u751f\u6001\u7cfb\u7edf</p> </li> <li>\u6210\u719f\u7684\u793e\u533a\u548c\u4e30\u5bcc\u7684\u6587\u6863</li> <li>\u5927\u91cf\u53ef\u7528\u7684\u6269\u5c55\u548c\u63d2\u4ef6</li> <li> <p>\u5e7f\u6cdb\u7684\u4f7f\u7528\u6848\u4f8b\u548c\u6700\u4f73\u5b9e\u8df5</p> </li> <li> <p>\u9002\u5408 API \u5f00\u53d1</p> </li> <li>\u7b80\u6d01\u7684\u8def\u7531\u7cfb\u7edf\uff0c\u9002\u5408\u8bbe\u8ba1 RESTful API</li> <li>\u8f7b\u677e\u5904\u7406 JSON \u6570\u636e\u548c HTTP \u8bf7\u6c42/\u54cd\u5e94</li> <li>\u826f\u597d\u7684\u9519\u8bef\u5904\u7406\u548c\u5f02\u5e38\u7ba1\u7406\u673a\u5236</li> </ol>"},{"location":"tech-stack/selection-rationale/#_3","title":"\u6570\u636e\u5e93\u9009\u62e9","text":""},{"location":"tech-stack/selection-rationale/#sqlite","title":"\u4e3a\u4ec0\u4e48\u9009\u62e9 SQLite\uff1f","text":"<p>\u5728\u5404\u79cd\u6570\u636e\u5e93\u9009\u9879\uff08\u5982 MySQL\u3001PostgreSQL\u3001MongoDB \u7b49\uff09\u4e2d\uff0cSQLite \u88ab\u9009\u4e3a DocuSnap-Backend \u7684\u6570\u636e\u5b58\u50a8\u89e3\u51b3\u65b9\u6848\uff0c\u4e3b\u8981\u57fa\u4e8e\u4ee5\u4e0b\u7406\u7531\uff1a</p> <ol> <li>\u7b80\u5355\u6027\u548c\u96f6\u914d\u7f6e</li> <li>\u65e0\u9700\u5b89\u88c5\u548c\u914d\u7f6e\u72ec\u7acb\u7684\u6570\u636e\u5e93\u670d\u52a1\u5668</li> <li>\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\uff0c\u4f5c\u4e3a\u5e94\u7528\u7684\u4e00\u90e8\u5206\u8fd0\u884c</li> <li> <p>\u51cf\u5c11\u4e86\u90e8\u7f72\u548c\u7ef4\u62a4\u7684\u590d\u6742\u6027</p> </li> <li> <p>\u9002\u5408\u7528\u4f8b</p> </li> <li>DocuSnap-Backend \u4e3b\u8981\u7528 SQLite \u4f5c\u4e3a\u7f13\u5b58\u548c\u4efb\u52a1\u72b6\u6001\u5b58\u50a8</li> <li>\u6570\u636e\u91cf\u76f8\u5bf9\u8f83\u5c0f\uff0c\u4e0d\u9700\u8981\u590d\u6742\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\u529f\u80fd</li> <li> <p>\u8bfb\u5199\u64cd\u4f5c\u7b80\u5355\uff0c\u4e3b\u8981\u662f\u4efb\u52a1\u72b6\u6001\u67e5\u8be2\u548c\u7ed3\u679c\u5b58\u50a8</p> </li> <li> <p>\u6027\u80fd\u8003\u91cf</p> </li> <li>\u5bf9\u4e8e\u4e2d\u5c0f\u89c4\u6a21\u7684\u6570\u636e\u548c\u5e76\u53d1\u91cf\uff0cSQLite \u6027\u80fd\u8db3\u591f</li> <li>\u5355\u6587\u4ef6\u5b58\u50a8\uff0c\u51cf\u5c11\u4e86 I/O \u64cd\u4f5c</li> <li> <p>\u9002\u5408\u4f5c\u4e3a\u7f13\u5b58\u7cfb\u7edf\uff0c\u63d0\u9ad8\u91cd\u590d\u8bf7\u6c42\u7684\u54cd\u5e94\u901f\u5ea6</p> </li> <li> <p>\u53ef\u79fb\u690d\u6027</p> </li> <li>\u6570\u636e\u5e93\u5b58\u50a8\u5728\u5355\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4fbf\u4e8e\u5907\u4efd\u548c\u8fc1\u79fb</li> <li>\u8de8\u5e73\u53f0\u652f\u6301\uff0c\u65e0\u9700\u62c5\u5fc3\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7684\u517c\u5bb9\u6027</li> <li>\u7b80\u5316\u4e86\u5f00\u53d1\u548c\u6d4b\u8bd5\u73af\u5883\u7684\u8bbe\u7f6e</li> </ol>"},{"location":"tech-stack/selection-rationale/#aillm","title":"AI/LLM \u670d\u52a1\u9009\u62e9","text":""},{"location":"tech-stack/selection-rationale/#ai","title":"\u4e3a\u4ec0\u4e48\u9009\u62e9\u667a\u8c31 AI\uff1f","text":"<p>\u5728\u4f17\u591a LLM \u670d\u52a1\u63d0\u4f9b\u5546\uff08\u5982 OpenAI\u3001Google\u3001\u767e\u5ea6\u7b49\uff09\u4e2d\uff0c\u667a\u8c31 AI \u88ab\u9009\u4e3a DocuSnap-Backend \u7684 LLM \u670d\u52a1\u63d0\u4f9b\u5546\uff0c\u4e3b\u8981\u57fa\u4e8e\u4ee5\u4e0b\u7406\u7531\uff1a</p> <ol> <li>\u4e2d\u6587\u5904\u7406\u80fd\u529b</li> <li>\u667a\u8c31 AI \u7684\u6a21\u578b\u5bf9\u4e2d\u6587\u6709\u8f83\u597d\u7684\u4f18\u5316</li> <li>\u9002\u5408\u5904\u7406\u4e2d\u6587\u6587\u6863\u548c\u8868\u5355</li> <li> <p>\u7406\u89e3\u4e2d\u6587\u8bed\u5883\u548c\u8868\u8fbe\u65b9\u5f0f</p> </li> <li> <p>\u7ed3\u6784\u5316\u8f93\u51fa\u80fd\u529b</p> </li> <li>\u652f\u6301\u751f\u6210\u7ed3\u6784\u5316\u7684 JSON \u8f93\u51fa</li> <li>\u9002\u5408\u63d0\u53d6\u8868\u5355\u5b57\u6bb5\u548c\u503c</li> <li> <p>\u80fd\u591f\u6309\u7167\u6307\u5b9a\u683c\u5f0f\u7ec4\u7ec7\u4fe1\u606f</p> </li> <li> <p>API \u63a5\u53e3\u548c\u96c6\u6210\u4fbf\u5229\u6027</p> </li> <li>\u63d0\u4f9b\u7b80\u6d01\u6613\u7528\u7684 API \u63a5\u53e3</li> <li>Python SDK \u652f\u6301\uff08zhipuai \u5e93\uff09</li> <li> <p>\u826f\u597d\u7684\u6587\u6863\u548c\u793a\u4f8b</p> </li> <li> <p>\u6210\u672c\u548c\u8bbf\u95ee\u9650\u5236</p> </li> <li>\u76f8\u5bf9\u5408\u7406\u7684\u4ef7\u683c\u548c\u4f7f\u7528\u6761\u6b3e</li> <li>\u9002\u5408\u9879\u76ee\u9884\u7b97\u548c\u4f7f\u7528\u89c4\u6a21</li> <li>\u65e0\u9700\u590d\u6742\u7684\u8bbf\u95ee\u6743\u9650\u7533\u8bf7</li> </ol>"},{"location":"tech-stack/selection-rationale/#ocr","title":"OCR \u670d\u52a1\u9009\u62e9","text":""},{"location":"tech-stack/selection-rationale/#cnocr","title":"\u4e3a\u4ec0\u4e48\u9009\u62e9 CnOCR\uff1f","text":"<p>\u5728\u5404\u79cd OCR \u89e3\u51b3\u65b9\u6848\uff08\u5982 Tesseract\u3001\u767e\u5ea6 OCR\u3001\u963f\u91cc OCR \u7b49\uff09\u4e2d\uff0cCnOCR \u88ab\u9009\u4e3a DocuSnap-Backend \u7684 OCR \u670d\u52a1\uff0c\u4e3b\u8981\u57fa\u4e8e\u4ee5\u4e0b\u7406\u7531\uff1a</p> <ol> <li>\u4e2d\u6587\u4f18\u5316</li> <li>CnOCR \u4e13\u4e3a\u4e2d\u6587\u6587\u672c\u8bc6\u522b\u4f18\u5316</li> <li>\u5bf9\u4e2d\u6587\u5b57\u7b26\u548c\u6392\u7248\u6709\u8f83\u597d\u7684\u652f\u6301</li> <li> <p>\u9002\u5408\u5904\u7406\u4e2d\u6587\u6587\u6863\u548c\u8868\u5355</p> </li> <li> <p>\u5f00\u6e90\u548c\u53ef\u5b9a\u5236</p> </li> <li>\u5f00\u6e90\u9879\u76ee\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u884c\u5b9a\u5236\u548c\u4f18\u5316</li> <li>\u53ef\u4ee5\u90e8\u7f72\u4e3a\u72ec\u7acb\u670d\u52a1\uff0c\u907f\u514d\u5bf9\u5546\u4e1a API \u7684\u4f9d\u8d56</li> <li> <p>\u7075\u6d3b\u7684\u96c6\u6210\u548c\u6269\u5c55\u53ef\u80fd\u6027</p> </li> <li> <p>\u6027\u80fd\u548c\u51c6\u786e\u6027</p> </li> <li>\u5728\u4e2d\u6587\u6587\u6863\u5904\u7406\u65b9\u9762\u6709\u8f83\u597d\u7684\u51c6\u786e\u7387</li> <li>\u9002\u5408\u5904\u7406\u5404\u79cd\u8d28\u91cf\u7684\u6587\u6863\u56fe\u50cf</li> <li> <p>\u652f\u6301\u591a\u79cd\u56fe\u50cf\u683c\u5f0f\u548c\u9884\u5904\u7406\u9009\u9879</p> </li> <li> <p>\u90e8\u7f72\u7075\u6d3b\u6027</p> </li> <li>\u53ef\u4ee5\u4f5c\u4e3a\u72ec\u7acb\u670d\u52a1\u90e8\u7f72</li> <li>\u652f\u6301 CPU \u548c GPU \u52a0\u901f</li> <li>\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u8fdb\u884c\u6a2a\u5411\u6269\u5c55</li> </ol>"},{"location":"tech-stack/selection-rationale/#_4","title":"\u5b89\u5168\u52a0\u5bc6\u9009\u62e9","text":""},{"location":"tech-stack/selection-rationale/#rsa-aes","title":"\u4e3a\u4ec0\u4e48\u9009\u62e9 RSA \u548c AES \u6df7\u5408\u52a0\u5bc6\uff1f","text":"<p>\u5728\u5404\u79cd\u52a0\u5bc6\u65b9\u6848\u4e2d\uff0cRSA \u548c AES \u6df7\u5408\u52a0\u5bc6\u88ab\u9009\u4e3a DocuSnap-Backend \u7684\u5b89\u5168\u89e3\u51b3\u65b9\u6848\uff0c\u4e3b\u8981\u57fa\u4e8e\u4ee5\u4e0b\u7406\u7531\uff1a</p> <ol> <li>\u5b89\u5168\u6027\u548c\u6548\u7387\u5e73\u8861</li> <li>RSA \u975e\u5bf9\u79f0\u52a0\u5bc6\u63d0\u4f9b\u5b89\u5168\u7684\u5bc6\u94a5\u4ea4\u6362</li> <li>AES \u5bf9\u79f0\u52a0\u5bc6\u63d0\u4f9b\u9ad8\u6548\u7684\u6570\u636e\u52a0\u5bc6</li> <li> <p>\u7ed3\u5408\u4e24\u8005\u4f18\u52bf\uff0c\u5b9e\u73b0\u5b89\u5168\u4e14\u9ad8\u6548\u7684\u52a0\u5bc6\u65b9\u6848</p> </li> <li> <p>\u7aef\u5230\u7aef\u52a0\u5bc6\u9700\u6c42</p> </li> <li>\u9002\u5408\u5b9e\u73b0\u7aef\u5230\u7aef\u52a0\u5bc6\uff0c\u4fdd\u62a4\u654f\u611f\u6587\u6863\u6570\u636e</li> <li>\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u53ef\u4ee5\u5b89\u5168\u4ea4\u6362\u5bc6\u94a5</li> <li> <p>\u5373\u4f7f\u901a\u4fe1\u88ab\u62e6\u622a\uff0c\u6570\u636e\u4e5f\u65e0\u6cd5\u88ab\u89e3\u5bc6</p> </li> <li> <p>\u6807\u51c6\u5316\u548c\u5e7f\u6cdb\u652f\u6301</p> </li> <li>RSA \u548c AES \u90fd\u662f\u5e7f\u6cdb\u4f7f\u7528\u7684\u52a0\u5bc6\u6807\u51c6</li> <li>\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u548c\u5e73\u53f0\u90fd\u6709\u6210\u719f\u7684\u5b9e\u73b0</li> <li> <p>\u4fbf\u4e8e\u4e0e\u4e0d\u540c\u5ba2\u6237\u7aef\u548c\u7cfb\u7edf\u96c6\u6210</p> </li> <li> <p>\u7075\u6d3b\u7684\u5bc6\u94a5\u7ba1\u7406</p> </li> <li>\u652f\u6301\u5bc6\u94a5\u8f6e\u6362\u548c\u7ba1\u7406</li> <li>\u53ef\u4ee5\u4e3a\u4e0d\u540c\u5ba2\u6237\u7aef\u6216\u4f1a\u8bdd\u4f7f\u7528\u4e0d\u540c\u7684\u5bc6\u94a5</li> <li>\u589e\u5f3a\u7cfb\u7edf\u7684\u6574\u4f53\u5b89\u5168\u6027</li> </ol>"},{"location":"tech-stack/selection-rationale/#_5","title":"\u5e76\u53d1\u5904\u7406\u9009\u62e9","text":""},{"location":"tech-stack/selection-rationale/#python","title":"\u4e3a\u4ec0\u4e48\u9009\u62e9 Python \u6807\u51c6\u5e93\u7684\u5e76\u53d1\u5de5\u5177\uff1f","text":"<p>\u5728\u5404\u79cd\u5e76\u53d1\u5904\u7406\u65b9\u6848\uff08\u5982 Celery\u3001RQ\u3001\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u7b49\uff09\u4e2d\uff0cPython \u6807\u51c6\u5e93\u7684\u5e76\u53d1\u5de5\u5177\u88ab\u9009\u4e3a DocuSnap-Backend \u7684\u5e76\u53d1\u5904\u7406\u89e3\u51b3\u65b9\u6848\uff0c\u4e3b\u8981\u57fa\u4e8e\u4ee5\u4e0b\u7406\u7531\uff1a</p> <ol> <li>\u7b80\u5355\u6027\u548c\u4f9d\u8d56\u6700\u5c0f\u5316</li> <li>\u4f7f\u7528 Python \u6807\u51c6\u5e93\uff0c\u65e0\u9700\u989d\u5916\u7684\u4f9d\u8d56</li> <li>\u51cf\u5c11\u4e86\u90e8\u7f72\u548c\u7ef4\u62a4\u7684\u590d\u6742\u6027</li> <li> <p>\u9002\u5408\u4e2d\u5c0f\u89c4\u6a21\u7684\u5e76\u53d1\u9700\u6c42</p> </li> <li> <p>\u9002\u5408\u7528\u4f8b</p> </li> <li>\u7cfb\u7edf\u7684\u5e76\u53d1\u9700\u6c42\u76f8\u5bf9\u7b80\u5355\uff0c\u4e3b\u8981\u662f\u5e76\u884c\u5904\u7406\u591a\u4e2a\u56fe\u50cf</li> <li>\u4efb\u52a1\u961f\u5217\u548c\u5de5\u4f5c\u7ebf\u7a0b\u6a21\u5f0f\u8db3\u591f\u6ee1\u8db3\u9700\u6c42</li> <li> <p>\u4e0d\u9700\u8981\u5206\u5e03\u5f0f\u4efb\u52a1\u961f\u5217\u7684\u590d\u6742\u529f\u80fd</p> </li> <li> <p>\u63a7\u5236\u548c\u5b9a\u5236\u80fd\u529b</p> </li> <li>\u76f4\u63a5\u4f7f\u7528\u5e95\u5c42\u5e76\u53d1\u539f\u8bed\uff0c\u63d0\u4f9b\u66f4\u7cbe\u7ec6\u7684\u63a7\u5236</li> <li>\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u9700\u6c42\u5b9a\u5236\u5e76\u53d1\u884c\u4e3a</li> <li> <p>\u4fbf\u4e8e\u8c03\u8bd5\u548c\u4f18\u5316</p> </li> <li> <p>\u5b66\u4e60\u66f2\u7ebf\u548c\u5f00\u53d1\u6548\u7387</p> </li> <li>\u4f7f\u7528\u719f\u6089\u7684 Python \u6807\u51c6\u5e93\u7ec4\u4ef6</li> <li>\u907f\u514d\u5f15\u5165\u65b0\u7684\u6280\u672f\u6808\u548c\u5b66\u4e60\u6210\u672c</li> <li>\u7b80\u5316\u4e86\u4ee3\u7801\u7ef4\u62a4\u548c\u7406\u89e3</li> </ol>"},{"location":"tech-stack/selection-rationale/#_6","title":"\u603b\u4f53\u6280\u672f\u6808\u8bc4\u4f30","text":"<p>DocuSnap-Backend \u7684\u6280\u672f\u6808\u9009\u62e9\u6574\u4f53\u4e0a\u9075\u5faa\u4ee5\u4e0b\u539f\u5219\uff1a</p> <ol> <li>\u9002\u5408\u9879\u76ee\u89c4\u6a21\u548c\u9700\u6c42</li> <li>\u9009\u62e9\u9002\u5408\u4e2d\u5c0f\u578b\u5e94\u7528\u7684\u6280\u672f</li> <li>\u907f\u514d\u8fc7\u5ea6\u8bbe\u8ba1\u548c\u4e0d\u5fc5\u8981\u7684\u590d\u6742\u6027</li> <li> <p>\u6ee1\u8db3\u6838\u5fc3\u529f\u80fd\u9700\u6c42\u548c\u6027\u80fd\u8981\u6c42</p> </li> <li> <p>\u5f00\u53d1\u6548\u7387\u548c\u7ef4\u62a4\u6027</p> </li> <li>\u4f18\u5148\u8003\u8651\u5f00\u53d1\u56e2\u961f\u719f\u6089\u7684\u6280\u672f</li> <li>\u9009\u62e9\u6587\u6863\u5b8c\u5584\u3001\u793e\u533a\u6d3b\u8dc3\u7684\u7ec4\u4ef6</li> <li> <p>\u6ce8\u91cd\u4ee3\u7801\u53ef\u8bfb\u6027\u548c\u7ef4\u62a4\u6027</p> </li> <li> <p>\u5b89\u5168\u6027\u548c\u53ef\u9760\u6027</p> </li> <li>\u91cd\u89c6\u6570\u636e\u5b89\u5168\u548c\u7528\u6237\u9690\u79c1\u4fdd\u62a4</li> <li>\u9009\u62e9\u6210\u719f\u7a33\u5b9a\u7684\u6280\u672f\u7ec4\u4ef6</li> <li> <p>\u5b9e\u65bd\u5fc5\u8981\u7684\u5b89\u5168\u63aa\u65bd\u548c\u6700\u4f73\u5b9e\u8df5</p> </li> <li> <p>\u53ef\u6269\u5c55\u6027\u548c\u672a\u6765\u53d1\u5c55</p> </li> <li>\u8003\u8651\u7cfb\u7edf\u672a\u6765\u7684\u6269\u5c55\u9700\u6c42</li> <li>\u9009\u62e9\u7075\u6d3b\u53ef\u6269\u5c55\u7684\u6280\u672f\u7ec4\u4ef6</li> <li>\u4fdd\u7559\u67b6\u6784\u8c03\u6574\u548c\u6280\u672f\u5347\u7ea7\u7684\u53ef\u80fd\u6027</li> </ol> <p>\u901a\u8fc7\u8fd9\u4e9b\u6280\u672f\u9009\u62e9\uff0cDocuSnap-Backend \u80fd\u591f\u6709\u6548\u5730\u652f\u6301\u5176\u6838\u5fc3\u4e1a\u52a1\u529f\u80fd\uff0c\u540c\u65f6\u4fdd\u6301\u7cfb\u7edf\u7684\u7b80\u6d01\u6027\u3001\u5b89\u5168\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002</p>"},{"location":"tech-stack/technology-selection/","title":"Technology Selection","text":"<p>The DocuSnap-Backend system employs a series of modern technologies and frameworks to achieve efficient, secure, and scalable document and form processing capabilities. This page provides detailed information about the system's technology stack choices.</p>"},{"location":"tech-stack/technology-selection/#backend-framework","title":"Backend Framework","text":""},{"location":"tech-stack/technology-selection/#flask-311","title":"Flask (3.1.1)","text":"<p>Flask is a lightweight Python Web framework used to build the API service for DocuSnap-Backend.</p> <p>Key Features: - Lightweight, flexible, and easily extensible - Simple and intuitive API design - Rich plugin ecosystem - Suitable for rapid prototype development and small to medium-sized applications</p> <p>Application in the System: - Provides RESTful API interfaces - Handles HTTP requests and responses - Manages routing and request dispatching - Handles errors and exceptions</p>"},{"location":"tech-stack/technology-selection/#database","title":"Database","text":""},{"location":"tech-stack/technology-selection/#sqlite3","title":"SQLite3","text":"<p>SQLite is a lightweight embedded relational database used to store task status and processing results.</p> <p>Key Features: - Zero configuration, self-contained, serverless - Lightweight, efficient, reliable - Supports standard SQL queries - Suitable as an embedded application database</p> <p>Application in the System: - Stores task status and processing results - Serves as a caching system to reduce repeated computations - Manages temporary data storage - Supports task status queries and result retrieval</p>"},{"location":"tech-stack/technology-selection/#aillm-service","title":"AI/LLM Service","text":""},{"location":"tech-stack/technology-selection/#zhipu-ai-zhipuai-215","title":"Zhipu AI (zhipuai 2.1.5)","text":"<p>Zhipu AI is a Chinese AI service provider that offers Large Language Model APIs for document analysis and information extraction.</p> <p>Key Features: - Provides high-quality Chinese LLM services - Supports complex natural language understanding and generation - Offers structured output capabilities - Supports custom prompt engineering</p> <p>Application in the System: - Analyzes document structure and content - Extracts form fields and values - Understands document context and semantics - Generates structured processing results</p>"},{"location":"tech-stack/technology-selection/#ocr-service","title":"OCR Service","text":""},{"location":"tech-stack/technology-selection/#cnocr","title":"CnOCR","text":"<p>CnOCR is an OCR tool optimized specifically for Chinese, used to convert images to text.</p> <p>Key Features: - OCR engine optimized for Chinese - High accuracy text recognition - Supports multiple image formats - Open-source and customizable</p> <p>Application in the System: - Converts document and form images to text - Recognizes form structure and fields - Supports batch image processing - Operates as an independent service interacting with the backend server</p>"},{"location":"tech-stack/technology-selection/#security-encryption","title":"Security Encryption","text":""},{"location":"tech-stack/technology-selection/#rsa-and-aes-encryption","title":"RSA and AES Encryption","text":"<p>The system uses a hybrid encryption scheme with RSA and AES to secure data transmission.</p> <p>Key Features: - RSA asymmetric encryption for key exchange - AES symmetric encryption for data encryption - SHA256 hash for data integrity verification - End-to-end encryption to protect sensitive data</p> <p>Application in the System: - Secures API requests and responses - Encrypts sensitive document and form data - Verifies the integrity and authenticity of requests - Prevents data leakage and tampering</p>"},{"location":"tech-stack/technology-selection/#concurrent-processing","title":"Concurrent Processing","text":""},{"location":"tech-stack/technology-selection/#python-standard-library","title":"Python Standard Library","text":"<p>The system uses concurrent processing tools from the Python standard library, such as <code>threading</code> and <code>concurrent.futures</code>.</p> <p>Key Features: - <code>Queue</code> for thread-safe task queues - <code>threading</code> for creating and managing threads - <code>ThreadPoolExecutor</code> for parallel task processing - <code>Semaphore</code> for controlling concurrent access</p> <p>Application in the System: - Implements producer-consumer pattern for task processing - Processes multiple images and documents in parallel - Controls concurrent requests to external services - Improves overall system processing efficiency</p>"},{"location":"tech-stack/technology-selection/#development-and-testing-tools","title":"Development and Testing Tools","text":""},{"location":"tech-stack/technology-selection/#other-tools-and-libraries","title":"Other Tools and Libraries","text":"<p>The system also uses various auxiliary tools and libraries for development, testing, and deployment.</p> <p>Main Components: - <code>json</code> for data serialization and deserialization - <code>base64</code> for binary data encoding - <code>logging</code> for log recording and management - <code>time</code> and <code>datetime</code> for time management and calculations</p> <p>These technical components collectively form the technology stack of DocuSnap-Backend, supporting the system's core functionality and performance requirements. Each component has been carefully selected to ensure system stability, security, and scalability.</p>"},{"location":"workflows/data-flow/","title":"\u6570\u636e\u6d41\u56fe","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u4e2d\u7684\u6570\u636e\u6d41\u662f\u7406\u89e3\u7cfb\u7edf\u5de5\u4f5c\u539f\u7406\u7684\u5173\u952e\u3002\u672c\u9875\u9762\u8be6\u7ec6\u4ecb\u7ecd\u7cfb\u7edf\u4e2d\u6570\u636e\u7684\u6d41\u52a8\u8def\u5f84\u3001\u5904\u7406\u6b65\u9aa4\u548c\u8f6c\u6362\u8fc7\u7a0b\u3002</p>"},{"location":"workflows/data-flow/#_2","title":"\u6574\u4f53\u6570\u636e\u6d41","text":"<p>\u4e0b\u56fe\u5c55\u793a\u4e86 DocuSnap-Backend \u7cfb\u7edf\u7684\u6574\u4f53\u6570\u636e\u6d41\uff0c\u4ece\u5ba2\u6237\u7aef\u8bf7\u6c42\u5230\u54cd\u5e94\u7684\u5b8c\u6574\u8def\u5f84\uff1a</p> <p></p> <p>\u8fd9\u4e2a\u6570\u636e\u6d41\u56fe\u5c55\u793a\u4e86\u7cfb\u7edf\u4e2d\u6570\u636e\u7684\u4e3b\u8981\u6d41\u52a8\u8def\u5f84\uff0c\u5305\u62ec\u8bf7\u6c42\u5904\u7406\u3001\u4efb\u52a1\u6267\u884c\u3001\u7ed3\u679c\u5b58\u50a8\u548c\u54cd\u5e94\u5904\u7406\u7b49\u9636\u6bb5\u3002</p>"},{"location":"workflows/data-flow/#_3","title":"\u4e3b\u8981\u6570\u636e\u6d41\u8def\u5f84","text":""},{"location":"workflows/data-flow/#1","title":"1. \u8bf7\u6c42\u5904\u7406\u8def\u5f84","text":"<pre><code>graph LR\n    A[\"\u5ba2\u6237\u7aef\u8bf7\u6c42\"] --&gt; B[\"\u5b89\u5168\u52a0\u5bc6\u6a21\u5757(\u89e3\u5bc6)\"]\n    B --&gt; C[\"\u4efb\u52a1\u5904\u7406\u6a21\u5757\"]\n    C --&gt; D[\"\u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757(\u67e5\u8be2\u7f13\u5b58)\"]\n    D --&gt;|\"\u7f13\u5b58\u547d\u4e2d\"| E[\"\u8fd4\u56de\u7f13\u5b58\u7ed3\u679c\"]\n    D --&gt;|\"\u7f13\u5b58\u672a\u547d\u4e2d\"| F[\"\u521b\u5efa\u65b0\u4efb\u52a1\"]</code></pre> <p>\u8bf7\u6c42\u5904\u7406\u8def\u5f84\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5982\u4f55\u63a5\u6536\u548c\u5904\u7406\u5ba2\u6237\u7aef\u8bf7\u6c42\uff1a</p> <ol> <li>\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\uff1a</li> <li>\u5ba2\u6237\u7aef\u901a\u8fc7 API \u7aef\u70b9\u53d1\u9001\u52a0\u5bc6\u8bf7\u6c42</li> <li> <p>\u8bf7\u6c42\u5305\u542b\u52a0\u5bc6\u7684\u6570\u636e\u3001\u52a0\u5bc6\u7684 AES \u5bc6\u94a5\u548c\u7b7e\u540d</p> </li> <li> <p>\u8bf7\u6c42\u89e3\u5bc6\uff1a</p> </li> <li>\u5b89\u5168\u52a0\u5bc6\u6a21\u5757\u4f7f\u7528 RSA \u79c1\u94a5\u89e3\u5bc6 AES \u5bc6\u94a5</li> <li>\u4f7f\u7528 AES \u5bc6\u94a5\u89e3\u5bc6\u8bf7\u6c42\u6570\u636e</li> <li> <p>\u9a8c\u8bc1\u8bf7\u6c42\u7b7e\u540d\uff0c\u786e\u4fdd\u6570\u636e\u5b8c\u6574\u6027</p> </li> <li> <p>\u8bf7\u6c42\u9a8c\u8bc1\uff1a</p> </li> <li>\u4efb\u52a1\u5904\u7406\u6a21\u5757\u9a8c\u8bc1\u8bf7\u6c42\u53c2\u6570</li> <li>\u68c0\u67e5\u53c2\u6570\u683c\u5f0f\u548c\u5185\u5bb9</li> <li> <p>\u786e\u4fdd\u8bf7\u6c42\u7b26\u5408\u7cfb\u7edf\u8981\u6c42</p> </li> <li> <p>\u7f13\u5b58\u68c0\u67e5\uff1a</p> </li> <li>\u6839\u636e\u8bf7\u6c42\u53c2\u6570\u751f\u6210\u7f13\u5b58\u952e</li> <li>\u67e5\u8be2\u6570\u636e\u5e93\u662f\u5426\u6709\u5339\u914d\u7684\u7f13\u5b58\u7ed3\u679c</li> <li> <p>\u5982\u679c\u7f13\u5b58\u547d\u4e2d\uff0c\u76f4\u63a5\u8fd4\u56de\u7f13\u5b58\u7ed3\u679c</p> </li> <li> <p>\u4efb\u52a1\u521b\u5efa\uff1a</p> </li> <li>\u5982\u679c\u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u751f\u6210\u552f\u4e00\u7684\u4efb\u52a1 ID</li> <li>\u521b\u5efa\u4efb\u52a1\u8bb0\u5f55\uff0c\u8bbe\u7f6e\u72b6\u6001\u4e3a\"\u5f85\u5904\u7406\"</li> <li>\u5c06\u4efb\u52a1\u6dfb\u52a0\u5230\u5904\u7406\u961f\u5217</li> </ol>"},{"location":"workflows/data-flow/#2","title":"2. \u4efb\u52a1\u6267\u884c\u8def\u5f84","text":"<pre><code>graph LR\n    A[\"\u4efb\u52a1\u961f\u5217\"] --&gt; B[\"\u5de5\u4f5c\u7ebf\u7a0b\"]\n    B --&gt; C[\"OCR \u5904\u7406\u6a21\u5757\"]\n    C --&gt; D[\"\u5916\u90e8 OCR \u670d\u52a1\"]\n    D --&gt; C\n    C --&gt; B\n    B --&gt; E[\"LLM \u5904\u7406\u6a21\u5757\"]\n    E --&gt; F[\"\u5916\u90e8 LLM \u670d\u52a1\"]\n    F --&gt; E\n    E --&gt; B\n    B --&gt; G[\"\u7ed3\u679c\u5904\u7406\"]</code></pre> <p>\u4efb\u52a1\u6267\u884c\u8def\u5f84\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5982\u4f55\u5904\u7406\u961f\u5217\u4e2d\u7684\u4efb\u52a1\uff1a</p> <ol> <li>\u4efb\u52a1\u5206\u914d\uff1a</li> <li>\u5de5\u4f5c\u7ebf\u7a0b\u4ece\u961f\u5217\u83b7\u53d6\u4efb\u52a1</li> <li>\u6839\u636e\u4efb\u52a1\u7c7b\u578b\u9009\u62e9\u5904\u7406\u7b56\u7565</li> <li> <p>\u66f4\u65b0\u4efb\u52a1\u72b6\u6001\u4e3a\"\u5904\u7406\u4e2d\"</p> </li> <li> <p>OCR \u5904\u7406\uff1a</p> </li> <li>\u89e3\u7801 Base64 \u56fe\u50cf</li> <li>\u8c03\u7528 OCR \u670d\u52a1\u8fdb\u884c\u6587\u672c\u8bc6\u522b</li> <li>\u5e76\u884c\u5904\u7406\u591a\u4e2a\u56fe\u50cf</li> <li> <p>\u5408\u5e76 OCR \u7ed3\u679c</p> </li> <li> <p>LLM \u5904\u7406\uff1a</p> </li> <li>\u6839\u636e\u4efb\u52a1\u7c7b\u578b\u6784\u5efa\u63d0\u793a</li> <li>\u8c03\u7528 LLM API \u8fdb\u884c\u6587\u672c\u5206\u6790</li> <li>\u89e3\u6790 LLM \u54cd\u5e94</li> <li> <p>\u63d0\u53d6\u7ed3\u6784\u5316\u6570\u636e</p> </li> <li> <p>\u7ed3\u679c\u5904\u7406\uff1a</p> </li> <li>\u683c\u5f0f\u5316\u5904\u7406\u7ed3\u679c</li> <li>\u6dfb\u52a0\u5143\u6570\u636e</li> <li>\u786e\u4fdd\u8f93\u51fa\u683c\u5f0f\u7684\u4e00\u81f4\u6027</li> </ol>"},{"location":"workflows/data-flow/#3","title":"3. \u7ed3\u679c\u5b58\u50a8\u8def\u5f84","text":"<pre><code>graph LR\n    A[\"\u5904\u7406\u7ed3\u679c\"] --&gt; B[\"\u4efb\u52a1\u5904\u7406\u6a21\u5757\"]\n    B --&gt; C[\"\u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757\"]\n    C --&gt; D[\"\u66f4\u65b0\u4efb\u52a1\u72b6\u6001\"]\n    C --&gt; E[\"\u5b58\u50a8\u5904\u7406\u7ed3\u679c\"]\n    C --&gt; F[\"\u6dfb\u52a0\u7f13\u5b58\"]</code></pre> <p>\u7ed3\u679c\u5b58\u50a8\u8def\u5f84\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5982\u4f55\u5b58\u50a8\u548c\u7ba1\u7406\u5904\u7406\u7ed3\u679c\uff1a</p> <ol> <li>\u4efb\u52a1\u72b6\u6001\u66f4\u65b0\uff1a</li> <li>\u66f4\u65b0\u4efb\u52a1\u72b6\u6001\u4e3a\"\u5df2\u5b8c\u6210\"\u6216\"\u9519\u8bef\"</li> <li>\u8bb0\u5f55\u66f4\u65b0\u65f6\u95f4\u6233</li> <li> <p>\u66f4\u65b0\u4efb\u52a1\u5904\u7406\u8fdb\u5ea6</p> </li> <li> <p>\u7ed3\u679c\u5b58\u50a8\uff1a</p> </li> <li>\u5c06\u5904\u7406\u7ed3\u679c\u5b58\u50a8\u5230\u6570\u636e\u5e93</li> <li>\u5173\u8054\u7ed3\u679c\u4e0e\u4efb\u52a1 ID</li> <li> <p>\u786e\u4fdd\u6570\u636e\u6301\u4e45\u5316</p> </li> <li> <p>\u7f13\u5b58\u7ba1\u7406\uff1a</p> </li> <li>\u5c06\u7ed3\u679c\u6dfb\u52a0\u5230\u7f13\u5b58</li> <li>\u8bbe\u7f6e\u7f13\u5b58\u952e\u548c\u8fc7\u671f\u65f6\u95f4</li> <li>\u4f18\u5316\u540e\u7eed\u76f8\u540c\u8bf7\u6c42\u7684\u54cd\u5e94\u901f\u5ea6</li> </ol>"},{"location":"workflows/data-flow/#4","title":"4. \u54cd\u5e94\u5904\u7406\u8def\u5f84","text":"<pre><code>graph LR\n    A[\"\u5ba2\u6237\u7aef\u67e5\u8be2\"] --&gt; B[\"\u5b89\u5168\u52a0\u5bc6\u6a21\u5757(\u89e3\u5bc6)\"]\n    B --&gt; C[\"\u4efb\u52a1\u5904\u7406\u6a21\u5757\"]\n    C --&gt; D[\"\u7f13\u5b58\u548c\u6570\u636e\u6301\u4e45\u5316\u6a21\u5757(\u67e5\u8be2\u7ed3\u679c)\"]\n    D --&gt; C\n    C --&gt; E[\"\u5b89\u5168\u52a0\u5bc6\u6a21\u5757(\u52a0\u5bc6)\"]\n    E --&gt; F[\"\u8fd4\u56de\u54cd\u5e94\"]</code></pre> <p>\u54cd\u5e94\u5904\u7406\u8def\u5f84\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5982\u4f55\u5904\u7406\u5ba2\u6237\u7aef\u7684\u67e5\u8be2\u8bf7\u6c42\uff1a</p> <ol> <li>\u67e5\u8be2\u63a5\u6536\uff1a</li> <li>\u5ba2\u6237\u7aef\u901a\u8fc7 API \u7aef\u70b9\u53d1\u9001\u67e5\u8be2\u8bf7\u6c42</li> <li>\u8bf7\u6c42\u5305\u542b\u4efb\u52a1 ID \u548c\u8ba4\u8bc1\u4fe1\u606f</li> <li> <p>\u7cfb\u7edf\u89e3\u5bc6\u548c\u9a8c\u8bc1\u8bf7\u6c42</p> </li> <li> <p>\u7ed3\u679c\u68c0\u7d22\uff1a</p> </li> <li>\u6839\u636e\u4efb\u52a1 ID \u67e5\u8be2\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c</li> <li>\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u5b58\u50a8\u7684\u7ed3\u679c</li> <li> <p>\u51c6\u5907\u54cd\u5e94\u6570\u636e</p> </li> <li> <p>\u54cd\u5e94\u52a0\u5bc6\uff1a</p> </li> <li>\u4f7f\u7528 AES \u5bc6\u94a5\u52a0\u5bc6\u54cd\u5e94\u6570\u636e</li> <li>\u8ba1\u7b97\u54cd\u5e94\u6570\u636e\u7684\u7b7e\u540d</li> <li> <p>\u6784\u5efa\u52a0\u5bc6\u54cd\u5e94</p> </li> <li> <p>\u54cd\u5e94\u8fd4\u56de\uff1a</p> </li> <li>\u8fd4\u56de\u52a0\u5bc6\u7684\u54cd\u5e94\u548c\u7b7e\u540d\u7ed9\u5ba2\u6237\u7aef</li> <li>\u5ba2\u6237\u7aef\u89e3\u5bc6\u54cd\u5e94\u5e76\u9a8c\u8bc1\u7b7e\u540d</li> <li>\u5ba2\u6237\u7aef\u5904\u7406\u54cd\u5e94\u6570\u636e</li> </ol>"},{"location":"workflows/data-flow/#_4","title":"\u6570\u636e\u8f6c\u6362\u8fc7\u7a0b","text":"<p>\u5728\u6570\u636e\u6d41\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u6570\u636e\u7ecf\u5386\u4e86\u591a\u6b21\u8f6c\u6362\uff1a</p>"},{"location":"workflows/data-flow/#1_1","title":"1. \u56fe\u50cf\u5230\u6587\u672c\u8f6c\u6362","text":"<pre><code>Base64 \u56fe\u50cf \u2192 \u4e8c\u8fdb\u5236\u56fe\u50cf \u2192 OCR \u5904\u7406 \u2192 \u6587\u672c\u5185\u5bb9\n</code></pre> <p>\u8fd9\u4e2a\u8f6c\u6362\u8fc7\u7a0b\u7531 OCR \u5904\u7406\u6a21\u5757\u5b8c\u6210\uff0c\u5c06\u6587\u6863\u548c\u8868\u5355\u56fe\u50cf\u8f6c\u6362\u4e3a\u6587\u672c\u5185\u5bb9\u3002</p>"},{"location":"workflows/data-flow/#2_1","title":"2. \u6587\u672c\u5230\u7ed3\u6784\u5316\u6570\u636e\u8f6c\u6362","text":"<pre><code>\u6587\u672c\u5185\u5bb9 \u2192 LLM \u63d0\u793a \u2192 LLM \u5904\u7406 \u2192 \u7ed3\u6784\u5316\u6570\u636e\n</code></pre> <p>\u8fd9\u4e2a\u8f6c\u6362\u8fc7\u7a0b\u7531 LLM \u5904\u7406\u6a21\u5757\u5b8c\u6210\uff0c\u5c06\u6587\u672c\u5185\u5bb9\u8f6c\u6362\u4e3a\u7ed3\u6784\u5316\u7684 JSON \u6570\u636e\u3002</p>"},{"location":"workflows/data-flow/#3_1","title":"3. \u7528\u6237\u4fe1\u606f\u5230\u8868\u5355\u586b\u5145\u8f6c\u6362","text":"<pre><code>\u8868\u5355\u7ed3\u6784 + \u7528\u6237\u4fe1\u606f \u2192 \u4fe1\u606f\u5339\u914d \u2192 \u586b\u5145\u8868\u5355\n</code></pre> <p>\u8fd9\u4e2a\u8f6c\u6362\u8fc7\u7a0b\u5728\u8868\u5355\u81ea\u52a8\u586b\u5145\u6d41\u7a0b\u4e2d\u5b8c\u6210\uff0c\u5c06\u7528\u6237\u63d0\u4f9b\u7684\u4fe1\u606f\u4e0e\u8868\u5355\u5b57\u6bb5\u5339\u914d\uff0c\u751f\u6210\u586b\u5145\u540e\u7684\u8868\u5355\u6570\u636e\u3002</p>"},{"location":"workflows/data-flow/#_5","title":"\u6570\u636e\u6d41\u4e2d\u7684\u5b89\u5168\u63aa\u65bd","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u5728\u6570\u636e\u6d41\u7684\u5404\u4e2a\u73af\u8282\u5b9e\u65bd\u4e86\u5b89\u5168\u63aa\u65bd\uff1a</p> <ol> <li>\u4f20\u8f93\u5b89\u5168\uff1a</li> <li>\u4f7f\u7528 RSA \u548c AES \u6df7\u5408\u52a0\u5bc6\u4fdd\u62a4\u6570\u636e\u4f20\u8f93</li> <li>\u4f7f\u7528 SHA256 \u54c8\u5e0c\u9a8c\u8bc1\u6570\u636e\u5b8c\u6574\u6027</li> <li> <p>\u9632\u6b62\u6570\u636e\u6cc4\u9732\u548c\u7be1\u6539</p> </li> <li> <p>\u5b58\u50a8\u5b89\u5168\uff1a</p> </li> <li>\u654f\u611f\u6570\u636e\u52a0\u5bc6\u5b58\u50a8</li> <li>\u8bbf\u95ee\u63a7\u5236\u548c\u6743\u9650\u7ba1\u7406</li> <li> <p>\u5b9a\u671f\u6e05\u7406\u8fc7\u671f\u6570\u636e</p> </li> <li> <p>\u5904\u7406\u5b89\u5168\uff1a</p> </li> <li>\u8f93\u5165\u9a8c\u8bc1\u548c\u8fc7\u6ee4</li> <li>\u9519\u8bef\u5904\u7406\u548c\u5f02\u5e38\u7ba1\u7406</li> <li>\u8d44\u6e90\u9650\u5236\u548c\u5e76\u53d1\u63a7\u5236</li> </ol>"},{"location":"workflows/data-flow/#_6","title":"\u6570\u636e\u6d41\u4e2d\u7684\u6027\u80fd\u4f18\u5316","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u5728\u6570\u636e\u6d41\u7684\u5404\u4e2a\u73af\u8282\u5b9e\u65bd\u4e86\u6027\u80fd\u4f18\u5316\uff1a</p> <ol> <li>\u5e76\u884c\u5904\u7406\uff1a</li> <li>\u5e76\u884c\u5904\u7406\u591a\u4e2a\u56fe\u50cf</li> <li>\u4f7f\u7528\u7ebf\u7a0b\u6c60\u63d0\u9ad8\u5904\u7406\u6548\u7387</li> <li> <p>\u63a7\u5236\u5e76\u53d1\u5ea6\uff0c\u907f\u514d\u8d44\u6e90\u8fc7\u5ea6\u6d88\u8017</p> </li> <li> <p>\u7f13\u5b58\u673a\u5236\uff1a</p> </li> <li>\u7f13\u5b58\u5904\u7406\u7ed3\u679c\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97</li> <li>\u4f18\u5316\u76f8\u540c\u8bf7\u6c42\u7684\u54cd\u5e94\u901f\u5ea6</li> <li> <p>\u5b9a\u671f\u6e05\u7406\u8fc7\u671f\u7f13\u5b58\uff0c\u4f18\u5316\u5b58\u50a8\u7a7a\u95f4</p> </li> <li> <p>\u5f02\u6b65\u5904\u7406\uff1a</p> </li> <li>\u4f7f\u7528\u4efb\u52a1\u961f\u5217\u548c\u5de5\u4f5c\u7ebf\u7a0b\u5b9e\u73b0\u5f02\u6b65\u5904\u7406</li> <li>\u63d0\u9ad8\u7cfb\u7edf\u54cd\u5e94\u80fd\u529b\u548c\u5e76\u53d1\u5904\u7406\u80fd\u529b</li> <li>\u652f\u6301\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u4efb\u52a1</li> </ol>"},{"location":"workflows/data-flow/#_7","title":"\u6570\u636e\u6d41\u4e2d\u7684\u9519\u8bef\u5904\u7406","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u5728\u6570\u636e\u6d41\u7684\u5404\u4e2a\u73af\u8282\u5b9e\u65bd\u4e86\u9519\u8bef\u5904\u7406\u673a\u5236\uff1a</p> <ol> <li>\u9519\u8bef\u6355\u83b7\uff1a</li> <li>\u6355\u83b7\u5e76\u8bb0\u5f55\u5404\u79cd\u9519\u8bef\u548c\u5f02\u5e38</li> <li>\u63d0\u4f9b\u8be6\u7ec6\u7684\u9519\u8bef\u4fe1\u606f</li> <li> <p>\u652f\u6301\u9519\u8bef\u5206\u6790\u548c\u8c03\u8bd5</p> </li> <li> <p>\u9519\u8bef\u6062\u590d\uff1a</p> </li> <li>\u5b9e\u73b0\u9519\u8bef\u6062\u590d\u673a\u5236</li> <li>\u786e\u4fdd\u7cfb\u7edf\u7a33\u5b9a\u6027</li> <li> <p>\u6700\u5c0f\u5316\u9519\u8bef\u5f71\u54cd\u8303\u56f4</p> </li> <li> <p>\u9519\u8bef\u901a\u77e5\uff1a</p> </li> <li>\u5411\u5ba2\u6237\u7aef\u62a5\u544a\u9519\u8bef</li> <li>\u63d0\u4f9b\u6e05\u6670\u7684\u9519\u8bef\u6d88\u606f</li> <li>\u6307\u5bfc\u7528\u6237\u91c7\u53d6\u9002\u5f53\u7684\u884c\u52a8</li> </ol> <p>\u901a\u8fc7\u8fd9\u4e9b\u8bbe\u8ba1\u548c\u5b9e\u73b0\uff0cDocuSnap-Backend \u7cfb\u7edf\u5b9e\u73b0\u4e86\u9ad8\u6548\u3001\u5b89\u5168\u3001\u53ef\u9760\u7684\u6570\u636e\u6d41\uff0c\u652f\u6301\u6587\u6863\u5904\u7406\u3001\u8868\u5355\u5904\u7406\u548c\u8868\u5355\u81ea\u52a8\u586b\u5145\u7b49\u6838\u5fc3\u529f\u80fd\u3002</p>"},{"location":"workflows/document-processing/","title":"Document Processing Workflow","text":"<p>Document processing is one of the core functions of the DocuSnap-Backend system, used to convert document images into structured text and extract key information. This page details the complete document processing workflow.</p>"},{"location":"workflows/document-processing/#workflow-overview","title":"Workflow Overview","text":"<p>The document processing workflow converts document images into structured text data, including document title, type, content summary, key information, etc. The entire process includes image processing, OCR recognition, LLM analysis, and result generation.</p> <pre><code>graph TD\n    A[\"Receive Document Image\"] --&gt; B[\"Request Validation &amp; Decryption\"]\n    B --&gt; C[\"Check Cache\"]\n    C --&gt;|\"Cache Hit\"| D[\"Return Cached Result\"]\n    C --&gt;|\"Cache Miss\"| E[\"Create Task\"]\n    E --&gt; F[\"OCR Processing\"]\n    F --&gt; G[\"LLM Document Analysis\"]\n    G --&gt; H[\"Result Storage\"]\n    H --&gt; I[\"Return Processing Result\"]</code></pre>"},{"location":"workflows/document-processing/#detailed-process","title":"Detailed Process","text":""},{"location":"workflows/document-processing/#1-request-reception-and-validation","title":"1. Request Reception and Validation","text":"<p>The document processing workflow begins with receiving a client request:</p> <ol> <li>Receive Request:</li> <li>Client sends request through the <code>/api/process_document</code> endpoint</li> <li>Request contains encrypted document images (Base64 format)</li> <li> <p>Request uses RSA and AES hybrid encryption</p> </li> <li> <p>Request Decryption:</p> </li> <li>Use RSA private key to decrypt AES key</li> <li>Use AES key to decrypt request data</li> <li> <p>Verify request signature to ensure data integrity</p> </li> <li> <p>Parameter Validation:</p> </li> <li>Validate if request parameters are complete</li> <li>Validate if image format is correct</li> <li>Validate if image count is within allowed range</li> </ol> <p>Code Example:</p> <pre><code>@app.route('/api/process_document', methods=['POST'])\ndef process_document():\n    try:\n        # Decrypt request\n        if not request.is_json:\n            return jsonify({\"error\": \"Request must be in JSON format\"}), 400\n\n        data = request.get_json()\n\n        # Validate required parameters\n        required_fields = ['encrypted_data', 'encrypted_key', 'signature']\n        for field in required_fields:\n            if field not in data:\n                return jsonify({\"error\": f\"Missing required parameter: {field}\"}), 400\n\n        # Decrypt request data\n        try:\n            decrypted_data, aes_key = decrypt_request(\n                data['encrypted_data'],\n                data['encrypted_key'],\n                data['signature']\n            )\n        except Exception as e:\n            return jsonify({\"error\": f\"Request decryption failed: {str(e)}\"}), 400\n\n        # Validate decrypted data\n        if 'images' not in decrypted_data or not isinstance(decrypted_data['images'], list):\n            return jsonify({\"error\": \"Missing images parameter or incorrect format\"}), 400\n\n        if len(decrypted_data['images']) == 0:\n            return jsonify({\"error\": \"At least one image must be provided\"}), 400\n\n        if len(decrypted_data['images']) &gt; MAX_IMAGES:\n            return jsonify({\"error\": f\"Image count exceeds limit (maximum {MAX_IMAGES})\"}), 400\n\n        # Process request...\n</code></pre>"},{"location":"workflows/document-processing/#2-cache-check-and-task-creation","title":"2. Cache Check and Task Creation","text":"<p>Before processing the request, the system checks if there are cached results to avoid duplicate computation:</p> <ol> <li>Cache Check:</li> <li>Generate cache key based on request parameters</li> <li>Query database for matching cached results</li> <li> <p>If cache hit, directly return cached result</p> </li> <li> <p>Task Creation:</p> </li> <li>If cache miss, generate a unique task ID</li> <li>Create task record, set status to \"pending\"</li> <li> <p>Add task to processing queue</p> </li> <li> <p>Return Task ID:</p> </li> <li>Return task ID to client</li> <li>Client can use task ID to query processing status and results</li> </ol> <p>Code Example:</p> <pre><code># Check cache\ncache_key = sha256_hash(json.dumps(decrypted_data, sort_keys=True))\ncached_result = check_cache(cache_key)\n\nif cached_result:\n    # Return cached result\n    response = encrypt_response(cached_result, aes_key)\n    return jsonify(response), 200\n\n# Create task\ntask_id = str(uuid.uuid4())\ncreate_task_record(task_id, 'document')\n\n# Build task object\ntask = {\n    'id': task_id,\n    'type': 'document',\n    'data': decrypted_data,\n    'cache_key': cache_key,\n    'aes_key': aes_key\n}\n\n# Add task to queue\nadd_task_to_queue(task)\n\n# Return task ID\nresponse = encrypt_response({'task_id': task_id}, aes_key)\nreturn jsonify(response), 202  # 202 Accepted\n</code></pre>"},{"location":"workflows/document-processing/#3-ocr-processing","title":"3. OCR Processing","text":"<p>After a task enters the queue, worker threads perform OCR processing:</p> <ol> <li>Image Preprocessing:</li> <li>Decode Base64 images</li> <li> <p>Perform necessary image optimization (such as resizing, contrast enhancement, etc.)</p> </li> <li> <p>OCR Service Call:</p> </li> <li>Call CnOCR service for text recognition</li> <li>Process multiple images in parallel to improve efficiency</li> <li> <p>Use semaphores to control concurrency</p> </li> <li> <p>OCR Result Processing:</p> </li> <li>Collect OCR results for all images</li> <li>Merge into complete text content</li> <li>Prepare input for LLM analysis</li> </ol> <p>Code Example:</p> <pre><code>def process_images(images):\n    \"\"\"Process multiple images in parallel\"\"\"\n    # Create semaphore to control concurrent access to OCR service\n    ocr_semaphore = threading.Semaphore(OCR_MAX_CONCURRENT)\n\n    # Create thread pool\n    with ThreadPoolExecutor(max_workers=OCR_MAX_CONCURRENT) as executor:\n        # Submit all image processing tasks\n        future_to_image = {\n            executor.submit(process_single_image, image, ocr_semaphore): i \n            for i, image in enumerate(images)\n        }\n\n        # Collect results\n        results = []\n        for future in as_completed(future_to_image):\n            try:\n                result = future.result()\n                results.append(result)\n            except Exception as e:\n                logging.error(f\"Image processing failed: {str(e)}\")\n\n        # Sort results by original order\n        results.sort(key=lambda x: x['index'])\n        return [r['text'] for r in results]\n</code></pre>"},{"location":"workflows/document-processing/#4-llm-processing","title":"4. LLM Processing","text":"<p>After OCR processing is complete, the system uses LLM to analyze the text content:</p> <ol> <li>Prompt Construction:</li> <li>Use document processing prompt template</li> <li>Insert OCR text into prompt template</li> <li> <p>Guide LLM to analyze document structure and content</p> </li> <li> <p>LLM API Call:</p> </li> <li>Call Zhipu AI's LLM API</li> <li>Send constructed prompt</li> <li> <p>Receive LLM response</p> </li> <li> <p>Response Parsing:</p> </li> <li>Parse text returned by LLM</li> <li>Extract structured data in JSON format</li> <li>Handle potential format issues</li> </ol> <p>Code Example:</p> <pre><code>def process_document_task(task):\n    \"\"\"Process document type tasks\"\"\"\n    update_task_status(task['id'], 'processing')\n\n    try:\n        # Process images\n        ocr_results = process_images(task['data']['images'])\n\n        # Build prompt and call LLM\n        prompt = build_document_prompt(ocr_results)\n        llm_result = call_llm_api(prompt)\n\n        # Parse results\n        parsed_result = parse_document_result(llm_result)\n\n        # Format results\n        final_result = format_document_result(parsed_result)\n\n        # Update task status and results\n        update_task_status(task['id'], 'completed', final_result)\n\n        # Store cache\n        store_cache(task['cache_key'], final_result)\n\n    except Exception as e:\n        update_task_status(task['id'], 'error', {\"error\": str(e)})\n        raise\n</code></pre>"},{"location":"workflows/document-processing/#5-result-processing","title":"5. Result Processing","text":"<p>After LLM processing is complete, the system processes and stores the results:</p> <ol> <li>Result Formatting:</li> <li>Convert parsed LLM results to standard format</li> <li>Add metadata (such as processing time, source, etc.)</li> <li> <p>Ensure output format consistency</p> </li> <li> <p>Result Storage:</p> </li> <li>Update task status to \"completed\"</li> <li>Store processing results</li> <li> <p>Add results to cache</p> </li> <li> <p>Error Handling:</p> </li> <li>If errors occur during processing, record error information</li> <li>Update task status to \"error\"</li> <li>Store error details</li> </ol> <p>Code Example:</p> <pre><code>def format_document_result(parsed_result):\n    \"\"\"Format document processing results\"\"\"\n    # Ensure result contains necessary fields\n    result = {\n        \"title\": parsed_result.get(\"title\", \"Unknown Title\"),\n        \"document_type\": parsed_result.get(\"document_type\", \"Unknown Type\"),\n        \"summary\": parsed_result.get(\"summary\", \"\"),\n        \"key_dates\": parsed_result.get(\"key_dates\", []),\n        \"key_figures\": parsed_result.get(\"key_figures\", []),\n        \"key_entities\": parsed_result.get(\"key_entities\", []),\n        \"metadata\": {\n            \"processed_at\": int(time.time()),\n            \"source\": \"document_processing\"\n        }\n    }\n\n    return result\n</code></pre>"},{"location":"workflows/document-processing/#6-status-query-and-result-return","title":"6. Status Query and Result Return","text":"<p>Clients can use the task ID to query processing status and results:</p> <ol> <li>Status Query:</li> <li>Client queries task status through the <code>/api/task_status</code> endpoint</li> <li>Provides task ID as parameter</li> <li> <p>System returns current task status (pending, processing, completed, error)</p> </li> <li> <p>Result Query:</p> </li> <li>If task is completed, system returns processing results</li> <li>If task is not completed, system returns current status</li> <li> <p>If task has error, system returns error information</p> </li> <li> <p>Response Encryption:</p> </li> <li>Encrypt response data using previous AES key</li> <li>Calculate signature for response data</li> <li>Return encrypted response and signature</li> </ol> <p>Code Example:</p> <pre><code>@app.route('/api/task_status', methods=['POST'])\ndef get_task_status():\n    try:\n        # Decrypt request\n        if not request.is_json:\n            return jsonify({\"error\": \"Request must be in JSON format\"}), 400\n\n        data = request.get_json()\n\n        # Validate required parameters\n        required_fields = ['encrypted_data', 'encrypted_key', 'signature']\n        for field in required_fields:\n            if field not in data:\n                return jsonify({\"error\": f\"Missing required parameter: {field}\"}), 400\n\n        # Decrypt request data\n        try:\n            decrypted_data, aes_key = decrypt_request(\n                data['encrypted_data'],\n                data['encrypted_key'],\n                data['signature']\n            )\n        except Exception as e:\n            return jsonify({\"error\": f\"Request decryption failed: {str(e)}\"}), 400\n\n        # Validate task ID\n        if 'task_id' not in decrypted_data:\n            return jsonify({\"error\": \"Missing task_id parameter\"}), 400\n\n        task_id = decrypted_data['task_id']\n\n        # Query task status\n        task_result = get_task_result(task_id)\n\n        if not task_result:\n            return jsonify({\"error\": \"Task does not exist\"}), 404\n\n        # Encrypt response\n        response = encrypt_response(task_result, aes_key)\n        return jsonify(response), 200\n\n    except Exception as e:\n        return jsonify({\"error\": f\"Failed to process request: {str(e)}\"}), 500\n</code></pre>"},{"location":"workflows/document-processing/#document-processing-prompt","title":"Document Processing Prompt","text":"<p>The document processing workflow uses a specially designed prompt template to guide LLM in analyzing document content:</p> <pre><code>You are a professional document analysis assistant. Please analyze the following document content, extract key information, and output in the specified format.\n\nDocument content:\n{document_text}\n\nPlease provide the following information:\n1. Document title\n2. Document type (e.g., report, contract, notice, etc.)\n3. Main content summary\n4. Key dates and figures\n5. Important names and organizations\n\nPlease output the result in JSON format, including the following fields:\n- title: Document title\n- document_type: Document type\n- summary: Content summary (100-200 words)\n- key_dates: List of key dates, each item includes date (date) and context (context)\n- key_figures: List of key figures, each item includes figure (figure) and context (context)\n- key_entities: List of important names and organizations, each item includes name (name) and role (role)\n</code></pre> <p>This prompt template guides LLM to extract key information from documents and output results in structured JSON format.</p>"},{"location":"workflows/document-processing/#processing-result-example","title":"Processing Result Example","text":"<p>The output of the document processing workflow is structured JSON data containing key information about the document:</p> <pre><code>{\n  \"title\": \"Report on 2023 Budget Execution\",\n  \"document_type\": \"Financial Report\",\n  \"summary\": \"This report provides a detailed analysis of the 2023 budget execution, including income and expenditure overview, major project execution progress, and existing issues. Overall execution is good, with income achievement rate of 98%, expenditure controlled within budget, and major projects progressing as planned.\",\n  \"key_dates\": [\n    {\n      \"date\": \"2023-01-15\",\n      \"context\": \"Budget plan officially approved\"\n    },\n    {\n      \"date\": \"2023-06-30\",\n      \"context\": \"First half budget execution review\"\n    },\n    {\n      \"date\": \"2023-12-31\",\n      \"context\": \"Annual budget execution deadline\"\n    }\n  ],\n  \"key_figures\": [\n    {\n      \"figure\": \"1,500,000\",\n      \"context\": \"Annual total budget (yuan)\"\n    },\n    {\n      \"figure\": \"1,470,000\",\n      \"context\": \"Actual total income (yuan)\"\n    },\n    {\n      \"figure\": \"1,420,000\",\n      \"context\": \"Actual total expenditure (yuan)\"\n    },\n    {\n      \"figure\": \"98%\",\n      \"context\": \"Income achievement rate\"\n    }\n  ],\n  \"key_entities\": [\n    {\n      \"name\": \"Zhang Ming\",\n      \"role\": \"Financial Director\"\n    },\n    {\n      \"name\": \"Finance Committee\",\n      \"role\": \"Budget approval organization\"\n    },\n    {\n      \"name\": \"Li Hua\",\n      \"role\": \"Budget execution manager\"\n    }\n  ],\n  \"metadata\": {\n    \"processed_at\": 1679012345,\n    \"source\": \"document_processing\"\n  }\n}\n</code></pre>"},{"location":"workflows/document-processing/#error-handling","title":"Error Handling","text":"<p>The document processing workflow implements comprehensive error handling mechanisms:</p> <ol> <li>Request Errors:</li> <li>Missing parameters or incorrect format</li> <li>Decryption failure or signature verification failure</li> <li> <p>Image count exceeds limit</p> </li> <li> <p>OCR Errors:</p> </li> <li>Image decoding failure</li> <li>OCR service call failure</li> <li> <p>OCR result format error</p> </li> <li> <p>LLM Errors:</p> </li> <li>LLM API call failure</li> <li>Response parsing failure</li> <li> <p>Result format does not meet expectations</p> </li> <li> <p>System Errors:</p> </li> <li>Database operation failure</li> <li>Insufficient resources</li> <li>Service unavailable</li> </ol> <p>Each type of error has a corresponding handling strategy, ensuring the system can gracefully handle exceptions and provide clear error feedback.</p>"},{"location":"workflows/document-processing/#performance-optimization","title":"Performance Optimization","text":"<p>The document processing workflow implements various performance optimization measures:</p> <ol> <li>Parallel Processing:</li> <li>Use thread pools to process multiple images in parallel</li> <li> <p>Improve processing efficiency, reduce total processing time</p> </li> <li> <p>Caching Mechanism:</p> </li> <li>Cache processing results to avoid duplicate computation</li> <li> <p>Improve response speed for identical requests</p> </li> <li> <p>Asynchronous Processing:</p> </li> <li>Use task queues and worker threads for asynchronous processing</li> <li> <p>Improve system responsiveness and concurrent processing capability</p> </li> <li> <p>Resource Control:</p> </li> <li>Use semaphores to control concurrency</li> <li>Avoid excessive resource consumption and service overload</li> </ol> <p>Through these designs and implementations, the document processing workflow can efficiently and reliably convert document images into structured text data, providing valuable document analysis services to users.</p>"},{"location":"workflows/form-filling/","title":"\u8868\u5355\u81ea\u52a8\u586b\u5145\u6d41\u7a0b","text":"<p>\u8868\u5355\u81ea\u52a8\u586b\u5145\u662f DocuSnap-Backend \u7cfb\u7edf\u7684\u9ad8\u7ea7\u529f\u80fd\uff0c\u7528\u4e8e\u6839\u636e\u7528\u6237\u63d0\u4f9b\u7684\u4fe1\u606f\u81ea\u52a8\u586b\u5145\u8868\u5355\uff0c\u63d0\u9ad8\u586b\u8868\u6548\u7387\u3002\u672c\u9875\u9762\u8be6\u7ec6\u4ecb\u7ecd\u8868\u5355\u81ea\u52a8\u586b\u5145\u7684\u5b8c\u6574\u6d41\u7a0b\u3002</p>"},{"location":"workflows/form-filling/#_2","title":"\u6d41\u7a0b\u6982\u8ff0","text":"<p>\u8868\u5355\u81ea\u52a8\u586b\u5145\u6d41\u7a0b\u5c06\u7a7a\u767d\u8868\u5355\u56fe\u50cf\u548c\u7528\u6237\u63d0\u4f9b\u7684\u4fe1\u606f\u4f5c\u4e3a\u8f93\u5165\uff0c\u751f\u6210\u586b\u5145\u540e\u7684\u8868\u5355\u6570\u636e\u3002\u6574\u4e2a\u6d41\u7a0b\u5305\u62ec\u8868\u5355\u7ed3\u6784\u5206\u6790\u3001\u4fe1\u606f\u5339\u914d\u3001\u667a\u80fd\u586b\u5145\u548c\u7ed3\u679c\u751f\u6210\u7b49\u6b65\u9aa4\u3002</p> <pre><code>graph TD\n    A[\"\u63a5\u6536\u8868\u5355\u56fe\u50cf\u548c\u7528\u6237\u4fe1\u606f\"] --&gt; B[\"\u8bf7\u6c42\u9a8c\u8bc1\u4e0e\u89e3\u5bc6\"]\n    B --&gt; C[\"\u68c0\u67e5\u7f13\u5b58\"]\n    C --&gt;|\"\u7f13\u5b58\u547d\u4e2d\"| D[\"\u8fd4\u56de\u7f13\u5b58\u7ed3\u679c\"]\n    C --&gt;|\"\u7f13\u5b58\u672a\u547d\u4e2d\"| E[\"\u521b\u5efa\u4efb\u52a1\"]\n    E --&gt; F[\"OCR \u5904\u7406\"]\n    F --&gt; G[\"\u8868\u5355\u7ed3\u6784\u5206\u6790\"]\n    G --&gt; H[\"\u4fe1\u606f\u5339\u914d\u4e0e\u586b\u5145\"]\n    H --&gt; I[\"\u7ed3\u679c\u5b58\u50a8\"]\n    I --&gt; J[\"\u8fd4\u56de\u586b\u5145\u7ed3\u679c\"]</code></pre>"},{"location":"workflows/form-filling/#_3","title":"\u8be6\u7ec6\u6d41\u7a0b","text":""},{"location":"workflows/form-filling/#1","title":"1. \u8bf7\u6c42\u63a5\u6536\u4e0e\u9a8c\u8bc1","text":"<p>\u8868\u5355\u81ea\u52a8\u586b\u5145\u6d41\u7a0b\u4ece\u63a5\u6536\u5ba2\u6237\u7aef\u8bf7\u6c42\u5f00\u59cb\uff1a</p> <ol> <li>\u63a5\u6536\u8bf7\u6c42\uff1a</li> <li>\u5ba2\u6237\u7aef\u901a\u8fc7 <code>/api/process_form_filling</code> \u7aef\u70b9\u53d1\u9001\u8bf7\u6c42</li> <li>\u8bf7\u6c42\u5305\u542b\u52a0\u5bc6\u7684\u8868\u5355\u56fe\u50cf\uff08Base64 \u683c\u5f0f\uff09\u548c\u7528\u6237\u4fe1\u606f</li> <li> <p>\u8bf7\u6c42\u4f7f\u7528 RSA \u548c AES \u6df7\u5408\u52a0\u5bc6</p> </li> <li> <p>\u8bf7\u6c42\u89e3\u5bc6\uff1a</p> </li> <li>\u4f7f\u7528 RSA \u79c1\u94a5\u89e3\u5bc6 AES \u5bc6\u94a5</li> <li>\u4f7f\u7528 AES \u5bc6\u94a5\u89e3\u5bc6\u8bf7\u6c42\u6570\u636e</li> <li> <p>\u9a8c\u8bc1\u8bf7\u6c42\u7b7e\u540d\uff0c\u786e\u4fdd\u6570\u636e\u5b8c\u6574\u6027</p> </li> <li> <p>\u53c2\u6570\u9a8c\u8bc1\uff1a</p> </li> <li>\u9a8c\u8bc1\u8bf7\u6c42\u53c2\u6570\u662f\u5426\u5b8c\u6574</li> <li>\u9a8c\u8bc1\u56fe\u50cf\u683c\u5f0f\u662f\u5426\u6b63\u786e</li> <li>\u9a8c\u8bc1\u7528\u6237\u4fe1\u606f\u683c\u5f0f\u662f\u5426\u6b63\u786e</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>@app.route('/api/process_form_filling', methods=['POST'])\ndef process_form_filling():\n    try:\n        # \u89e3\u5bc6\u8bf7\u6c42\n        if not request.is_json:\n            return jsonify({\"error\": \"\u8bf7\u6c42\u5fc5\u987b\u662fJSON\u683c\u5f0f\"}), 400\n\n        data = request.get_json()\n\n        # \u9a8c\u8bc1\u5fc5\u8981\u53c2\u6570\n        required_fields = ['encrypted_data', 'encrypted_key', 'signature']\n        for field in required_fields:\n            if field not in data:\n                return jsonify({\"error\": f\"\u7f3a\u5c11\u5fc5\u8981\u53c2\u6570: {field}\"}), 400\n\n        # \u89e3\u5bc6\u8bf7\u6c42\u6570\u636e\n        try:\n            decrypted_data, aes_key = decrypt_request(\n                data['encrypted_data'],\n                data['encrypted_key'],\n                data['signature']\n            )\n        except Exception as e:\n            return jsonify({\"error\": f\"\u8bf7\u6c42\u89e3\u5bc6\u5931\u8d25: {str(e)}\"}), 400\n\n        # \u9a8c\u8bc1\u89e3\u5bc6\u540e\u7684\u6570\u636e\n        if 'images' not in decrypted_data or not isinstance(decrypted_data['images'], list):\n            return jsonify({\"error\": \"\u7f3a\u5c11images\u53c2\u6570\u6216\u683c\u5f0f\u4e0d\u6b63\u786e\"}), 400\n\n        if 'user_data' not in decrypted_data or not isinstance(decrypted_data['user_data'], dict):\n            return jsonify({\"error\": \"\u7f3a\u5c11user_data\u53c2\u6570\u6216\u683c\u5f0f\u4e0d\u6b63\u786e\"}), 400\n\n        if len(decrypted_data['images']) == 0:\n            return jsonify({\"error\": \"\u81f3\u5c11\u9700\u8981\u63d0\u4f9b\u4e00\u5f20\u56fe\u50cf\"}), 400\n\n        if len(decrypted_data['images']) &gt; MAX_IMAGES:\n            return jsonify({\"error\": f\"\u56fe\u50cf\u6570\u91cf\u8d85\u8fc7\u9650\u5236\uff08\u6700\u5927 {MAX_IMAGES} \u5f20\uff09\"}), 400\n\n        # \u5904\u7406\u8bf7\u6c42...\n</code></pre>"},{"location":"workflows/form-filling/#2","title":"2. \u7f13\u5b58\u68c0\u67e5\u4e0e\u4efb\u52a1\u521b\u5efa","text":"<p>\u5728\u5904\u7406\u8bf7\u6c42\u4e4b\u524d\uff0c\u7cfb\u7edf\u4f1a\u68c0\u67e5\u662f\u5426\u6709\u7f13\u5b58\u7684\u7ed3\u679c\uff0c\u4ee5\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff1a</p> <ol> <li>\u7f13\u5b58\u68c0\u67e5\uff1a</li> <li>\u6839\u636e\u8bf7\u6c42\u53c2\u6570\u751f\u6210\u7f13\u5b58\u952e</li> <li>\u67e5\u8be2\u6570\u636e\u5e93\u662f\u5426\u6709\u5339\u914d\u7684\u7f13\u5b58\u7ed3\u679c</li> <li> <p>\u5982\u679c\u7f13\u5b58\u547d\u4e2d\uff0c\u76f4\u63a5\u8fd4\u56de\u7f13\u5b58\u7ed3\u679c</p> </li> <li> <p>\u4efb\u52a1\u521b\u5efa\uff1a</p> </li> <li>\u5982\u679c\u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u751f\u6210\u552f\u4e00\u7684\u4efb\u52a1 ID</li> <li>\u521b\u5efa\u4efb\u52a1\u8bb0\u5f55\uff0c\u8bbe\u7f6e\u72b6\u6001\u4e3a\"\u5f85\u5904\u7406\"</li> <li> <p>\u5c06\u4efb\u52a1\u6dfb\u52a0\u5230\u5904\u7406\u961f\u5217</p> </li> <li> <p>\u8fd4\u56de\u4efb\u52a1 ID\uff1a</p> </li> <li>\u5411\u5ba2\u6237\u7aef\u8fd4\u56de\u4efb\u52a1 ID</li> <li>\u5ba2\u6237\u7aef\u53ef\u4ee5\u4f7f\u7528\u4efb\u52a1 ID \u67e5\u8be2\u5904\u7406\u72b6\u6001\u548c\u7ed3\u679c</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code># \u68c0\u67e5\u7f13\u5b58\ncache_key = sha256_hash(json.dumps(decrypted_data, sort_keys=True))\ncached_result = check_cache(cache_key)\n\nif cached_result:\n    # \u8fd4\u56de\u7f13\u5b58\u7ed3\u679c\n    response = encrypt_response(cached_result, aes_key)\n    return jsonify(response), 200\n\n# \u521b\u5efa\u4efb\u52a1\ntask_id = str(uuid.uuid4())\ncreate_task_record(task_id, 'form_filling')\n\n# \u6784\u5efa\u4efb\u52a1\u5bf9\u8c61\ntask = {\n    'id': task_id,\n    'type': 'form_filling',\n    'data': decrypted_data,\n    'cache_key': cache_key,\n    'aes_key': aes_key\n}\n\n# \u6dfb\u52a0\u4efb\u52a1\u5230\u961f\u5217\nadd_task_to_queue(task)\n\n# \u8fd4\u56de\u4efb\u52a1 ID\nresponse = encrypt_response({'task_id': task_id}, aes_key)\nreturn jsonify(response), 202  # 202 Accepted\n</code></pre>"},{"location":"workflows/form-filling/#3-ocr","title":"3. OCR \u5904\u7406","text":"<p>\u4efb\u52a1\u8fdb\u5165\u961f\u5217\u540e\uff0c\u5de5\u4f5c\u7ebf\u7a0b\u4f1a\u6267\u884c OCR \u5904\u7406\uff0c\u4e0e\u8868\u5355\u5904\u7406\u6d41\u7a0b\u7c7b\u4f3c\uff1a</p> <ol> <li>\u56fe\u50cf\u9884\u5904\u7406\uff1a</li> <li>\u89e3\u7801 Base64 \u56fe\u50cf</li> <li> <p>\u8fdb\u884c\u5fc5\u8981\u7684\u56fe\u50cf\u4f18\u5316</p> </li> <li> <p>OCR \u670d\u52a1\u8c03\u7528\uff1a</p> </li> <li>\u8c03\u7528 CnOCR \u670d\u52a1\u8fdb\u884c\u6587\u672c\u8bc6\u522b</li> <li> <p>\u5e76\u884c\u5904\u7406\u591a\u4e2a\u56fe\u50cf\uff0c\u63d0\u9ad8\u6548\u7387</p> </li> <li> <p>OCR \u7ed3\u679c\u5904\u7406\uff1a</p> </li> <li>\u6536\u96c6\u6240\u6709\u56fe\u50cf\u7684 OCR \u7ed3\u679c</li> <li>\u5408\u5e76\u4e3a\u5b8c\u6574\u7684\u6587\u672c\u5185\u5bb9</li> </ol>"},{"location":"workflows/form-filling/#4","title":"4. \u8868\u5355\u7ed3\u6784\u5206\u6790","text":"<p>OCR \u5904\u7406\u5b8c\u6210\u540e\uff0c\u7cfb\u7edf\u4f1a\u5206\u6790\u8868\u5355\u7ed3\u6784\uff1a</p> <ol> <li>\u5b57\u6bb5\u8bc6\u522b\uff1a</li> <li>\u8bc6\u522b\u8868\u5355\u4e2d\u7684\u6240\u6709\u5b57\u6bb5</li> <li>\u786e\u5b9a\u5b57\u6bb5\u7684\u4f4d\u7f6e\u548c\u7c7b\u578b</li> <li> <p>\u8bc6\u522b\u5fc5\u586b\u5b57\u6bb5\u548c\u9009\u586b\u5b57\u6bb5</p> </li> <li> <p>\u7ed3\u6784\u6620\u5c04\uff1a</p> </li> <li>\u5c06\u8868\u5355\u7ed3\u6784\u6620\u5c04\u4e3a\u5b57\u6bb5\u5217\u8868</li> <li>\u786e\u5b9a\u5b57\u6bb5\u4e4b\u95f4\u7684\u5173\u7cfb</li> <li>\u8bc6\u522b\u5b57\u6bb5\u7684\u5206\u7ec4\u548c\u7c7b\u522b</li> </ol>"},{"location":"workflows/form-filling/#5","title":"5. \u4fe1\u606f\u5339\u914d\u4e0e\u586b\u5145","text":"<p>\u8868\u5355\u7ed3\u6784\u5206\u6790\u5b8c\u6210\u540e\uff0c\u7cfb\u7edf\u4f1a\u5c06\u7528\u6237\u63d0\u4f9b\u7684\u4fe1\u606f\u4e0e\u8868\u5355\u5b57\u6bb5\u8fdb\u884c\u5339\u914d\uff1a</p> <ol> <li>\u4fe1\u606f\u5339\u914d\uff1a</li> <li>\u5c06\u7528\u6237\u4fe1\u606f\u4e0e\u8868\u5355\u5b57\u6bb5\u8fdb\u884c\u5339\u914d</li> <li>\u5904\u7406\u5b57\u6bb5\u540d\u79f0\u7684\u53d8\u4f53\u548c\u540c\u4e49\u8bcd</li> <li> <p>\u8003\u8651\u5b57\u6bb5\u7684\u4e0a\u4e0b\u6587\u548c\u7c7b\u522b</p> </li> <li> <p>\u667a\u80fd\u586b\u5145\uff1a</p> </li> <li>\u6839\u636e\u5339\u914d\u7ed3\u679c\u586b\u5145\u8868\u5355\u5b57\u6bb5</li> <li>\u5bf9\u4e8e\u7f3a\u5931\u7684\u5fc5\u586b\u5b57\u6bb5\uff0c\u6807\u8bb0\u4e3a\"\u7f3a\u5931\"</li> <li> <p>\u5bf9\u4e8e\u53ef\u4ee5\u63a8\u65ad\u7684\u5b57\u6bb5\uff0c\u5c1d\u8bd5\u5408\u7406\u63a8\u65ad</p> </li> <li> <p>\u683c\u5f0f\u8c03\u6574\uff1a</p> </li> <li>\u6839\u636e\u5b57\u6bb5\u7c7b\u578b\u8c03\u6574\u503c\u7684\u683c\u5f0f</li> <li>\u786e\u4fdd\u586b\u5145\u503c\u7b26\u5408\u5b57\u6bb5\u7684\u8981\u6c42</li> <li>\u5904\u7406\u7279\u6b8a\u683c\u5f0f\u7684\u5b57\u6bb5\uff08\u5982\u65e5\u671f\u3001\u7535\u8bdd\u53f7\u7801\u7b49\uff09</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def process_form_filling_task(task):\n    \"\"\"\u5904\u7406\u8868\u5355\u586b\u5145\u7c7b\u578b\u7684\u4efb\u52a1\"\"\"\n    update_task_status(task['id'], 'processing')\n\n    try:\n        # \u5904\u7406\u56fe\u50cf\n        ocr_results = process_images(task['data']['images'])\n\n        # \u83b7\u53d6\u7528\u6237\u6570\u636e\n        user_data = task['data']['user_data']\n\n        # \u6784\u5efa\u63d0\u793a\u5e76\u8c03\u7528 LLM\n        prompt = build_form_filling_prompt(ocr_results, user_data)\n        llm_result = call_llm_api(prompt)\n\n        # \u89e3\u6790\u7ed3\u679c\n        parsed_result = parse_form_filling_result(llm_result)\n\n        # \u683c\u5f0f\u5316\u7ed3\u679c\n        final_result = format_form_filling_result(parsed_result)\n\n        # \u66f4\u65b0\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c\n        update_task_status(task['id'], 'completed', final_result)\n\n        # \u5b58\u50a8\u7f13\u5b58\n        store_cache(task['cache_key'], final_result)\n\n    except Exception as e:\n        update_task_status(task['id'], 'error', {\"error\": str(e)})\n        raise\n</code></pre>"},{"location":"workflows/form-filling/#6","title":"6. \u7ed3\u679c\u5904\u7406","text":"<p>\u4fe1\u606f\u5339\u914d\u4e0e\u586b\u5145\u5b8c\u6210\u540e\uff0c\u7cfb\u7edf\u4f1a\u5904\u7406\u548c\u5b58\u50a8\u7ed3\u679c\uff1a</p> <ol> <li>\u7ed3\u679c\u683c\u5f0f\u5316\uff1a</li> <li>\u5c06\u586b\u5145\u7ed3\u679c\u8f6c\u6362\u4e3a\u6807\u51c6\u683c\u5f0f</li> <li>\u6dfb\u52a0\u5143\u6570\u636e\uff08\u5982\u5904\u7406\u65f6\u95f4\u3001\u6765\u6e90\u7b49\uff09</li> <li> <p>\u786e\u4fdd\u8f93\u51fa\u683c\u5f0f\u7684\u4e00\u81f4\u6027</p> </li> <li> <p>\u7ed3\u679c\u5b58\u50a8\uff1a</p> </li> <li>\u66f4\u65b0\u4efb\u52a1\u72b6\u6001\u4e3a\"\u5df2\u5b8c\u6210\"</li> <li>\u5b58\u50a8\u5904\u7406\u7ed3\u679c</li> <li> <p>\u5c06\u7ed3\u679c\u6dfb\u52a0\u5230\u7f13\u5b58</p> </li> <li> <p>\u9519\u8bef\u5904\u7406\uff1a</p> </li> <li>\u5982\u679c\u5904\u7406\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u9519\u8bef\uff0c\u8bb0\u5f55\u9519\u8bef\u4fe1\u606f</li> <li>\u66f4\u65b0\u4efb\u52a1\u72b6\u6001\u4e3a\"\u9519\u8bef\"</li> <li>\u5b58\u50a8\u9519\u8bef\u8be6\u60c5</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def format_form_filling_result(parsed_result):\n    \"\"\"\u683c\u5f0f\u5316\u8868\u5355\u586b\u5145\u7ed3\u679c\"\"\"\n    # \u786e\u4fdd\u7ed3\u679c\u5305\u542b\u5fc5\u8981\u7684\u5b57\u6bb5\n    result = {\n        \"form_title\": parsed_result.get(\"form_title\", \"\u672a\u77e5\u8868\u5355\"),\n        \"filled_fields\": parsed_result.get(\"filled_fields\", []),\n        \"missing_fields\": parsed_result.get(\"missing_fields\", []),\n        \"complete\": parsed_result.get(\"complete\", False),\n        \"metadata\": {\n            \"processed_at\": int(time.time()),\n            \"source\": \"form_filling\"\n        }\n    }\n\n    # \u786e\u4fdd\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u6709\u5fc5\u8981\u7684\u5c5e\u6027\n    for field in result[\"filled_fields\"]:\n        if \"name\" not in field:\n            field[\"name\"] = \"\u672a\u547d\u540d\u5b57\u6bb5\"\n        if \"value\" not in field:\n            field[\"value\"] = \"\"\n        if \"source\" not in field:\n            field[\"source\"] = \"unknown\"\n\n    return result\n</code></pre>"},{"location":"workflows/form-filling/#7","title":"7. \u72b6\u6001\u67e5\u8be2\u4e0e\u7ed3\u679c\u8fd4\u56de","text":"<p>\u5ba2\u6237\u7aef\u53ef\u4ee5\u4f7f\u7528\u4efb\u52a1 ID \u67e5\u8be2\u5904\u7406\u72b6\u6001\u548c\u7ed3\u679c\uff0c\u8fd9\u4e00\u6b65\u9aa4\u4e0e\u5176\u4ed6\u6d41\u7a0b\u7c7b\u4f3c\u3002</p>"},{"location":"workflows/form-filling/#_4","title":"\u8868\u5355\u586b\u5145\u63d0\u793a","text":"<p>\u8868\u5355\u81ea\u52a8\u586b\u5145\u6d41\u7a0b\u4f7f\u7528\u4e13\u95e8\u8bbe\u8ba1\u7684\u63d0\u793a\u6a21\u677f\uff0c\u5f15\u5bfc LLM \u5c06\u7528\u6237\u4fe1\u606f\u4e0e\u8868\u5355\u5b57\u6bb5\u5339\u914d\uff1a</p> <pre><code>\u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u8868\u5355\u586b\u5145\u52a9\u624b\u3002\u8bf7\u6839\u636e\u7528\u6237\u63d0\u4f9b\u7684\u4fe1\u606f\uff0c\u586b\u5145\u4ee5\u4e0b\u8868\u5355\u3002\n\n\u8868\u5355\u5185\u5bb9\uff1a\n{form_text}\n\n\u7528\u6237\u4fe1\u606f\uff1a\n{user_data}\n\n\u8bf7\u6267\u884c\u4ee5\u4e0b\u4efb\u52a1\uff1a\n1. \u5206\u6790\u8868\u5355\u7ed3\u6784\uff0c\u8bc6\u522b\u6240\u6709\u9700\u8981\u586b\u5199\u7684\u5b57\u6bb5\n2. \u5c06\u7528\u6237\u63d0\u4f9b\u7684\u4fe1\u606f\u4e0e\u8868\u5355\u5b57\u6bb5\u8fdb\u884c\u5339\u914d\n3. \u5bf9\u4e8e\u7f3a\u5931\u7684\u5fc5\u586b\u5b57\u6bb5\uff0c\u6807\u8bb0\u4e3a\"\u7f3a\u5931\"\n4. \u5bf9\u4e8e\u53ef\u4ee5\u63a8\u65ad\u7684\u5b57\u6bb5\uff0c\u5c1d\u8bd5\u5408\u7406\u63a8\u65ad\n\n\u8bf7\u4ee5JSON\u683c\u5f0f\u8f93\u51fa\u7ed3\u679c\uff0c\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\uff1a\n- form_title: \u8868\u5355\u6807\u9898\n- filled_fields: \u5df2\u586b\u5145\u7684\u5b57\u6bb5\u5217\u8868\uff0c\u6bcf\u4e2a\u5b57\u6bb5\u5305\u542b\uff1a\n  - name: \u5b57\u6bb5\u540d\u79f0\n  - value: \u586b\u5145\u7684\u503c\n  - source: \u503c\u7684\u6765\u6e90\uff08\"user_provided\", \"inferred\", \"default\"\uff09\n- missing_fields: \u7f3a\u5931\u7684\u5fc5\u586b\u5b57\u6bb5\u5217\u8868\n- complete: \u8868\u5355\u662f\u5426\u5b8c\u6574\u586b\u5199\uff08\u5e03\u5c14\u503c\uff09\n</code></pre> <p>\u8fd9\u4e2a\u63d0\u793a\u6a21\u677f\u6307\u5bfc LLM \u5c06\u7528\u6237\u63d0\u4f9b\u7684\u4fe1\u606f\u4e0e\u8868\u5355\u5b57\u6bb5\u8fdb\u884c\u5339\u914d\uff0c\u5e76\u751f\u6210\u586b\u5145\u540e\u7684\u8868\u5355\u6570\u636e\u3002</p>"},{"location":"workflows/form-filling/#_5","title":"\u5904\u7406\u7ed3\u679c\u793a\u4f8b","text":"<p>\u8868\u5355\u81ea\u52a8\u586b\u5145\u6d41\u7a0b\u7684\u8f93\u51fa\u662f\u7ed3\u6784\u5316\u7684 JSON \u6570\u636e\uff0c\u5305\u542b\u586b\u5145\u540e\u7684\u8868\u5355\u5b57\u6bb5\uff1a</p> <pre><code>{\n  \"form_title\": \"\u4e2a\u4eba\u4fe1\u606f\u767b\u8bb0\u8868\",\n  \"filled_fields\": [\n    {\n      \"name\": \"\u59d3\u540d\",\n      \"value\": \"\u674e\u660e\",\n      \"source\": \"user_provided\"\n    },\n    {\n      \"name\": \"\u6027\u522b\",\n      \"value\": \"\u7537\",\n      \"source\": \"user_provided\"\n    },\n    {\n      \"name\": \"\u51fa\u751f\u65e5\u671f\",\n      \"value\": \"1985-07-15\",\n      \"source\": \"user_provided\"\n    },\n    {\n      \"name\": \"\u8eab\u4efd\u8bc1\u53f7\",\n      \"value\": \"310************789\",\n      \"source\": \"user_provided\"\n    },\n    {\n      \"name\": \"\u624b\u673a\u53f7\u7801\",\n      \"value\": \"139********\",\n      \"source\": \"user_provided\"\n    },\n    {\n      \"name\": \"\u7535\u5b50\u90ae\u7bb1\",\n      \"value\": \"liming@example.com\",\n      \"source\": \"user_provided\"\n    },\n    {\n      \"name\": \"\u901a\u8baf\u5730\u5740\",\n      \"value\": \"\u4e0a\u6d77\u5e02\u9ec4\u6d66\u533a\u4eba\u6c11\u5e7f\u573a\",\n      \"source\": \"user_provided\"\n    },\n    {\n      \"name\": \"\u90ae\u653f\u7f16\u7801\",\n      \"value\": \"200001\",\n      \"source\": \"inferred\"\n    },\n    {\n      \"name\": \"\u5b66\u5386\",\n      \"value\": \"\u7855\u58eb\",\n      \"source\": \"user_provided\"\n    },\n    {\n      \"name\": \"\u6bd5\u4e1a\u9662\u6821\",\n      \"value\": \"\u590d\u65e6\u5927\u5b66\",\n      \"source\": \"user_provided\"\n    },\n    {\n      \"name\": \"\u4e13\u4e1a\",\n      \"value\": \"\u91d1\u878d\u5b66\",\n      \"source\": \"user_provided\"\n    }\n  ],\n  \"missing_fields\": [\n    \"\u5de5\u4f5c\u5355\u4f4d\",\n    \"\u804c\u4f4d\"\n  ],\n  \"complete\": false,\n  \"metadata\": {\n    \"processed_at\": 1679012345,\n    \"source\": \"form_filling\"\n  }\n}\n</code></pre>"},{"location":"workflows/form-filling/#_6","title":"\u8868\u5355\u81ea\u52a8\u586b\u5145\u7684\u7279\u6b8a\u8003\u91cf","text":"<p>\u8868\u5355\u81ea\u52a8\u586b\u5145\u4e0e\u5176\u4ed6\u6d41\u7a0b\u76f8\u6bd4\uff0c\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u8003\u91cf\uff1a</p> <ol> <li>\u4fe1\u606f\u5339\u914d\uff1a</li> <li>\u5904\u7406\u5b57\u6bb5\u540d\u79f0\u7684\u53d8\u4f53\u548c\u540c\u4e49\u8bcd</li> <li>\u8003\u8651\u5b57\u6bb5\u7684\u4e0a\u4e0b\u6587\u548c\u7c7b\u522b</li> <li> <p>\u5904\u7406\u4e0d\u540c\u683c\u5f0f\u7684\u7528\u6237\u4fe1\u606f</p> </li> <li> <p>\u667a\u80fd\u63a8\u65ad\uff1a</p> </li> <li>\u6839\u636e\u5df2\u6709\u4fe1\u606f\u63a8\u65ad\u7f3a\u5931\u5b57\u6bb5</li> <li>\u5904\u7406\u4f9d\u8d56\u5173\u7cfb\uff08\u5982\u6839\u636e\u57ce\u5e02\u63a8\u65ad\u90ae\u653f\u7f16\u7801\uff09</li> <li> <p>\u63d0\u4f9b\u5408\u7406\u7684\u9ed8\u8ba4\u503c</p> </li> <li> <p>\u5b8c\u6574\u6027\u68c0\u67e5\uff1a</p> </li> <li>\u8bc6\u522b\u5fc5\u586b\u5b57\u6bb5\u548c\u9009\u586b\u5b57\u6bb5</li> <li>\u68c0\u67e5\u8868\u5355\u662f\u5426\u5b8c\u6574\u586b\u5199</li> <li> <p>\u6807\u8bc6\u7f3a\u5931\u7684\u5fc5\u8981\u4fe1\u606f</p> </li> <li> <p>\u683c\u5f0f\u9002\u914d\uff1a</p> </li> <li>\u6839\u636e\u5b57\u6bb5\u8981\u6c42\u8c03\u6574\u503c\u7684\u683c\u5f0f</li> <li>\u5904\u7406\u7279\u6b8a\u683c\u5f0f\u7684\u5b57\u6bb5</li> <li>\u786e\u4fdd\u586b\u5145\u503c\u7b26\u5408\u8868\u5355\u89c4\u8303</li> </ol>"},{"location":"workflows/form-filling/#_7","title":"\u9519\u8bef\u5904\u7406","text":"<p>\u8868\u5355\u81ea\u52a8\u586b\u5145\u6d41\u7a0b\u5b9e\u73b0\u4e86\u5168\u9762\u7684\u9519\u8bef\u5904\u7406\u673a\u5236\uff0c\u9664\u4e86\u901a\u7528\u7684\u9519\u8bef\u5904\u7406\u5916\uff0c\u8fd8\u5305\u62ec\u4e00\u4e9b\u7279\u5b9a\u4e8e\u8868\u5355\u586b\u5145\u7684\u9519\u8bef\u5904\u7406\uff1a</p> <ol> <li>\u4fe1\u606f\u5339\u914d\u9519\u8bef\uff1a</li> <li>\u7528\u6237\u4fe1\u606f\u4e0e\u8868\u5355\u5b57\u6bb5\u65e0\u6cd5\u5339\u914d</li> <li>\u7528\u6237\u4fe1\u606f\u683c\u5f0f\u4e0d\u7b26\u5408\u8981\u6c42</li> <li> <p>\u7528\u6237\u4fe1\u606f\u4e0d\u5b8c\u6574</p> </li> <li> <p>\u63a8\u65ad\u9519\u8bef\uff1a</p> </li> <li>\u65e0\u6cd5\u63a8\u65ad\u7f3a\u5931\u5b57\u6bb5</li> <li>\u63a8\u65ad\u7ed3\u679c\u4e0d\u53ef\u9760</li> <li>\u63a8\u65ad\u4f9d\u8d56\u7684\u4fe1\u606f\u4e0d\u8db3</li> </ol>"},{"location":"workflows/form-filling/#_8","title":"\u6027\u80fd\u4f18\u5316","text":"<p>\u8868\u5355\u81ea\u52a8\u586b\u5145\u6d41\u7a0b\u5b9e\u73b0\u4e86\u591a\u79cd\u6027\u80fd\u4f18\u5316\u63aa\u65bd\uff0c\u9664\u4e86\u901a\u7528\u7684\u4f18\u5316\u5916\uff0c\u8fd8\u5305\u62ec\u4e00\u4e9b\u7279\u5b9a\u4e8e\u8868\u5355\u586b\u5145\u7684\u4f18\u5316\uff1a</p> <ol> <li>\u5b57\u6bb5\u6620\u5c04\u7f13\u5b58\uff1a</li> <li>\u7f13\u5b58\u5e38\u89c1\u8868\u5355\u7684\u5b57\u6bb5\u6620\u5c04</li> <li>\u63d0\u9ad8\u5339\u914d\u6548\u7387\u548c\u51c6\u786e\u6027</li> <li> <p>\u51cf\u5c11 LLM \u8c03\u7528\u6b21\u6570</p> </li> <li> <p>\u7528\u6237\u4fe1\u606f\u9884\u5904\u7406\uff1a</p> </li> <li>\u6807\u51c6\u5316\u7528\u6237\u4fe1\u606f\u683c\u5f0f</li> <li>\u63d0\u53d6\u5173\u952e\u4fe1\u606f</li> <li>\u4f18\u5316\u5339\u914d\u7b97\u6cd5</li> </ol> <p>\u901a\u8fc7\u8fd9\u4e9b\u8bbe\u8ba1\u548c\u5b9e\u73b0\uff0c\u8868\u5355\u81ea\u52a8\u586b\u5145\u6d41\u7a0b\u80fd\u591f\u9ad8\u6548\u3001\u53ef\u9760\u5730\u5c06\u7528\u6237\u4fe1\u606f\u4e0e\u8868\u5355\u5b57\u6bb5\u5339\u914d\uff0c\u751f\u6210\u586b\u5145\u540e\u7684\u8868\u5355\u6570\u636e\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u4fbf\u6377\u7684\u8868\u5355\u586b\u5199\u670d\u52a1\u3002</p>"},{"location":"workflows/form-processing/","title":"\u8868\u5355\u5904\u7406\u6d41\u7a0b","text":"<p>\u8868\u5355\u5904\u7406\u662f DocuSnap-Backend \u7cfb\u7edf\u7684\u6838\u5fc3\u529f\u80fd\u4e4b\u4e00\uff0c\u7528\u4e8e\u4ece\u8868\u5355\u56fe\u50cf\u4e2d\u63d0\u53d6\u5b57\u6bb5\u548c\u503c\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u7ed3\u6784\u5316\u6570\u636e\u3002\u672c\u9875\u9762\u8be6\u7ec6\u4ecb\u7ecd\u8868\u5355\u5904\u7406\u7684\u5b8c\u6574\u6d41\u7a0b\u3002</p>"},{"location":"workflows/form-processing/#_2","title":"\u6d41\u7a0b\u6982\u8ff0","text":"<p>\u8868\u5355\u5904\u7406\u6d41\u7a0b\u5c06\u8868\u5355\u56fe\u50cf\u8f6c\u6362\u4e3a\u7ed3\u6784\u5316\u7684\u5b57\u6bb5-\u503c\u5bf9\u6570\u636e\uff0c\u5305\u62ec\u8868\u5355\u6807\u9898\u3001\u7c7b\u578b\u3001\u5b57\u6bb5\u5206\u7c7b\u7b49\u4fe1\u606f\u3002\u6574\u4e2a\u6d41\u7a0b\u5305\u62ec\u56fe\u50cf\u5904\u7406\u3001OCR \u8bc6\u522b\u3001LLM \u5206\u6790\u548c\u7ed3\u679c\u751f\u6210\u7b49\u6b65\u9aa4\u3002</p> <pre><code>graph TD\n    A[\"\u63a5\u6536\u8868\u5355\u56fe\u50cf\"] --&gt; B[\"\u8bf7\u6c42\u9a8c\u8bc1\u4e0e\u89e3\u5bc6\"]\n    B --&gt; C[\"\u68c0\u67e5\u7f13\u5b58\"]\n    C --&gt;|\"\u7f13\u5b58\u547d\u4e2d\"| D[\"\u8fd4\u56de\u7f13\u5b58\u7ed3\u679c\"]\n    C --&gt;|\"\u7f13\u5b58\u672a\u547d\u4e2d\"| E[\"\u521b\u5efa\u4efb\u52a1\"]\n    E --&gt; F[\"OCR \u5904\u7406\"]\n    F --&gt; G[\"LLM \u8868\u5355\u5206\u6790\"]\n    G --&gt; H[\"\u7ed3\u679c\u5b58\u50a8\"]\n    H --&gt; I[\"\u8fd4\u56de\u5904\u7406\u7ed3\u679c\"]</code></pre>"},{"location":"workflows/form-processing/#_3","title":"\u8be6\u7ec6\u6d41\u7a0b","text":""},{"location":"workflows/form-processing/#1","title":"1. \u8bf7\u6c42\u63a5\u6536\u4e0e\u9a8c\u8bc1","text":"<p>\u8868\u5355\u5904\u7406\u6d41\u7a0b\u4ece\u63a5\u6536\u5ba2\u6237\u7aef\u8bf7\u6c42\u5f00\u59cb\uff1a</p> <ol> <li>\u63a5\u6536\u8bf7\u6c42\uff1a</li> <li>\u5ba2\u6237\u7aef\u901a\u8fc7 <code>/api/process_form</code> \u7aef\u70b9\u53d1\u9001\u8bf7\u6c42</li> <li>\u8bf7\u6c42\u5305\u542b\u52a0\u5bc6\u7684\u8868\u5355\u56fe\u50cf\uff08Base64 \u683c\u5f0f\uff09</li> <li> <p>\u8bf7\u6c42\u4f7f\u7528 RSA \u548c AES \u6df7\u5408\u52a0\u5bc6</p> </li> <li> <p>\u8bf7\u6c42\u89e3\u5bc6\uff1a</p> </li> <li>\u4f7f\u7528 RSA \u79c1\u94a5\u89e3\u5bc6 AES \u5bc6\u94a5</li> <li>\u4f7f\u7528 AES \u5bc6\u94a5\u89e3\u5bc6\u8bf7\u6c42\u6570\u636e</li> <li> <p>\u9a8c\u8bc1\u8bf7\u6c42\u7b7e\u540d\uff0c\u786e\u4fdd\u6570\u636e\u5b8c\u6574\u6027</p> </li> <li> <p>\u53c2\u6570\u9a8c\u8bc1\uff1a</p> </li> <li>\u9a8c\u8bc1\u8bf7\u6c42\u53c2\u6570\u662f\u5426\u5b8c\u6574</li> <li>\u9a8c\u8bc1\u56fe\u50cf\u683c\u5f0f\u662f\u5426\u6b63\u786e</li> <li>\u9a8c\u8bc1\u56fe\u50cf\u6570\u91cf\u662f\u5426\u5728\u5141\u8bb8\u8303\u56f4\u5185</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>@app.route('/api/process_form', methods=['POST'])\ndef process_form():\n    try:\n        # \u89e3\u5bc6\u8bf7\u6c42\n        if not request.is_json:\n            return jsonify({\"error\": \"\u8bf7\u6c42\u5fc5\u987b\u662fJSON\u683c\u5f0f\"}), 400\n\n        data = request.get_json()\n\n        # \u9a8c\u8bc1\u5fc5\u8981\u53c2\u6570\n        required_fields = ['encrypted_data', 'encrypted_key', 'signature']\n        for field in required_fields:\n            if field not in data:\n                return jsonify({\"error\": f\"\u7f3a\u5c11\u5fc5\u8981\u53c2\u6570: {field}\"}), 400\n\n        # \u89e3\u5bc6\u8bf7\u6c42\u6570\u636e\n        try:\n            decrypted_data, aes_key = decrypt_request(\n                data['encrypted_data'],\n                data['encrypted_key'],\n                data['signature']\n            )\n        except Exception as e:\n            return jsonify({\"error\": f\"\u8bf7\u6c42\u89e3\u5bc6\u5931\u8d25: {str(e)}\"}), 400\n\n        # \u9a8c\u8bc1\u89e3\u5bc6\u540e\u7684\u6570\u636e\n        if 'images' not in decrypted_data or not isinstance(decrypted_data['images'], list):\n            return jsonify({\"error\": \"\u7f3a\u5c11images\u53c2\u6570\u6216\u683c\u5f0f\u4e0d\u6b63\u786e\"}), 400\n\n        if len(decrypted_data['images']) == 0:\n            return jsonify({\"error\": \"\u81f3\u5c11\u9700\u8981\u63d0\u4f9b\u4e00\u5f20\u56fe\u50cf\"}), 400\n\n        if len(decrypted_data['images']) &gt; MAX_IMAGES:\n            return jsonify({\"error\": f\"\u56fe\u50cf\u6570\u91cf\u8d85\u8fc7\u9650\u5236\uff08\u6700\u5927 {MAX_IMAGES} \u5f20\uff09\"}), 400\n\n        # \u5904\u7406\u8bf7\u6c42...\n</code></pre>"},{"location":"workflows/form-processing/#2","title":"2. \u7f13\u5b58\u68c0\u67e5\u4e0e\u4efb\u52a1\u521b\u5efa","text":"<p>\u5728\u5904\u7406\u8bf7\u6c42\u4e4b\u524d\uff0c\u7cfb\u7edf\u4f1a\u68c0\u67e5\u662f\u5426\u6709\u7f13\u5b58\u7684\u7ed3\u679c\uff0c\u4ee5\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff1a</p> <ol> <li>\u7f13\u5b58\u68c0\u67e5\uff1a</li> <li>\u6839\u636e\u8bf7\u6c42\u53c2\u6570\u751f\u6210\u7f13\u5b58\u952e</li> <li>\u67e5\u8be2\u6570\u636e\u5e93\u662f\u5426\u6709\u5339\u914d\u7684\u7f13\u5b58\u7ed3\u679c</li> <li> <p>\u5982\u679c\u7f13\u5b58\u547d\u4e2d\uff0c\u76f4\u63a5\u8fd4\u56de\u7f13\u5b58\u7ed3\u679c</p> </li> <li> <p>\u4efb\u52a1\u521b\u5efa\uff1a</p> </li> <li>\u5982\u679c\u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u751f\u6210\u552f\u4e00\u7684\u4efb\u52a1 ID</li> <li>\u521b\u5efa\u4efb\u52a1\u8bb0\u5f55\uff0c\u8bbe\u7f6e\u72b6\u6001\u4e3a\"\u5f85\u5904\u7406\"</li> <li> <p>\u5c06\u4efb\u52a1\u6dfb\u52a0\u5230\u5904\u7406\u961f\u5217</p> </li> <li> <p>\u8fd4\u56de\u4efb\u52a1 ID\uff1a</p> </li> <li>\u5411\u5ba2\u6237\u7aef\u8fd4\u56de\u4efb\u52a1 ID</li> <li>\u5ba2\u6237\u7aef\u53ef\u4ee5\u4f7f\u7528\u4efb\u52a1 ID \u67e5\u8be2\u5904\u7406\u72b6\u6001\u548c\u7ed3\u679c</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code># \u68c0\u67e5\u7f13\u5b58\ncache_key = sha256_hash(json.dumps(decrypted_data, sort_keys=True))\ncached_result = check_cache(cache_key)\n\nif cached_result:\n    # \u8fd4\u56de\u7f13\u5b58\u7ed3\u679c\n    response = encrypt_response(cached_result, aes_key)\n    return jsonify(response), 200\n\n# \u521b\u5efa\u4efb\u52a1\ntask_id = str(uuid.uuid4())\ncreate_task_record(task_id, 'form')\n\n# \u6784\u5efa\u4efb\u52a1\u5bf9\u8c61\ntask = {\n    'id': task_id,\n    'type': 'form',\n    'data': decrypted_data,\n    'cache_key': cache_key,\n    'aes_key': aes_key\n}\n\n# \u6dfb\u52a0\u4efb\u52a1\u5230\u961f\u5217\nadd_task_to_queue(task)\n\n# \u8fd4\u56de\u4efb\u52a1 ID\nresponse = encrypt_response({'task_id': task_id}, aes_key)\nreturn jsonify(response), 202  # 202 Accepted\n</code></pre>"},{"location":"workflows/form-processing/#3-ocr","title":"3. OCR \u5904\u7406","text":"<p>\u4efb\u52a1\u8fdb\u5165\u961f\u5217\u540e\uff0c\u5de5\u4f5c\u7ebf\u7a0b\u4f1a\u6267\u884c OCR \u5904\u7406\uff1a</p> <ol> <li>\u56fe\u50cf\u9884\u5904\u7406\uff1a</li> <li>\u89e3\u7801 Base64 \u56fe\u50cf</li> <li> <p>\u8fdb\u884c\u5fc5\u8981\u7684\u56fe\u50cf\u4f18\u5316\uff08\u5982\u8c03\u6574\u5927\u5c0f\u3001\u589e\u5f3a\u5bf9\u6bd4\u5ea6\u7b49\uff09</p> </li> <li> <p>OCR \u670d\u52a1\u8c03\u7528\uff1a</p> </li> <li>\u8c03\u7528 CnOCR \u670d\u52a1\u8fdb\u884c\u6587\u672c\u8bc6\u522b</li> <li>\u5e76\u884c\u5904\u7406\u591a\u4e2a\u56fe\u50cf\uff0c\u63d0\u9ad8\u6548\u7387</li> <li> <p>\u4f7f\u7528\u4fe1\u53f7\u91cf\u63a7\u5236\u5e76\u53d1\u5ea6</p> </li> <li> <p>OCR \u7ed3\u679c\u5904\u7406\uff1a</p> </li> <li>\u6536\u96c6\u6240\u6709\u56fe\u50cf\u7684 OCR \u7ed3\u679c</li> <li>\u5408\u5e76\u4e3a\u5b8c\u6574\u7684\u6587\u672c\u5185\u5bb9</li> <li>\u51c6\u5907\u7528\u4e8e LLM \u5206\u6790\u7684\u8f93\u5165</li> </ol> <p>\u8868\u5355\u5904\u7406\u7684 OCR \u6b65\u9aa4\u4e0e\u6587\u6863\u5904\u7406\u7c7b\u4f3c\uff0c\u4f46\u53ef\u80fd\u4f1a\u9488\u5bf9\u8868\u5355\u7ed3\u6784\u8fdb\u884c\u7279\u6b8a\u4f18\u5316\uff0c\u5982\u4fdd\u7559\u6587\u672c\u7684\u7a7a\u95f4\u4f4d\u7f6e\u4fe1\u606f\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u8bc6\u522b\u8868\u5355\u7ed3\u6784\u3002</p>"},{"location":"workflows/form-processing/#4-llm","title":"4. LLM \u5904\u7406","text":"<p>OCR \u5904\u7406\u5b8c\u6210\u540e\uff0c\u7cfb\u7edf\u4f1a\u4f7f\u7528 LLM \u5206\u6790\u8868\u5355\u5185\u5bb9\uff1a</p> <ol> <li>\u63d0\u793a\u6784\u5efa\uff1a</li> <li>\u4f7f\u7528\u8868\u5355\u5904\u7406\u7684\u63d0\u793a\u6a21\u677f</li> <li>\u5c06 OCR \u6587\u672c\u63d2\u5165\u63d0\u793a\u6a21\u677f</li> <li> <p>\u6307\u5bfc LLM \u8bc6\u522b\u8868\u5355\u5b57\u6bb5\u548c\u503c</p> </li> <li> <p>LLM API \u8c03\u7528\uff1a</p> </li> <li>\u8c03\u7528\u667a\u8c31 AI \u7684 LLM API</li> <li>\u53d1\u9001\u6784\u5efa\u7684\u63d0\u793a</li> <li> <p>\u63a5\u6536 LLM \u7684\u54cd\u5e94</p> </li> <li> <p>\u54cd\u5e94\u89e3\u6790\uff1a</p> </li> <li>\u89e3\u6790 LLM \u8fd4\u56de\u7684\u6587\u672c</li> <li>\u63d0\u53d6 JSON \u683c\u5f0f\u7684\u7ed3\u6784\u5316\u6570\u636e</li> <li>\u5904\u7406\u53ef\u80fd\u7684\u683c\u5f0f\u95ee\u9898</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def process_form_task(task):\n    \"\"\"\u5904\u7406\u8868\u5355\u7c7b\u578b\u7684\u4efb\u52a1\"\"\"\n    update_task_status(task['id'], 'processing')\n\n    try:\n        # \u5904\u7406\u56fe\u50cf\n        ocr_results = process_images(task['data']['images'])\n\n        # \u6784\u5efa\u63d0\u793a\u5e76\u8c03\u7528 LLM\n        prompt = build_form_prompt(ocr_results)\n        llm_result = call_llm_api(prompt)\n\n        # \u89e3\u6790\u7ed3\u679c\n        parsed_result = parse_form_result(llm_result)\n\n        # \u683c\u5f0f\u5316\u7ed3\u679c\n        final_result = format_form_result(parsed_result)\n\n        # \u66f4\u65b0\u4efb\u52a1\u72b6\u6001\u548c\u7ed3\u679c\n        update_task_status(task['id'], 'completed', final_result)\n\n        # \u5b58\u50a8\u7f13\u5b58\n        store_cache(task['cache_key'], final_result)\n\n    except Exception as e:\n        update_task_status(task['id'], 'error', {\"error\": str(e)})\n        raise\n</code></pre>"},{"location":"workflows/form-processing/#5","title":"5. \u7ed3\u679c\u5904\u7406","text":"<p>LLM \u5904\u7406\u5b8c\u6210\u540e\uff0c\u7cfb\u7edf\u4f1a\u5904\u7406\u548c\u5b58\u50a8\u7ed3\u679c\uff1a</p> <ol> <li>\u7ed3\u679c\u683c\u5f0f\u5316\uff1a</li> <li>\u5c06\u89e3\u6790\u540e\u7684 LLM \u7ed3\u679c\u8f6c\u6362\u4e3a\u6807\u51c6\u683c\u5f0f</li> <li>\u6dfb\u52a0\u5143\u6570\u636e\uff08\u5982\u5904\u7406\u65f6\u95f4\u3001\u6765\u6e90\u7b49\uff09</li> <li> <p>\u786e\u4fdd\u8f93\u51fa\u683c\u5f0f\u7684\u4e00\u81f4\u6027</p> </li> <li> <p>\u7ed3\u679c\u5b58\u50a8\uff1a</p> </li> <li>\u66f4\u65b0\u4efb\u52a1\u72b6\u6001\u4e3a\"\u5df2\u5b8c\u6210\"</li> <li>\u5b58\u50a8\u5904\u7406\u7ed3\u679c</li> <li> <p>\u5c06\u7ed3\u679c\u6dfb\u52a0\u5230\u7f13\u5b58</p> </li> <li> <p>\u9519\u8bef\u5904\u7406\uff1a</p> </li> <li>\u5982\u679c\u5904\u7406\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u9519\u8bef\uff0c\u8bb0\u5f55\u9519\u8bef\u4fe1\u606f</li> <li>\u66f4\u65b0\u4efb\u52a1\u72b6\u6001\u4e3a\"\u9519\u8bef\"</li> <li>\u5b58\u50a8\u9519\u8bef\u8be6\u60c5</li> </ol> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>def format_form_result(parsed_result):\n    \"\"\"\u683c\u5f0f\u5316\u8868\u5355\u5904\u7406\u7ed3\u679c\"\"\"\n    # \u786e\u4fdd\u7ed3\u679c\u5305\u542b\u5fc5\u8981\u7684\u5b57\u6bb5\n    result = {\n        \"form_title\": parsed_result.get(\"form_title\", \"\u672a\u77e5\u8868\u5355\"),\n        \"form_type\": parsed_result.get(\"form_type\", \"\u672a\u77e5\u7c7b\u578b\"),\n        \"fields\": parsed_result.get(\"fields\", []),\n        \"metadata\": parsed_result.get(\"metadata\", {}),\n        \"processing_metadata\": {\n            \"processed_at\": int(time.time()),\n            \"source\": \"form_processing\"\n        }\n    }\n\n    # \u786e\u4fdd\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u6709\u5fc5\u8981\u7684\u5c5e\u6027\n    for field in result[\"fields\"]:\n        if \"name\" not in field:\n            field[\"name\"] = \"\u672a\u547d\u540d\u5b57\u6bb5\"\n        if \"value\" not in field:\n            field[\"value\"] = \"\"\n        if \"category\" not in field:\n            field[\"category\"] = \"\u5176\u4ed6\"\n\n    return result\n</code></pre>"},{"location":"workflows/form-processing/#6","title":"6. \u72b6\u6001\u67e5\u8be2\u4e0e\u7ed3\u679c\u8fd4\u56de","text":"<p>\u5ba2\u6237\u7aef\u53ef\u4ee5\u4f7f\u7528\u4efb\u52a1 ID \u67e5\u8be2\u5904\u7406\u72b6\u6001\u548c\u7ed3\u679c\uff0c\u8fd9\u4e00\u6b65\u9aa4\u4e0e\u6587\u6863\u5904\u7406\u6d41\u7a0b\u7c7b\u4f3c\u3002</p>"},{"location":"workflows/form-processing/#_4","title":"\u8868\u5355\u5904\u7406\u63d0\u793a","text":"<p>\u8868\u5355\u5904\u7406\u6d41\u7a0b\u4f7f\u7528\u4e13\u95e8\u8bbe\u8ba1\u7684\u63d0\u793a\u6a21\u677f\uff0c\u5f15\u5bfc LLM \u8bc6\u522b\u8868\u5355\u5b57\u6bb5\u548c\u503c\uff1a</p> <pre><code>\u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u8868\u5355\u5206\u6790\u52a9\u624b\u3002\u8bf7\u5206\u6790\u4ee5\u4e0b\u8868\u5355\u5185\u5bb9\uff0c\u63d0\u53d6\u6240\u6709\u5b57\u6bb5\u53ca\u5176\u503c\u3002\n\n\u8868\u5355\u5185\u5bb9\uff1a\n{form_text}\n\n\u8bf7\u6267\u884c\u4ee5\u4e0b\u4efb\u52a1\uff1a\n1. \u8bc6\u522b\u8868\u5355\u7684\u7c7b\u578b\u548c\u6807\u9898\n2. \u63d0\u53d6\u6240\u6709\u5b57\u6bb5\u540d\u79f0\u548c\u5bf9\u5e94\u7684\u503c\n3. \u5bf9\u5b57\u6bb5\u8fdb\u884c\u5206\u7c7b\uff08\u4e2a\u4eba\u4fe1\u606f\u3001\u8054\u7cfb\u65b9\u5f0f\u3001\u5176\u4ed6\u4fe1\u606f\u7b49\uff09\n\n\u8bf7\u4ee5JSON\u683c\u5f0f\u8f93\u51fa\u7ed3\u679c\uff0c\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\uff1a\n- form_title: \u8868\u5355\u6807\u9898\n- form_type: \u8868\u5355\u7c7b\u578b\n- fields: \u5b57\u6bb5\u5217\u8868\uff0c\u6bcf\u4e2a\u5b57\u6bb5\u5305\u542b\uff1a\n  - name: \u5b57\u6bb5\u540d\u79f0\n  - value: \u5b57\u6bb5\u503c\n  - category: \u5b57\u6bb5\u7c7b\u522b\n- metadata: \u8868\u5355\u5143\u6570\u636e\uff0c\u5305\u542b\u8868\u5355ID\u3001\u65e5\u671f\u7b49\u4fe1\u606f\uff08\u5982\u679c\u6709\uff09\n</code></pre> <p>\u8fd9\u4e2a\u63d0\u793a\u6a21\u677f\u6307\u5bfc LLM \u4ece\u8868\u5355\u4e2d\u63d0\u53d6\u5b57\u6bb5\u548c\u503c\uff0c\u5e76\u5bf9\u5b57\u6bb5\u8fdb\u884c\u5206\u7c7b\uff0c\u4ee5\u7ed3\u6784\u5316\u7684 JSON \u683c\u5f0f\u8f93\u51fa\u7ed3\u679c\u3002</p>"},{"location":"workflows/form-processing/#_5","title":"\u5904\u7406\u7ed3\u679c\u793a\u4f8b","text":"<p>\u8868\u5355\u5904\u7406\u6d41\u7a0b\u7684\u8f93\u51fa\u662f\u7ed3\u6784\u5316\u7684 JSON \u6570\u636e\uff0c\u5305\u542b\u8868\u5355\u7684\u5b57\u6bb5\u548c\u503c\uff1a</p> <pre><code>{\n  \"form_title\": \"\u4e2a\u4eba\u4fe1\u606f\u767b\u8bb0\u8868\",\n  \"form_type\": \"\u767b\u8bb0\u8868\",\n  \"fields\": [\n    {\n      \"name\": \"\u59d3\u540d\",\n      \"value\": \"\u5f20\u4e09\",\n      \"category\": \"\u4e2a\u4eba\u4fe1\u606f\"\n    },\n    {\n      \"name\": \"\u6027\u522b\",\n      \"value\": \"\u7537\",\n      \"category\": \"\u4e2a\u4eba\u4fe1\u606f\"\n    },\n    {\n      \"name\": \"\u51fa\u751f\u65e5\u671f\",\n      \"value\": \"1990-01-01\",\n      \"category\": \"\u4e2a\u4eba\u4fe1\u606f\"\n    },\n    {\n      \"name\": \"\u8eab\u4efd\u8bc1\u53f7\",\n      \"value\": \"310************123\",\n      \"category\": \"\u4e2a\u4eba\u4fe1\u606f\"\n    },\n    {\n      \"name\": \"\u624b\u673a\u53f7\u7801\",\n      \"value\": \"138********\",\n      \"category\": \"\u8054\u7cfb\u65b9\u5f0f\"\n    },\n    {\n      \"name\": \"\u7535\u5b50\u90ae\u7bb1\",\n      \"value\": \"zhangsan@example.com\",\n      \"category\": \"\u8054\u7cfb\u65b9\u5f0f\"\n    },\n    {\n      \"name\": \"\u901a\u8baf\u5730\u5740\",\n      \"value\": \"\u4e0a\u6d77\u5e02\u6d66\u4e1c\u65b0\u533a\u5f20\u6c5f\u9ad8\u79d1\u6280\u56ed\u533a\",\n      \"category\": \"\u8054\u7cfb\u65b9\u5f0f\"\n    },\n    {\n      \"name\": \"\u5b66\u5386\",\n      \"value\": \"\u672c\u79d1\",\n      \"category\": \"\u6559\u80b2\u80cc\u666f\"\n    },\n    {\n      \"name\": \"\u6bd5\u4e1a\u9662\u6821\",\n      \"value\": \"\u4e0a\u6d77\u5927\u5b66\",\n      \"category\": \"\u6559\u80b2\u80cc\u666f\"\n    },\n    {\n      \"name\": \"\u4e13\u4e1a\",\n      \"value\": \"\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\",\n      \"category\": \"\u6559\u80b2\u80cc\u666f\"\n    },\n    {\n      \"name\": \"\u5de5\u4f5c\u5355\u4f4d\",\n      \"value\": \"ABC\u79d1\u6280\u6709\u9650\u516c\u53f8\",\n      \"category\": \"\u5de5\u4f5c\u4fe1\u606f\"\n    },\n    {\n      \"name\": \"\u804c\u4f4d\",\n      \"value\": \"\u8f6f\u4ef6\u5de5\u7a0b\u5e08\",\n      \"category\": \"\u5de5\u4f5c\u4fe1\u606f\"\n    }\n  ],\n  \"metadata\": {\n    \"form_id\": \"REG20230001\",\n    \"creation_date\": \"2023-03-15\"\n  },\n  \"processing_metadata\": {\n    \"processed_at\": 1679012345,\n    \"source\": \"form_processing\"\n  }\n}\n</code></pre>"},{"location":"workflows/form-processing/#_6","title":"\u8868\u5355\u5904\u7406\u7684\u7279\u6b8a\u8003\u91cf","text":"<p>\u8868\u5355\u5904\u7406\u4e0e\u6587\u6863\u5904\u7406\u76f8\u6bd4\uff0c\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u8003\u91cf\uff1a</p> <ol> <li>\u7ed3\u6784\u8bc6\u522b\uff1a</li> <li>\u8868\u5355\u901a\u5e38\u6709\u660e\u786e\u7684\u7ed3\u6784\uff0c\u5305\u62ec\u5b57\u6bb5\u540d\u548c\u5b57\u6bb5\u503c</li> <li>\u9700\u8981\u51c6\u786e\u8bc6\u522b\u5b57\u6bb5\u4e4b\u95f4\u7684\u5173\u7cfb</li> <li> <p>\u5904\u7406\u8868\u683c\u3001\u590d\u9009\u6846\u3001\u5355\u9009\u6309\u94ae\u7b49\u7279\u6b8a\u5143\u7d20</p> </li> <li> <p>\u5b57\u6bb5\u5206\u7c7b\uff1a</p> </li> <li>\u5c06\u5b57\u6bb5\u5206\u7c7b\u4e3a\u4e0d\u540c\u7684\u7c7b\u522b\uff08\u5982\u4e2a\u4eba\u4fe1\u606f\u3001\u8054\u7cfb\u65b9\u5f0f\u7b49\uff09</li> <li>\u5e2e\u52a9\u7528\u6237\u66f4\u597d\u5730\u7406\u89e3\u8868\u5355\u7ed3\u6784</li> <li> <p>\u652f\u6301\u540e\u7eed\u7684\u6570\u636e\u5904\u7406\u548c\u5206\u6790</p> </li> <li> <p>\u503c\u7c7b\u578b\u8bc6\u522b\uff1a</p> </li> <li>\u8bc6\u522b\u5b57\u6bb5\u503c\u7684\u7c7b\u578b\uff08\u5982\u6587\u672c\u3001\u65e5\u671f\u3001\u6570\u5b57\u7b49\uff09</li> <li>\u5904\u7406\u7279\u6b8a\u683c\u5f0f\u7684\u503c\uff08\u5982\u8eab\u4efd\u8bc1\u53f7\u3001\u7535\u8bdd\u53f7\u7801\u7b49\uff09</li> <li> <p>\u786e\u4fdd\u503c\u7684\u683c\u5f0f\u4e00\u81f4\u6027</p> </li> <li> <p>\u7a7a\u503c\u5904\u7406\uff1a</p> </li> <li>\u8bc6\u522b\u672a\u586b\u5199\u7684\u5b57\u6bb5</li> <li>\u533a\u5206\u7a7a\u503c\u548c\u65e0\u6cd5\u8bc6\u522b\u7684\u503c</li> <li>\u63d0\u4f9b\u9002\u5f53\u7684\u9ed8\u8ba4\u503c\u6216\u6807\u8bb0</li> </ol>"},{"location":"workflows/form-processing/#_7","title":"\u9519\u8bef\u5904\u7406","text":"<p>\u8868\u5355\u5904\u7406\u6d41\u7a0b\u5b9e\u73b0\u4e86\u5168\u9762\u7684\u9519\u8bef\u5904\u7406\u673a\u5236\uff0c\u4e0e\u6587\u6863\u5904\u7406\u6d41\u7a0b\u7c7b\u4f3c\uff0c\u4f46\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u7279\u5b9a\u4e8e\u8868\u5355\u7684\u9519\u8bef\u5904\u7406\uff1a</p> <ol> <li>\u8868\u5355\u7ed3\u6784\u9519\u8bef\uff1a</li> <li>\u65e0\u6cd5\u8bc6\u522b\u8868\u5355\u7ed3\u6784</li> <li>\u5b57\u6bb5\u540d\u548c\u503c\u65e0\u6cd5\u5339\u914d</li> <li> <p>\u8868\u5355\u683c\u5f0f\u4e0d\u89c4\u8303</p> </li> <li> <p>\u5b57\u6bb5\u8bc6\u522b\u9519\u8bef\uff1a</p> </li> <li>\u65e0\u6cd5\u8bc6\u522b\u67d0\u4e9b\u5b57\u6bb5</li> <li>\u5b57\u6bb5\u5206\u7c7b\u9519\u8bef</li> <li>\u5b57\u6bb5\u503c\u89e3\u6790\u9519\u8bef</li> </ol>"},{"location":"workflows/form-processing/#_8","title":"\u6027\u80fd\u4f18\u5316","text":"<p>\u8868\u5355\u5904\u7406\u6d41\u7a0b\u5b9e\u73b0\u4e86\u591a\u79cd\u6027\u80fd\u4f18\u5316\u63aa\u65bd\uff0c\u4e0e\u6587\u6863\u5904\u7406\u6d41\u7a0b\u7c7b\u4f3c\uff0c\u4f46\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u7279\u5b9a\u4e8e\u8868\u5355\u7684\u4f18\u5316\uff1a</p> <ol> <li>\u8868\u5355\u6a21\u677f\u8bc6\u522b\uff1a</li> <li>\u8bc6\u522b\u5e38\u89c1\u7684\u8868\u5355\u6a21\u677f</li> <li>\u4f7f\u7528\u9884\u5b9a\u4e49\u7684\u5b57\u6bb5\u6620\u5c04</li> <li> <p>\u63d0\u9ad8\u5904\u7406\u6548\u7387\u548c\u51c6\u786e\u6027</p> </li> <li> <p>\u5b57\u6bb5\u4f4d\u7f6e\u5b66\u4e60\uff1a</p> </li> <li>\u5b66\u4e60\u5b57\u6bb5\u5728\u8868\u5355\u4e2d\u7684\u4f4d\u7f6e\u6a21\u5f0f</li> <li>\u4f18\u5316\u5b57\u6bb5\u8bc6\u522b\u7b97\u6cd5</li> <li>\u63d0\u9ad8\u5904\u7406\u51c6\u786e\u6027</li> </ol> <p>\u901a\u8fc7\u8fd9\u4e9b\u8bbe\u8ba1\u548c\u5b9e\u73b0\uff0c\u8868\u5355\u5904\u7406\u6d41\u7a0b\u80fd\u591f\u9ad8\u6548\u3001\u53ef\u9760\u5730\u4ece\u8868\u5355\u56fe\u50cf\u4e2d\u63d0\u53d6\u7ed3\u6784\u5316\u6570\u636e\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u6709\u4ef7\u503c\u7684\u8868\u5355\u5904\u7406\u670d\u52a1\u3002</p>"},{"location":"workflows/overview/","title":"\u6d41\u7a0b\u6982\u8ff0","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u652f\u6301\u4e09\u79cd\u4e3b\u8981\u7684\u4e1a\u52a1\u6d41\u7a0b\uff1a\u6587\u6863\u5904\u7406\u3001\u8868\u5355\u5904\u7406\u548c\u8868\u5355\u81ea\u52a8\u586b\u5145\u3002\u8fd9\u4e9b\u6d41\u7a0b\u5171\u4eab\u76f8\u4f3c\u7684\u5904\u7406\u67b6\u6784\uff0c\u4f46\u5728\u7ec6\u8282\u4e0a\u6709\u6240\u4e0d\u540c\uff0c\u4ee5\u9002\u5e94\u4e0d\u540c\u7684\u4e1a\u52a1\u9700\u6c42\u3002\u672c\u9875\u9762\u63d0\u4f9b\u8fd9\u4e9b\u6d41\u7a0b\u7684\u6982\u8ff0\u3002</p>"},{"location":"workflows/overview/#_2","title":"\u4e3b\u8981\u4e1a\u52a1\u6d41\u7a0b","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u4e3b\u8981\u4e1a\u52a1\u6d41\u7a0b\uff1a</p> <ol> <li>\u6587\u6863\u5904\u7406\u6d41\u7a0b\uff1a</li> <li>\u5c06\u6587\u6863\u56fe\u50cf\u8f6c\u6362\u4e3a\u6587\u672c</li> <li>\u5206\u6790\u6587\u6863\u7ed3\u6784\u548c\u5185\u5bb9</li> <li>\u63d0\u53d6\u5173\u952e\u4fe1\u606f</li> <li> <p>\u751f\u6210\u7ed3\u6784\u5316\u7684\u6587\u6863\u6570\u636e</p> </li> <li> <p>\u8868\u5355\u5904\u7406\u6d41\u7a0b\uff1a</p> </li> <li>\u5c06\u8868\u5355\u56fe\u50cf\u8f6c\u6362\u4e3a\u6587\u672c</li> <li>\u8bc6\u522b\u8868\u5355\u5b57\u6bb5\u548c\u503c</li> <li>\u63d0\u53d6\u5b57\u6bb5-\u503c\u5bf9</li> <li> <p>\u751f\u6210\u7ed3\u6784\u5316\u7684\u8868\u5355\u6570\u636e</p> </li> <li> <p>\u8868\u5355\u81ea\u52a8\u586b\u5145\u6d41\u7a0b\uff1a</p> </li> <li>\u5206\u6790\u7a7a\u767d\u8868\u5355\u7ed3\u6784</li> <li>\u5339\u914d\u7528\u6237\u63d0\u4f9b\u7684\u4fe1\u606f\u4e0e\u8868\u5355\u5b57\u6bb5</li> <li>\u751f\u6210\u586b\u5145\u540e\u7684\u8868\u5355\u6570\u636e</li> <li>\u6807\u8bc6\u7f3a\u5931\u7684\u5fc5\u8981\u4fe1\u606f</li> </ol>"},{"location":"workflows/overview/#_3","title":"\u901a\u7528\u5904\u7406\u67b6\u6784","text":"<p>\u5c3d\u7ba1\u4e09\u79cd\u4e1a\u52a1\u6d41\u7a0b\u5728\u7ec6\u8282\u4e0a\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u5b83\u4eec\u5171\u4eab\u4e00\u4e2a\u901a\u7528\u7684\u5904\u7406\u67b6\u6784\uff1a</p> <pre><code>graph TD\n    A[\"\u5ba2\u6237\u7aef\u8bf7\u6c42\"] --&gt; B[\"\u8bf7\u6c42\u9a8c\u8bc1\u4e0e\u89e3\u5bc6\"]\n    B --&gt; C[\"\u4efb\u52a1\u521b\u5efa\u4e0e\u961f\u5217\"]\n    C --&gt; D[\"OCR \u5904\u7406\"]\n    D --&gt; E[\"LLM \u5904\u7406\"]\n    E --&gt; F[\"\u7ed3\u679c\u5b58\u50a8\"]\n    F --&gt; G[\"\u54cd\u5e94\u52a0\u5bc6\u4e0e\u8fd4\u56de\"]\n    H[\"\u72b6\u6001\u67e5\u8be2\"] --&gt; I[\"\u7ed3\u679c\u68c0\u7d22\"]\n    I --&gt; J[\"\u54cd\u5e94\u751f\u6210\"]</code></pre> <p>\u8fd9\u4e2a\u901a\u7528\u67b6\u6784\u5305\u62ec\u4ee5\u4e0b\u5173\u952e\u6b65\u9aa4\uff1a</p> <ol> <li>\u8bf7\u6c42\u63a5\u6536\u4e0e\u9a8c\u8bc1\uff1a</li> <li>\u63a5\u6536\u5ba2\u6237\u7aef\u7684\u52a0\u5bc6\u8bf7\u6c42</li> <li>\u89e3\u5bc6\u8bf7\u6c42\u6570\u636e</li> <li> <p>\u9a8c\u8bc1\u8bf7\u6c42\u53c2\u6570\u548c\u683c\u5f0f</p> </li> <li> <p>\u4efb\u52a1\u7ba1\u7406\uff1a</p> </li> <li>\u521b\u5efa\u4efb\u52a1\u8bb0\u5f55</li> <li>\u5c06\u4efb\u52a1\u6dfb\u52a0\u5230\u5904\u7406\u961f\u5217</li> <li> <p>\u5206\u914d\u5de5\u4f5c\u7ebf\u7a0b\u5904\u7406\u4efb\u52a1</p> </li> <li> <p>OCR \u5904\u7406\uff1a</p> </li> <li>\u5904\u7406\u56fe\u50cf\uff0c\u63d0\u53d6\u6587\u672c\u5185\u5bb9</li> <li>\u5e76\u884c\u5904\u7406\u591a\u4e2a\u56fe\u50cf</li> <li> <p>\u5408\u5e76 OCR \u7ed3\u679c</p> </li> <li> <p>LLM \u5904\u7406\uff1a</p> </li> <li>\u6839\u636e\u4efb\u52a1\u7c7b\u578b\u6784\u5efa\u63d0\u793a</li> <li>\u8c03\u7528 LLM API \u5206\u6790\u6587\u672c</li> <li> <p>\u89e3\u6790 LLM \u54cd\u5e94</p> </li> <li> <p>\u7ed3\u679c\u5904\u7406\uff1a</p> </li> <li>\u5b58\u50a8\u5904\u7406\u7ed3\u679c</li> <li>\u66f4\u65b0\u4efb\u52a1\u72b6\u6001</li> <li> <p>\u52a0\u5bc6\u54cd\u5e94\u6570\u636e</p> </li> <li> <p>\u72b6\u6001\u67e5\u8be2\uff1a</p> </li> <li>\u5ba2\u6237\u7aef\u67e5\u8be2\u4efb\u52a1\u72b6\u6001</li> <li>\u68c0\u7d22\u4efb\u52a1\u7ed3\u679c</li> <li>\u8fd4\u56de\u72b6\u6001\u6216\u7ed3\u679c</li> </ol>"},{"location":"workflows/overview/#_4","title":"\u6d41\u7a0b\u5dee\u5f02","text":"<p>\u867d\u7136\u4e09\u79cd\u4e1a\u52a1\u6d41\u7a0b\u5171\u4eab\u901a\u7528\u67b6\u6784\uff0c\u4f46\u5b83\u4eec\u5728\u4ee5\u4e0b\u65b9\u9762\u5b58\u5728\u5dee\u5f02\uff1a</p>"},{"location":"workflows/overview/#1","title":"1. \u63d0\u793a\u6784\u5efa","text":"<p>\u6bcf\u79cd\u6d41\u7a0b\u4f7f\u7528\u4e0d\u540c\u7684\u63d0\u793a\u6a21\u677f\u5f15\u5bfc LLM \u8fdb\u884c\u7279\u5b9a\u7c7b\u578b\u7684\u5206\u6790\uff1a</p> <ul> <li>\u6587\u6863\u5904\u7406\uff1a\u63d0\u793a LLM \u5206\u6790\u6587\u6863\u7ed3\u6784\u3001\u8bc6\u522b\u6807\u9898\u3001\u6bb5\u843d\u3001\u5217\u8868\u7b49\uff0c\u63d0\u53d6\u5173\u952e\u4fe1\u606f</li> <li>\u8868\u5355\u5904\u7406\uff1a\u63d0\u793a LLM \u8bc6\u522b\u8868\u5355\u5b57\u6bb5\u548c\u503c\uff0c\u63d0\u53d6\u5b57\u6bb5-\u503c\u5bf9</li> <li>\u8868\u5355\u586b\u5145\uff1a\u63d0\u793a LLM \u5c06\u7528\u6237\u63d0\u4f9b\u7684\u4fe1\u606f\u4e0e\u8868\u5355\u5b57\u6bb5\u5339\u914d\uff0c\u751f\u6210\u586b\u5145\u540e\u7684\u8868\u5355\u6570\u636e</li> </ul>"},{"location":"workflows/overview/#2","title":"2. \u8f93\u5165\u53c2\u6570","text":"<p>\u4e0d\u540c\u6d41\u7a0b\u63a5\u53d7\u4e0d\u540c\u7684\u8f93\u5165\u53c2\u6570\uff1a</p> <ul> <li>\u6587\u6863\u5904\u7406\uff1a\u4ec5\u63a5\u53d7\u6587\u6863\u56fe\u50cf</li> <li>\u8868\u5355\u5904\u7406\uff1a\u4ec5\u63a5\u53d7\u8868\u5355\u56fe\u50cf</li> <li>\u8868\u5355\u586b\u5145\uff1a\u63a5\u53d7\u8868\u5355\u56fe\u50cf\u548c\u7528\u6237\u63d0\u4f9b\u7684\u4fe1\u606f</li> </ul>"},{"location":"workflows/overview/#3","title":"3. \u7ed3\u679c\u683c\u5f0f","text":"<p>\u4e0d\u540c\u6d41\u7a0b\u751f\u6210\u4e0d\u540c\u683c\u5f0f\u7684\u7ed3\u679c\uff1a</p> <ul> <li>\u6587\u6863\u5904\u7406\uff1a\u751f\u6210\u5305\u542b\u6587\u6863\u7ed3\u6784\u548c\u5185\u5bb9\u7684 JSON \u6570\u636e</li> <li>\u8868\u5355\u5904\u7406\uff1a\u751f\u6210\u5305\u542b\u5b57\u6bb5-\u503c\u5bf9\u7684 JSON \u6570\u636e</li> <li>\u8868\u5355\u586b\u5145\uff1a\u751f\u6210\u5305\u542b\u586b\u5145\u5b57\u6bb5\u548c\u7f3a\u5931\u5b57\u6bb5\u7684 JSON \u6570\u636e</li> </ul>"},{"location":"workflows/overview/#4","title":"4. \u5904\u7406\u7b56\u7565","text":"<p>\u4e0d\u540c\u6d41\u7a0b\u4f7f\u7528\u4e0d\u540c\u7684\u5904\u7406\u7b56\u7565\uff1a</p> <ul> <li>\u6587\u6863\u5904\u7406\uff1a\u4fa7\u91cd\u4e8e\u7406\u89e3\u6587\u6863\u7ed3\u6784\u548c\u5185\u5bb9</li> <li>\u8868\u5355\u5904\u7406\uff1a\u4fa7\u91cd\u4e8e\u51c6\u786e\u8bc6\u522b\u5b57\u6bb5\u548c\u503c</li> <li>\u8868\u5355\u586b\u5145\uff1a\u4fa7\u91cd\u4e8e\u4fe1\u606f\u5339\u914d\u548c\u63a8\u65ad</li> </ul>"},{"location":"workflows/overview/#_5","title":"\u6570\u636e\u6d41\u56fe","text":"<p>\u4e0b\u56fe\u5c55\u793a\u4e86 DocuSnap-Backend \u7cfb\u7edf\u4e2d\u7684\u6570\u636e\u6d41\uff1a</p> <p></p> <p>\u8fd9\u4e2a\u6570\u636e\u6d41\u56fe\u5c55\u793a\u4e86\u4ece\u5ba2\u6237\u7aef\u8bf7\u6c42\u5230\u54cd\u5e94\u7684\u5b8c\u6574\u6570\u636e\u6d41\u5411\uff0c\u5305\u62ec\u8bf7\u6c42\u5904\u7406\u3001\u4efb\u52a1\u6267\u884c\u3001\u7ed3\u679c\u5b58\u50a8\u548c\u54cd\u5e94\u5904\u7406\u7b49\u9636\u6bb5\u3002</p>"},{"location":"workflows/overview/#_6","title":"\u5f02\u6b65\u5904\u7406\u6a21\u5f0f","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u91c7\u7528\u5f02\u6b65\u5904\u7406\u6a21\u5f0f\uff0c\u5c06\u8bf7\u6c42\u63a5\u6536\u548c\u4efb\u52a1\u5904\u7406\u5206\u79bb\uff0c\u63d0\u9ad8\u7cfb\u7edf\u54cd\u5e94\u80fd\u529b\u548c\u5e76\u53d1\u5904\u7406\u80fd\u529b\uff1a</p> <ol> <li>\u8bf7\u6c42\u63a5\u6536\uff1a</li> <li>\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42</li> <li>\u7cfb\u7edf\u5feb\u901f\u521b\u5efa\u4efb\u52a1\u5e76\u8fd4\u56de\u4efb\u52a1 ID</li> <li> <p>\u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u7b49\u5f85\u5904\u7406\u5b8c\u6210</p> </li> <li> <p>\u5f02\u6b65\u5904\u7406\uff1a</p> </li> <li>\u5de5\u4f5c\u7ebf\u7a0b\u4ece\u961f\u5217\u83b7\u53d6\u4efb\u52a1</li> <li>\u6267\u884c OCR \u548c LLM \u5904\u7406</li> <li> <p>\u5b58\u50a8\u5904\u7406\u7ed3\u679c</p> </li> <li> <p>\u72b6\u6001\u67e5\u8be2\uff1a</p> </li> <li>\u5ba2\u6237\u7aef\u4f7f\u7528\u4efb\u52a1 ID \u67e5\u8be2\u72b6\u6001</li> <li>\u7cfb\u7edf\u8fd4\u56de\u5f53\u524d\u72b6\u6001\u6216\u5904\u7406\u7ed3\u679c</li> <li>\u5ba2\u6237\u7aef\u53ef\u4ee5\u5b9a\u671f\u8f6e\u8be2\u6216\u5b9e\u73b0\u56de\u8c03\u673a\u5236</li> </ol> <p>\u8fd9\u79cd\u5f02\u6b65\u5904\u7406\u6a21\u5f0f\u9002\u5408\u5904\u7406\u8017\u65f6\u7684 OCR \u548c LLM \u64cd\u4f5c\uff0c\u907f\u514d\u5ba2\u6237\u7aef\u957f\u65f6\u95f4\u7b49\u5f85\uff0c\u63d0\u9ad8\u7528\u6237\u4f53\u9a8c\u3002</p>"},{"location":"workflows/overview/#_7","title":"\u9519\u8bef\u5904\u7406","text":"<p>DocuSnap-Backend \u7cfb\u7edf\u5b9e\u73b0\u4e86\u5168\u9762\u7684\u9519\u8bef\u5904\u7406\u673a\u5236\uff0c\u786e\u4fdd\u6d41\u7a0b\u7684\u53ef\u9760\u6027\u548c\u7a33\u5b9a\u6027\uff1a</p> <ol> <li>\u8bf7\u6c42\u9a8c\u8bc1\u9519\u8bef\uff1a</li> <li>\u53c2\u6570\u7f3a\u5931\u6216\u683c\u5f0f\u9519\u8bef</li> <li>\u89e3\u5bc6\u5931\u8d25\u6216\u7b7e\u540d\u9a8c\u8bc1\u5931\u8d25</li> <li> <p>\u8fd4\u56de\u9002\u5f53\u7684\u9519\u8bef\u4ee3\u7801\u548c\u6d88\u606f</p> </li> <li> <p>\u5904\u7406\u9519\u8bef\uff1a</p> </li> <li>OCR \u5904\u7406\u5931\u8d25</li> <li>LLM API \u8c03\u7528\u5931\u8d25</li> <li>\u7ed3\u679c\u89e3\u6790\u5931\u8d25</li> <li> <p>\u8bb0\u5f55\u9519\u8bef\u4fe1\u606f\uff0c\u66f4\u65b0\u4efb\u52a1\u72b6\u6001</p> </li> <li> <p>\u7cfb\u7edf\u9519\u8bef\uff1a</p> </li> <li>\u6570\u636e\u5e93\u64cd\u4f5c\u5931\u8d25</li> <li>\u8d44\u6e90\u4e0d\u8db3</li> <li>\u670d\u52a1\u4e0d\u53ef\u7528</li> <li>\u8bb0\u5f55\u8be6\u7ec6\u9519\u8bef\u65e5\u5fd7\uff0c\u8fd4\u56de\u901a\u7528\u9519\u8bef\u6d88\u606f</li> </ol> <p>\u9519\u8bef\u5904\u7406\u673a\u5236\u786e\u4fdd\u7cfb\u7edf\u80fd\u591f\u4f18\u96c5\u5730\u5904\u7406\u5404\u79cd\u5f02\u5e38\u60c5\u51b5\uff0c\u63d0\u4f9b\u6e05\u6670\u7684\u9519\u8bef\u53cd\u9988\uff0c\u5e76\u5c3d\u53ef\u80fd\u5730\u6062\u590d\u6b63\u5e38\u64cd\u4f5c\u3002</p> <p>\u5728\u63a5\u4e0b\u6765\u7684\u9875\u9762\u4e2d\uff0c\u6211\u4eec\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u6bcf\u79cd\u4e1a\u52a1\u6d41\u7a0b\u7684\u5177\u4f53\u5b9e\u73b0\u548c\u6570\u636e\u6d41\u5411\u3002</p>"}]}